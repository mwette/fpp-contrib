#!/bin/bash
# -*- scheme -*-
FPPDIR=$(dirname $(realpath $0))
GUILE_LOAD_PATH=$FPPDIR:$HOME/repo/sv/nyacc/current
exec guile $0 "$@"
!#
(use-modules ((srfi srfi-1) #:select (fold)))
(use-modules (sxml match))
(use-modules (fpp-parser))

(use-modules (ice-9 pretty-print))
(define pp pretty-print)

(define (rsl->qid sl)
  (string-join (reverse sl) "."))

(define* (show-tlm tree #:optional (scope '()))
  (letrec ((probe-form
            (lambda (form scope seed)
              (sxml-match form
                ((seq . ,members)
                 (probe-members members scope seed))
                ((trans-unit . ,members)
                 (probe-members members scope seed))
                ((module-defn (ident ,name) (seq . ,members))
                 (probe-members members (cons name scope) seed))
                ((component-defn (ident ,name) (kind ,kind) . ,members)
                 (probe-members members (cons name scope) seed))
                ((telemetry (ident ,name) . ,_)
                 (cons `(tlm ,(rsl->qid (cons name scope))) seed))
                (,_ seed))))
           (probe-members
            (lambda (members scope seed)
              (fold (lambda (member seed) (probe-form member scope seed))
                    seed members))))
    (reverse (probe-form tree scope '()))))

(let* ((args (cdr (program-arguments)))
       (file (car args))
       (tree (read-fpp-file file #:debug #f))
       ;;(tlms (show-tlm tree '("foo")))
       )
  ;;(for-each (lambda (tlm) (simple-format #t "~s\n" (cadr tlm))) tlms)
  (pp tree)
  )

;; --- last line ---
