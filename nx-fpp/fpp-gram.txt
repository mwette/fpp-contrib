0 $start => translation-unit
1 elt-sep => ","
2 elt-sep => "\n"
3 elt-sep => mem-sep "\n"
4 mem-sep => ";"
5 mem-sep => "\n"
6 mem-sep => mem-sep "\n"
7 include-spec => "include" string
8 translation-unit => module-mem-seq
9 module-mem-seq =>
10 module-mem-seq => mod-mem mem-sep module-mem-seq
11 mod-mem => include-spec
12 mod-mem => component-defn
13 mod-mem => comp-inst-defn
14 mod-mem => topology-defn
15 mod-mem => const-defn
16 mod-mem => module-defn
17 mod-mem => port-defn
18 mod-mem => struct-defn
19 mod-mem => loc-spec
20 mod-mem => abs-type-defn
21 mod-mem => array-defn
22 mod-mem => enum-defn
23 module-defn => "module" ident "{" module-mem-seq "}"
24 port-defn => port-defn-2
25 port-defn-0 => "port" ident
26 port-defn-1 => port-defn-0
27 port-defn-1 => port-defn-0 "(" param-list ")"
28 port-defn-2 => port-defn-1
29 port-defn-2 => port-defn-1 "->" type-name
30 abs-type-defn => "type" ident
31 array-defn => "array" ident "=" index
32 const-defn => "constant" ident "=" expr
33 enum-defn => enum-defn-3
34 enum-defn-0 => "enum" ident
35 enum-defn-1 => enum-defn-0
36 enum-defn-1 => enum-defn-0 ":" type-name
37 enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}"
38 enum-defn-3 => enum-defn-2
39 enum-defn-3 => enum-defn-2 "default" expr
40 enum-mem-seq =>
41 enum-mem-seq => enum-mem elt-sep enum-mem-seq
42 enum-mem => ident
43 enum-mem => ident "=" expr
44 struct-defn => struct-defn-1
45 struct-defn-0 => "struct" ident "{" struct-mem-seq "}"
46 struct-defn-1 => struct-defn-0
47 struct-defn-1 => struct-defn-0 "default" expr
48 struct-mem-seq =>
49 struct-mem-seq => struct-mem mem-sep struct-mem-seq
50 struct-mem => struct-mem-3
51 struct-mem-0 => ident ":"
52 struct-mem-1 => struct-mem-0
53 struct-mem-1 => struct-mem-0 "[" expr "]"
54 struct-mem-2 => struct-mem-1 type-name
55 struct-mem-3 => struct-mem-2
56 struct-mem-3 => struct-mem-2 "format" string
57 component-defn => comp-kind ident "{" comp-mem-seq "}"
58 comp-kind => "active"
59 comp-kind => "passive"
60 comp-kind => "queued"
61 comp-mem-seq => comp-mem
62 comp-mem-seq => comp-mem-seq mem-sep comp-mem
63 comp-mem => include-spec
64 comp-mem => enum-defn
65 comp-mem => struct-defn
66 comp-mem => int-port-spec
67 comp-mem => port-inst
68 comp-mem => port-match-spec
69 comp-mem => command-spec
70 comp-mem => event-spec
71 comp-mem => param-spec
72 comp-mem => record-spec
73 comp-mem => prod-cont-spec
74 comp-mem => tlm-chan-spec
75 port-inst => gen-port-inst-4
76 port-inst => spc-port-inst-3
77 gen-port-inst-0 => input-port-kind "input" "port" ident ":"
78 gen-port-inst-0 => "output" "port" ident ":"
79 gen-port-inst-1 => gen-port-inst-0
80 gen-port-inst-1 => gen-port-inst-0 expr
81 gen-port-inst-2 => gen-port-inst-1 qual-ident
82 gen-port-inst-2 => gen-port-inst-1 "serial"
83 gen-port-inst-3 => gen-port-inst-2
84 gen-port-inst-3 => gen-port-inst-2 "priority" expr
85 gen-port-inst-4 => gen-port-inst-3
86 gen-port-inst-4 => gen-port-inst-3 queue-full-beh
87 spc-port-inst-0 => spc-port-kind "port" ident ":"
88 spc-port-inst-1 => spc-port-inst-0
89 spc-port-inst-1 => input-port-kind spc-port-inst-0
90 spc-port-inst-2 => spc-port-inst-1
91 spc-port-inst-2 => spc-port-inst-1 "priority" expr
92 spc-port-inst-3 => spc-port-inst-2
93 spc-port-inst-3 => spc-port-inst-2 queue-full-beh
94 int-port-spec => int-port-defn-3
95 int-port-defn-0 => "internal" "port" ident
96 int-port-defn-1 => int-port-defn-0
97 int-port-defn-1 => int-port-defn-0 "(" param-list ")"
98 int-port-defn-2 => int-port-defn-1
99 int-port-defn-2 => int-port-defn-1 "priority" expr
100 int-port-defn-3 => int-port-defn-2
101 int-port-defn-3 => int-port-defn-2 queue-full-beh
102 command-spec => cmd-spec-4
103 cmd-spec-0 => input-port-kind "command" ident
104 cmd-spec-1 => cmd-spec-0
105 cmd-spec-1 => cmd-spec-0 "(" param-list ")"
106 cmd-spec-2 => cmd-spec-1
107 cmd-spec-2 => cmd-spec-1 "opcode" expr
108 cmd-spec-3 => cmd-spec-2
109 cmd-spec-3 => cmd-spec-2 "priority" expr
110 cmd-spec-4 => cmd-spec-3
111 cmd-spec-4 => cmd-spec-3 queue-full-beh
112 spc-port-kind => "command" "recv"
113 spc-port-kind => "command" "reg"
114 spc-port-kind => "command" "resp"
115 spc-port-kind => "event"
116 spc-port-kind => "param" "get"
117 spc-port-kind => "param" "set"
118 spc-port-kind => "product" "get"
119 spc-port-kind => "product" "recv"
120 spc-port-kind => "product" "request"
121 spc-port-kind => "product" "send"
122 spc-port-kind => "telemetry"
123 spc-port-kind => "text" "event"
124 spc-port-kind => "time" "get"
125 input-port-kind => "async"
126 input-port-kind => "guarded"
127 input-port-kind => "sync"
128 event-spec => event-spec-5
129 event-spec-0 => "event" ident
130 event-spec-1 => event-spec-0
131 event-spec-1 => event-spec-0 "(" param-list ")"
132 event-spec-2 => event-spec-1 "severity" expr
133 event-spec-3 => event-spec-2
134 event-spec-3 => event-spec-2 "id" expr
135 event-spec-4 => event-spec-3 "format" string
136 event-spec-5 => event-spec-4
137 event-spec-5 => event-spec-4 "throttle" expr
138 param-spec => param-spec-4
139 param-spec-0 => "param" ident ":" type-name
140 param-spec-1 => param-spec-0
141 param-spec-1 => param-spec-0 "default" expr
142 param-spec-2 => param-spec-1
143 param-spec-2 => param-spec-1 "id" expr
144 param-spec-3 => param-spec-2
145 param-spec-3 => param-spec-2 "set" "opcode" expr
146 param-spec-4 => param-spec-3
147 param-spec-4 => param-spec-3 "save" "opcode" expr
148 tlm-chan-spec => tlm-chan-5
149 tlm-chan-0 => "telemetry" ident ":" type-name
150 tlm-chan-1 => tlm-chan-0
151 tlm-chan-1 => tlm-chan-0 "id" expr
152 tlm-chan-2 => tlm-chan-1
153 tlm-chan-2 => tlm-chan-1 "update" tlm-update
154 tlm-chan-3 => tlm-chan-2
155 tlm-chan-3 => tlm-chan-2 "format" string
156 tlm-chan-4 => tlm-chan-3
157 tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}"
158 tlm-chan-5 => tlm-chan-4
159 tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}"
160 tlm-update => "always"
161 tlm-update => "on" "change"
162 tlm-lim-seq => tlm-lim
163 tlm-lim-seq => tlm-lim-seq elt-sep tlm-lim
164 tlm-lim => "red" expr
165 tlm-lim => "orange" expr
166 tlm-lim => "yellow" expr
167 record-spec => record-spec-2
168 record-spec-0 => "product" "record" ident ":" type-name
169 record-spec-1 => record-spec-0
170 record-spec-1 => record-spec-0 "array"
171 record-spec-2 => record-spec-1
172 record-spec-2 => record-spec-1 "id" expr
173 prod-cont-spec => cont-spec-2
174 cont-spec-0 => "product" "container" ident
175 cont-spec-1 => cont-spec-0
176 cont-spec-1 => cont-spec-0 "id" expr
177 cont-spec-2 => cont-spec-1
178 cont-spec-2 => cont-spec-1 "default" "priority" expr
179 comp-inst-defn => comp-inst-7
180 comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr
181 comp-inst-1 => comp-inst-0
182 comp-inst-1 => comp-inst-0 "type" string
183 comp-inst-2 => comp-inst-1
184 comp-inst-2 => comp-inst-1 "at" string
185 comp-inst-3 => comp-inst-2
186 comp-inst-3 => comp-inst-2 "queue" "size" expr
187 comp-inst-4 => comp-inst-3
188 comp-inst-4 => comp-inst-3 "stack" "size" expr
189 comp-inst-5 => comp-inst-4
190 comp-inst-5 => comp-inst-4 "priority" expr
191 comp-inst-6 => comp-inst-5
192 comp-inst-6 => comp-inst-5 "cpu" expr
193 comp-inst-7 => comp-inst-6
194 comp-inst-7 => comp-inst-6 "{" string "}"
195 topology-defn => "topology" ident "{" topo-mem-seq "}"
196 topo-mem-seq =>
197 topo-mem-seq => topo-mem mem-sep topo-mem-seq
198 topo-mem => comp-inst-spec
199 topo-mem => conn-graph-spec
200 topo-mem => tlm-pktset-spec
201 topo-mem => "import" qual-ident
202 topo-mem => include-spec
203 comp-inst-spec => "instance" ident
204 comp-inst-spec => "private" "instance" ident
205 conn-graph-spec => "connections" ident "{" conn-seq "}"
206 conn-graph-spec => pattern-kind "connections" "instance" qual-ident
207 conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
208 pattern-kind => "command"
209 pattern-kind => "event"
210 pattern-kind => "health"
211 pattern-kind => "param"
212 pattern-kind => "telemetry"
213 pattern-kind => "text" "event"
214 pattern-kind => "time"
215 conn-seq =>
216 conn-seq => connection elt-sep conn-seq
217 connection => connection-4
218 connection-0 => qual-ident
219 connection-1 => connection-0
220 connection-1 => "unmatched" connection-0
221 connection-2 => connection-1
222 connection-2 => connection-1 "[" expr "]"
223 connection-3 => connection-2 "->" qual-ident
224 connection-4 => connection-3
225 connection-4 => connection-3 "[" expr "]"
226 tlm-pktset-spec => tlm-pktset-spec-1
227 tlm-pktset-spec-0 => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
228 tlm-pktset-spec-1 => tlm-pktset-spec-0
229 tlm-pktset-spec-1 => tlm-pktset-spec-0 "omit" "{" tlm-chan-id-seq "}"
230 tlm-pktgrp-mem-seq =>
231 tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
232 tlm-pktgrp-mem => include-spec
233 tlm-pktgrp-mem => tlm-pkt-spec
234 tlm-pkt-spec => tlm-pkt-spec-2
235 tlm-pkt-spec-0 => "packet" ident
236 tlm-pkt-spec-1 => tlm-pkt-spec-0
237 tlm-pkt-spec-1 => tlm-pkt-spec-0 "id" expr
238 tlm-pkt-spec-2 => tlm-pkt-spec-1 "group" expr "{" tlm-pkt-mem-seq "}"
239 tlm-pkt-mem-seq =>
240 tlm-pkt-mem-seq => tlm-pkt-mem elt-sep tlm-pkt-mem-seq
241 tlm-pkt-mem => include-spec
242 tlm-pkt-mem => qual-ident
243 tlm-chan-id-seq => qual-ident
244 tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident
245 param-list => formal-param
246 param-list => param-list elt-sep formal-param
247 formal-param => ident ":" type-name
248 formal-param => "ref" ident ":" type-name
249 queue-full-beh => "assert"
250 queue-full-beh => "block"
251 queue-full-beh => "drop"
252 queue-full-beh => "hook"
253 loc-spec => "locate" "instance" qual-ident "at" string
254 loc-spec => "locate" "component" qual-ident "at" string
255 loc-spec => "locate" "cnstant" qual-ident "at" string
256 loc-spec => "locate" "port" qual-ident "at" string
257 loc-spec => "locate" "state" "machine" qual-ident "at" string
258 loc-spec => "locate" "topology" qual-ident "at" string
259 loc-spec => "locate" "type" qual-ident "at" string
260 port-match-spec => "match" ident "with" ident
261 expr => add-expr
262 add-expr => mul-expr
263 add-expr => add-expr "+" mul-expr
264 add-expr => add-expr "-" mul-expr
265 mul-expr => unary-expr
266 mul-expr => mul-expr "*" unary-expr
267 mul-expr => mul-expr "/" unary-expr
268 unary-expr => prim-expr
269 unary-expr => "-" unary-expr
270 prim-expr => qual-ident
271 prim-expr => number
272 prim-expr => string
273 prim-expr => "[" expr-seq "]"
274 prim-expr => "{" struct-elt-seq "}"
275 prim-expr => "(" expr ")"
276 expr-seq => expr
277 expr-seq => expr elt-sep expr
278 struct-elt-seq =>
279 struct-elt-seq => ident "=" expr elt-sep struct-elt-seq
280 number => '$float
281 number => '$fixed
282 ident => '$ident
283 string => '$string
284 qual-ident => qual-ident-1
285 qual-ident-1 => ident
286 qual-ident-1 => qual-ident-1 "." ident
287 qual-ident-seq => qual-ident
288 qual-ident-seq => qual-ident-seq elt-sep qual-ident
289 index => "[" expr "]"
290 type-name => "I8"
291 type-name => "U8"
292 type-name => "I16"
293 type-name => "U16"
294 type-name => "I32"
295 type-name => "U32"
296 type-name => "I64"
297 type-name => "U64"
298 type-name => "F32"
299 type-name => "F64"
300 type-name => "bool"
301 type-name => "string"
302 type-name => "string" "size" expr

0:	$start => . translation-unit
	translation-unit => . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	port-defn => . port-defn-2
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index
	const-defn => . "constant" ident "=" expr
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	component-defn => . comp-kind ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "cnstant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	port-defn-0 => . "port" ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		enum-defn-0 => shift 8
		"port" => shift 9
		comp-inst-5 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		port-defn-0 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		struct-defn-0 => shift 18
		enum-defn-2 => shift 19
		port-defn-1 => shift 20
		"locate" => shift 21
		"topology" => shift 22
		comp-inst-7 => shift 23
		comp-kind => shift 24
		struct-defn-1 => shift 25
		enum-defn-3 => shift 26
		"constant" => shift 27
		"array" => shift 28
		"type" => shift 29
		port-defn-2 => shift 30
		"module" => shift 31
		"include" => shift 32
		enum-defn => shift 33
		array-defn => shift 34
		abs-type-defn => shift 35
		loc-spec => shift 36
		struct-defn => shift 37
		port-defn => shift 38
		module-defn => shift 39
		const-defn => shift 40
		topology-defn => shift 41
		comp-inst-defn => shift 42
		component-defn => shift 43
		include-spec => shift 44
		mod-mem => shift 45
		module-mem-seq => shift 46
		translation-unit => shift 47
		$default => reduce 9

1:	comp-inst-0 => "instance" . ident ":" qual-ident "base" "id" expr
	ident => . '$ident
		'$ident => shift 53
		ident => shift 83

2:	comp-inst-1 => comp-inst-0 . "type" string
	comp-inst-1 => comp-inst-0 .
		"type" => shift 82
		"\n" => reduce 181
		$default => reduce 181

3:	comp-inst-2 => comp-inst-1 . "at" string
	comp-inst-2 => comp-inst-1 .
		"at" => shift 81
		"\n" => reduce 183
		$default => reduce 183

4:	comp-inst-3 => comp-inst-2 . "queue" "size" expr
	comp-inst-3 => comp-inst-2 .
		"queue" => shift 80
		"\n" => reduce 185
		$default => reduce 185

5:	comp-inst-4 => comp-inst-3 . "stack" "size" expr
	comp-inst-4 => comp-inst-3 .
		"stack" => shift 79
		"\n" => reduce 187
		$default => reduce 187

6:	enum-defn-0 => "enum" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 78

7:	comp-inst-5 => comp-inst-4 . "priority" expr
	comp-inst-5 => comp-inst-4 .
		"priority" => shift 77
		"\n" => reduce 189
		$default => reduce 189

8:	enum-defn-1 => enum-defn-0 . ":" type-name
	enum-defn-1 => enum-defn-0 .
		":" => shift 76
		$default => reduce 35

9:	port-defn-0 => "port" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 75

10:	comp-inst-6 => comp-inst-5 . "cpu" expr
	comp-inst-6 => comp-inst-5 .
		"cpu" => shift 74
		"\n" => reduce 191
		$default => reduce 191

11:	struct-defn-0 => "struct" . ident "{" struct-mem-seq "}"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 73

12:	enum-defn-2 => enum-defn-1 . "{" enum-mem-seq "}"
		"{" => shift 72

13:	port-defn-1 => port-defn-0 . "(" param-list ")"
	port-defn-1 => port-defn-0 .
		"(" => shift 71
		"\n" => reduce 26
		$default => reduce 26

14:	comp-inst-7 => comp-inst-6 . "{" string "}"
	comp-inst-7 => comp-inst-6 .
		"{" => shift 70
		"\n" => reduce 193
		$default => reduce 193

15:	comp-kind => "queued" .
		$default => reduce 60

16:	comp-kind => "passive" .
		$default => reduce 59

17:	comp-kind => "active" .
		$default => reduce 58

18:	struct-defn-1 => struct-defn-0 . "default" expr
	struct-defn-1 => struct-defn-0 .
		"default" => shift 69
		"\n" => reduce 46
		$default => reduce 46

19:	enum-defn-3 => enum-defn-2 . "default" expr
	enum-defn-3 => enum-defn-2 .
		"default" => shift 68
		"\n" => reduce 38
		$default => reduce 38

20:	port-defn-2 => port-defn-1 . "->" type-name
	port-defn-2 => port-defn-1 .
		"->" => shift 67
		"\n" => reduce 28
		$default => reduce 28

21:	loc-spec => "locate" . "type" qual-ident "at" string
	loc-spec => "locate" . "topology" qual-ident "at" string
	loc-spec => "locate" . "state" "machine" qual-ident "at" string
	loc-spec => "locate" . "port" qual-ident "at" string
	loc-spec => "locate" . "cnstant" qual-ident "at" string
	loc-spec => "locate" . "component" qual-ident "at" string
	loc-spec => "locate" . "instance" qual-ident "at" string
		"instance" => shift 60
		"component" => shift 61
		"cnstant" => shift 62
		"port" => shift 63
		"state" => shift 64
		"topology" => shift 65
		"type" => shift 66

22:	topology-defn => "topology" . ident "{" topo-mem-seq "}"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 59

23:	comp-inst-defn => comp-inst-7 .
		"\n" => reduce 179
		$default => reduce 179

24:	component-defn => comp-kind . ident "{" comp-mem-seq "}"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 58

25:	struct-defn => struct-defn-1 .
		"\n" => reduce 44
		$default => reduce 44

26:	enum-defn => enum-defn-3 .
		"\n" => reduce 33
		$default => reduce 33

27:	const-defn => "constant" . ident "=" expr
	ident => . '$ident
		'$ident => shift 53
		ident => shift 57

28:	array-defn => "array" . ident "=" index
	ident => . '$ident
		'$ident => shift 53
		ident => shift 56

29:	abs-type-defn => "type" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 55

30:	port-defn => port-defn-2 .
		"\n" => reduce 24
		$default => reduce 24

31:	module-defn => "module" . ident "{" module-mem-seq "}"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 54

32:	include-spec => "include" . string
	string => . '$string
		'$string => shift 51
		string => shift 52

33:	mod-mem => enum-defn .
		"\n" => reduce 22
		$default => reduce 22

34:	mod-mem => array-defn .
		"\n" => reduce 21
		$default => reduce 21

35:	mod-mem => abs-type-defn .
		"\n" => reduce 20
		$default => reduce 20

36:	mod-mem => loc-spec .
		"\n" => reduce 19
		$default => reduce 19

37:	mod-mem => struct-defn .
		"\n" => reduce 18
		$default => reduce 18

38:	mod-mem => port-defn .
		"\n" => reduce 17
		$default => reduce 17

39:	mod-mem => module-defn .
		"\n" => reduce 16
		$default => reduce 16

40:	mod-mem => const-defn .
		"\n" => reduce 15
		$default => reduce 15

41:	mod-mem => topology-defn .
		"\n" => reduce 14
		$default => reduce 14

42:	mod-mem => comp-inst-defn .
		"\n" => reduce 13
		$default => reduce 13

43:	mod-mem => component-defn .
		"\n" => reduce 12
		$default => reduce 12

44:	mod-mem => include-spec .
		"\n" => reduce 11
		$default => reduce 11

45:	module-mem-seq => mod-mem . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 48
		";" => shift 49
		mem-sep => shift 50

46:	translation-unit => module-mem-seq .
		$default => reduce 8

47:	$start => translation-unit .
		'$end => accept 0

48:	mem-sep => "\n" .
		"\n" => reduce 5
		$default => reduce 5

49:	mem-sep => ";" .
		"\n" => reduce 4
		$default => reduce 4

50:	mem-sep => mem-sep . "\n"
	module-mem-seq => mod-mem mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	port-defn => . port-defn-2
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index
	const-defn => . "constant" ident "=" expr
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	component-defn => . comp-kind ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "cnstant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	port-defn-0 => . "port" ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		enum-defn-0 => shift 8
		"port" => shift 9
		comp-inst-5 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		port-defn-0 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		struct-defn-0 => shift 18
		enum-defn-2 => shift 19
		port-defn-1 => shift 20
		"locate" => shift 21
		"topology" => shift 22
		comp-inst-7 => shift 23
		comp-kind => shift 24
		struct-defn-1 => shift 25
		enum-defn-3 => shift 26
		"constant" => shift 27
		"array" => shift 28
		"type" => shift 29
		port-defn-2 => shift 30
		"module" => shift 31
		"include" => shift 32
		enum-defn => shift 33
		array-defn => shift 34
		abs-type-defn => shift 35
		loc-spec => shift 36
		struct-defn => shift 37
		port-defn => shift 38
		module-defn => shift 39
		const-defn => shift 40
		topology-defn => shift 41
		comp-inst-defn => shift 42
		component-defn => shift 43
		include-spec => shift 44
		mod-mem => shift 45
		module-mem-seq => shift 143
		"\n" => shift 144
		$default => reduce 9

51:	string => '$string .
		"\n" => reduce 283
		$default => reduce 283

52:	include-spec => "include" string .
		"\n" => reduce 7
		$default => reduce 7

53:	ident => '$ident .
		"\n" => reduce 282
		$default => reduce 282

54:	module-defn => "module" ident . "{" module-mem-seq "}"
		"{" => shift 142

55:	abs-type-defn => "type" ident .
		"\n" => reduce 30
		$default => reduce 30

56:	array-defn => "array" ident . "=" index
		"=" => shift 141

57:	const-defn => "constant" ident . "=" expr
		"=" => shift 140

58:	component-defn => comp-kind ident . "{" comp-mem-seq "}"
		"{" => shift 139

59:	topology-defn => "topology" ident . "{" topo-mem-seq "}"
		"{" => shift 138

60:	loc-spec => "locate" "instance" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 137

61:	loc-spec => "locate" "component" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 136

62:	loc-spec => "locate" "cnstant" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 135

63:	loc-spec => "locate" "port" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 134

64:	loc-spec => "locate" "state" . "machine" qual-ident "at" string
		"machine" => shift 133

65:	loc-spec => "locate" "topology" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 132

66:	loc-spec => "locate" "type" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 131

67:	port-defn-2 => port-defn-1 "->" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 130

68:	enum-defn-3 => enum-defn-2 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 129

69:	struct-defn-1 => struct-defn-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 128

70:	comp-inst-7 => comp-inst-6 "{" . string "}"
	string => . '$string
		'$string => shift 51
		string => shift 127

71:	port-defn-1 => port-defn-0 "(" . param-list ")"
	param-list => . formal-param
	param-list => . param-list elt-sep formal-param
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 126

72:	enum-defn-2 => enum-defn-1 "{" . enum-mem-seq "}"
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident "=" expr
	ident => . '$ident
		'$ident => shift 53
		ident => shift 120
		enum-mem => shift 121
		enum-mem-seq => shift 122
		$default => reduce 40

73:	struct-defn-0 => "struct" ident . "{" struct-mem-seq "}"
		"{" => shift 119

74:	comp-inst-6 => comp-inst-5 "cpu" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 118

75:	port-defn-0 => "port" ident .
		"\n" => reduce 25
		$default => reduce 25

76:	enum-defn-1 => enum-defn-0 ":" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 117

77:	comp-inst-5 => comp-inst-4 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 104

78:	enum-defn-0 => "enum" ident .
		$default => reduce 34

79:	comp-inst-4 => comp-inst-3 "stack" . "size" expr
		"size" => shift 88

80:	comp-inst-3 => comp-inst-2 "queue" . "size" expr
		"size" => shift 87

81:	comp-inst-2 => comp-inst-1 "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 86

82:	comp-inst-1 => comp-inst-0 "type" . string
	string => . '$string
		'$string => shift 51
		string => shift 85

83:	comp-inst-0 => "instance" ident . ":" qual-ident "base" "id" expr
		":" => shift 84

84:	comp-inst-0 => "instance" ident ":" . qual-ident "base" "id" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 278

85:	comp-inst-1 => comp-inst-0 "type" string .
		"\n" => reduce 182
		$default => reduce 182

86:	comp-inst-2 => comp-inst-1 "at" string .
		"\n" => reduce 184
		$default => reduce 184

87:	comp-inst-3 => comp-inst-2 "queue" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 277

88:	comp-inst-4 => comp-inst-3 "stack" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 276

89:	qual-ident-1 => ident .
		"\n" => reduce 285
		$default => reduce 285

90:	qual-ident-1 => qual-ident-1 . "." ident
	qual-ident => qual-ident-1 .
		"." => shift 275
		"\n" => reduce 284
		$default => reduce 284

91:	number => '$fixed .
		"\n" => reduce 281
		$default => reduce 281

92:	number => '$float .
		"\n" => reduce 280
		$default => reduce 280

93:	prim-expr => "(" . expr ")"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 274

94:	prim-expr => "{" . struct-elt-seq "}"
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 53
		ident => shift 272
		struct-elt-seq => shift 273
		$default => reduce 278

95:	prim-expr => "[" . expr-seq "]"
	expr-seq => . expr
	expr-seq => . expr elt-sep expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 270
		expr-seq => shift 271

96:	prim-expr => string .
		"\n" => reduce 272
		$default => reduce 272

97:	prim-expr => number .
		"\n" => reduce 271
		$default => reduce 271

98:	prim-expr => qual-ident .
		"\n" => reduce 270
		$default => reduce 270

99:	unary-expr => "-" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 269

100:	unary-expr => prim-expr .
		"\n" => reduce 268
		$default => reduce 268

101:	mul-expr => unary-expr .
		"\n" => reduce 265
		$default => reduce 265

102:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => mul-expr .
		"*" => shift 267
		"/" => shift 268
		"\n" => reduce 262
		$default => reduce 262

103:	add-expr => add-expr . "-" mul-expr
	add-expr => add-expr . "+" mul-expr
	expr => add-expr .
		"+" => shift 265
		"-" => shift 266
		"\n" => reduce 261
		$default => reduce 261

104:	comp-inst-5 => comp-inst-4 "priority" expr .
		"\n" => reduce 190
		$default => reduce 190

105:	type-name => "string" . "size" expr
	type-name => "string" .
		"size" => shift 264
		"\n" => reduce 301
		$default => reduce 301

106:	type-name => "bool" .
		"\n" => reduce 300
		$default => reduce 300

107:	type-name => "F64" .
		"\n" => reduce 299
		$default => reduce 299

108:	type-name => "F32" .
		"\n" => reduce 298
		$default => reduce 298

109:	type-name => "U64" .
		"\n" => reduce 297
		$default => reduce 297

110:	type-name => "I64" .
		"\n" => reduce 296
		$default => reduce 296

111:	type-name => "U32" .
		"\n" => reduce 295
		$default => reduce 295

112:	type-name => "I32" .
		"\n" => reduce 294
		$default => reduce 294

113:	type-name => "U16" .
		"\n" => reduce 293
		$default => reduce 293

114:	type-name => "I16" .
		"\n" => reduce 292
		$default => reduce 292

115:	type-name => "U8" .
		"\n" => reduce 291
		$default => reduce 291

116:	type-name => "I8" .
		"\n" => reduce 290
		$default => reduce 290

117:	enum-defn-1 => enum-defn-0 ":" type-name .
		$default => reduce 36

118:	comp-inst-6 => comp-inst-5 "cpu" expr .
		"\n" => reduce 192
		$default => reduce 192

119:	struct-defn-0 => "struct" ident "{" . struct-mem-seq "}"
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 257
		struct-mem-0 => shift 258
		struct-mem-1 => shift 259
		struct-mem-2 => shift 260
		struct-mem-3 => shift 261
		struct-mem => shift 262
		struct-mem-seq => shift 263
		$default => reduce 48

120:	enum-mem => ident . "=" expr
	enum-mem => ident .
		"=" => shift 256
		"\n" => reduce 42
		$default => reduce 42

121:	enum-mem-seq => enum-mem . elt-sep enum-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 255

122:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq . "}"
		"}" => shift 254

123:	formal-param => "ref" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		ident => shift 253

124:	formal-param => ident . ":" type-name
		":" => shift 252

125:	param-list => formal-param .
		"\n" => reduce 245
		$default => reduce 245

126:	param-list => param-list . elt-sep formal-param
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	port-defn-1 => port-defn-0 "(" param-list . ")"
		")" => shift 247
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 251

127:	comp-inst-7 => comp-inst-6 "{" string . "}"
		"}" => shift 246

128:	struct-defn-1 => struct-defn-0 "default" expr .
		"\n" => reduce 47
		$default => reduce 47

129:	enum-defn-3 => enum-defn-2 "default" expr .
		"\n" => reduce 39
		$default => reduce 39

130:	port-defn-2 => port-defn-1 "->" type-name .
		"\n" => reduce 29
		$default => reduce 29

131:	loc-spec => "locate" "type" qual-ident . "at" string
		"at" => shift 245

132:	loc-spec => "locate" "topology" qual-ident . "at" string
		"at" => shift 244

133:	loc-spec => "locate" "state" "machine" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 243

134:	loc-spec => "locate" "port" qual-ident . "at" string
		"at" => shift 242

135:	loc-spec => "locate" "cnstant" qual-ident . "at" string
		"at" => shift 241

136:	loc-spec => "locate" "component" qual-ident . "at" string
		"at" => shift 240

137:	loc-spec => "locate" "instance" qual-ident . "at" string
		"at" => shift 239

138:	topology-defn => "topology" ident "{" . topo-mem-seq "}"
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	topo-mem => . include-spec
	include-spec => . "include" string
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . tlm-pktset-spec-1
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "text" "event"
	pattern-kind => . "time"
	tlm-pktset-spec-1 => . tlm-pktset-spec-0
	tlm-pktset-spec-1 => . tlm-pktset-spec-0 "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec-0 => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
		tlm-pktset-spec-0 => shift 219
		"time" => shift 220
		"text" => shift 221
		"telemetry" => shift 222
		"param" => shift 223
		"health" => shift 224
		"event" => shift 225
		"command" => shift 226
		tlm-pktset-spec-1 => shift 227
		pattern-kind => shift 228
		"connections" => shift 229
		"private" => shift 230
		"instance" => shift 231
		"include" => shift 32
		include-spec => shift 232
		"import" => shift 233
		tlm-pktset-spec => shift 234
		conn-graph-spec => shift 235
		comp-inst-spec => shift 236
		topo-mem => shift 237
		topo-mem-seq => shift 238
		$default => reduce 196

139:	component-defn => comp-kind ident "{" . comp-mem-seq "}"
	comp-mem-seq => . comp-mem
	comp-mem-seq => . comp-mem-seq mem-sep comp-mem
	comp-mem => . include-spec
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	include-spec => . "include" string
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	enum-defn-0 => . "enum" ident
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 expr
	spc-port-inst-0 => . spc-port-kind "port" ident ":"
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" expr
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 149
		event-spec-0 => shift 150
		"time" => shift 151
		"text" => shift 152
		"telemetry" => shift 153
		"param" => shift 154
		"event" => shift 155
		"command" => shift 156
		"output" => shift 157
		tlm-chan-1 => shift 158
		param-spec-0 => shift 159
		event-spec-1 => shift 160
		"sync" => shift 161
		"guarded" => shift 162
		"async" => shift 163
		cmd-spec-0 => shift 164
		"internal" => shift 165
		spc-port-kind => shift 166
		gen-port-inst-0 => shift 167
		"enum" => shift 6
		"product" => shift 168
		tlm-chan-2 => shift 169
		param-spec-1 => shift 170
		event-spec-2 => shift 171
		cmd-spec-1 => shift 172
		int-port-defn-0 => shift 173
		input-port-kind => shift 174
		spc-port-inst-0 => shift 175
		gen-port-inst-1 => shift 176
		enum-defn-0 => shift 8
		cont-spec-0 => shift 177
		record-spec-0 => shift 178
		tlm-chan-3 => shift 179
		param-spec-2 => shift 180
		event-spec-3 => shift 181
		cmd-spec-2 => shift 182
		int-port-defn-1 => shift 183
		spc-port-inst-1 => shift 184
		gen-port-inst-2 => shift 185
		"struct" => shift 11
		enum-defn-1 => shift 12
		cont-spec-1 => shift 186
		record-spec-1 => shift 187
		tlm-chan-4 => shift 188
		param-spec-3 => shift 189
		event-spec-4 => shift 190
		cmd-spec-3 => shift 191
		int-port-defn-2 => shift 192
		spc-port-inst-2 => shift 193
		gen-port-inst-3 => shift 194
		struct-defn-0 => shift 18
		enum-defn-2 => shift 19
		"match" => shift 195
		cont-spec-2 => shift 196
		record-spec-2 => shift 197
		tlm-chan-5 => shift 198
		param-spec-4 => shift 199
		event-spec-5 => shift 200
		cmd-spec-4 => shift 201
		int-port-defn-3 => shift 202
		spc-port-inst-3 => shift 203
		gen-port-inst-4 => shift 204
		struct-defn-1 => shift 25
		enum-defn-3 => shift 26
		"include" => shift 32
		tlm-chan-spec => shift 205
		prod-cont-spec => shift 206
		record-spec => shift 207
		param-spec => shift 208
		event-spec => shift 209
		command-spec => shift 210
		port-match-spec => shift 211
		port-inst => shift 212
		int-port-spec => shift 213
		struct-defn => shift 214
		enum-defn => shift 215
		include-spec => shift 216
		comp-mem => shift 217
		comp-mem-seq => shift 218

140:	const-defn => "constant" ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 148

141:	array-defn => "array" ident "=" . index
	index => . "[" expr "]"
		"[" => shift 146
		index => shift 147

142:	module-defn => "module" ident "{" . module-mem-seq "}"
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	port-defn => . port-defn-2
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index
	const-defn => . "constant" ident "=" expr
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	component-defn => . comp-kind ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "cnstant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	port-defn-0 => . "port" ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		enum-defn-0 => shift 8
		"port" => shift 9
		comp-inst-5 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		port-defn-0 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		struct-defn-0 => shift 18
		enum-defn-2 => shift 19
		port-defn-1 => shift 20
		"locate" => shift 21
		"topology" => shift 22
		comp-inst-7 => shift 23
		comp-kind => shift 24
		struct-defn-1 => shift 25
		enum-defn-3 => shift 26
		"constant" => shift 27
		"array" => shift 28
		"type" => shift 29
		port-defn-2 => shift 30
		"module" => shift 31
		"include" => shift 32
		enum-defn => shift 33
		array-defn => shift 34
		abs-type-defn => shift 35
		loc-spec => shift 36
		struct-defn => shift 37
		port-defn => shift 38
		module-defn => shift 39
		const-defn => shift 40
		topology-defn => shift 41
		comp-inst-defn => shift 42
		component-defn => shift 43
		include-spec => shift 44
		mod-mem => shift 45
		module-mem-seq => shift 145
		$default => reduce 9

143:	module-mem-seq => mod-mem mem-sep module-mem-seq .
		$default => reduce 10

144:	mem-sep => mem-sep "\n" .
		"\n" => reduce 6
		$default => reduce 6

145:	module-defn => "module" ident "{" module-mem-seq . "}"
		"}" => shift 386

146:	index => "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 385

147:	array-defn => "array" ident "=" index .
		"\n" => reduce 31
		$default => reduce 31

148:	const-defn => "constant" ident "=" expr .
		"\n" => reduce 32
		$default => reduce 32

149:	tlm-chan-1 => tlm-chan-0 . "id" expr
	tlm-chan-1 => tlm-chan-0 .
		"id" => shift 384
		"\n" => reduce 150
		$default => reduce 150

150:	event-spec-1 => event-spec-0 . "(" param-list ")"
	event-spec-1 => event-spec-0 .
		"(" => shift 383
		$default => reduce 130

151:	spc-port-kind => "time" . "get"
		"get" => shift 382

152:	spc-port-kind => "text" . "event"
		"event" => shift 381

153:	tlm-chan-0 => "telemetry" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "telemetry" .
		'$ident => shift 53
		ident => shift 380
		$default => reduce 122

154:	param-spec-0 => "param" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 377
		"set" => shift 378
		'$ident => shift 53
		ident => shift 379

155:	event-spec-0 => "event" . ident
	ident => . '$ident
	spc-port-kind => "event" .
		'$ident => shift 53
		ident => shift 376
		$default => reduce 115

156:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
		"recv" => shift 373
		"reg" => shift 374
		"resp" => shift 375

157:	gen-port-inst-0 => "output" . "port" ident ":"
		"port" => shift 372

158:	tlm-chan-2 => tlm-chan-1 . "update" tlm-update
	tlm-chan-2 => tlm-chan-1 .
		"update" => shift 371
		"\n" => reduce 152
		$default => reduce 152

159:	param-spec-1 => param-spec-0 . "default" expr
	param-spec-1 => param-spec-0 .
		"default" => shift 370
		"\n" => reduce 140
		$default => reduce 140

160:	event-spec-2 => event-spec-1 . "severity" expr
		"severity" => shift 369

161:	input-port-kind => "sync" .
		$default => reduce 127

162:	input-port-kind => "guarded" .
		$default => reduce 126

163:	input-port-kind => "async" .
		$default => reduce 125

164:	cmd-spec-1 => cmd-spec-0 . "(" param-list ")"
	cmd-spec-1 => cmd-spec-0 .
		"(" => shift 368
		"\n" => reduce 104
		$default => reduce 104

165:	int-port-defn-0 => "internal" . "port" ident
		"port" => shift 367

166:	spc-port-inst-0 => spc-port-kind . "port" ident ":"
		"port" => shift 366

167:	gen-port-inst-1 => gen-port-inst-0 . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	gen-port-inst-1 => gen-port-inst-0 .
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 365
		$default => reduce 79
		['$ident => reduce 79] REMOVED by default shift

168:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
	cont-spec-0 => "product" . "container" ident
	record-spec-0 => "product" . "record" ident ":" type-name
		"record" => shift 359
		"container" => shift 360
		"get" => shift 361
		"recv" => shift 362
		"request" => shift 363
		"send" => shift 364

169:	tlm-chan-3 => tlm-chan-2 . "format" string
	tlm-chan-3 => tlm-chan-2 .
		"format" => shift 358
		"\n" => reduce 154
		$default => reduce 154

170:	param-spec-2 => param-spec-1 . "id" expr
	param-spec-2 => param-spec-1 .
		"id" => shift 357
		"\n" => reduce 142
		$default => reduce 142

171:	event-spec-3 => event-spec-2 . "id" expr
	event-spec-3 => event-spec-2 .
		"id" => shift 356
		$default => reduce 133

172:	cmd-spec-2 => cmd-spec-1 . "opcode" expr
	cmd-spec-2 => cmd-spec-1 .
		"opcode" => shift 355
		"\n" => reduce 106
		$default => reduce 106

173:	int-port-defn-1 => int-port-defn-0 . "(" param-list ")"
	int-port-defn-1 => int-port-defn-0 .
		"(" => shift 354
		"\n" => reduce 96
		$default => reduce 96

174:	cmd-spec-0 => input-port-kind . "command" ident
	gen-port-inst-0 => input-port-kind . "input" "port" ident ":"
	spc-port-inst-1 => input-port-kind . spc-port-inst-0
	spc-port-inst-0 => . spc-port-kind "port" ident ":"
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
		"time" => shift 151
		"text" => shift 152
		"telemetry" => shift 347
		"product" => shift 348
		"param" => shift 349
		"event" => shift 350
		spc-port-kind => shift 166
		spc-port-inst-0 => shift 351
		"input" => shift 352
		"command" => shift 353

175:	spc-port-inst-1 => spc-port-inst-0 .
		"\n" => reduce 88
		$default => reduce 88

176:	gen-port-inst-2 => gen-port-inst-1 . "serial"
	gen-port-inst-2 => gen-port-inst-1 . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 345
		"serial" => shift 346

177:	cont-spec-1 => cont-spec-0 . "id" expr
	cont-spec-1 => cont-spec-0 .
		"id" => shift 344
		"\n" => reduce 175
		$default => reduce 175

178:	record-spec-1 => record-spec-0 . "array"
	record-spec-1 => record-spec-0 .
		"array" => shift 343
		"\n" => reduce 169
		$default => reduce 169

179:	tlm-chan-4 => tlm-chan-3 . "low" "{" tlm-lim-seq "}"
	tlm-chan-4 => tlm-chan-3 .
		"low" => shift 342
		"\n" => reduce 156
		$default => reduce 156

180:	param-spec-3 => param-spec-2 . "set" "opcode" expr
	param-spec-3 => param-spec-2 .
		"set" => shift 341
		"\n" => reduce 144
		$default => reduce 144

181:	event-spec-4 => event-spec-3 . "format" string
		"format" => shift 340

182:	cmd-spec-3 => cmd-spec-2 . "priority" expr
	cmd-spec-3 => cmd-spec-2 .
		"priority" => shift 339
		"\n" => reduce 108
		$default => reduce 108

183:	int-port-defn-2 => int-port-defn-1 . "priority" expr
	int-port-defn-2 => int-port-defn-1 .
		"priority" => shift 338
		"\n" => reduce 98
		$default => reduce 98

184:	spc-port-inst-2 => spc-port-inst-1 . "priority" expr
	spc-port-inst-2 => spc-port-inst-1 .
		"priority" => shift 337
		"\n" => reduce 90
		$default => reduce 90

185:	gen-port-inst-3 => gen-port-inst-2 . "priority" expr
	gen-port-inst-3 => gen-port-inst-2 .
		"priority" => shift 336
		"\n" => reduce 83
		$default => reduce 83

186:	cont-spec-2 => cont-spec-1 . "default" "priority" expr
	cont-spec-2 => cont-spec-1 .
		"default" => shift 335
		"\n" => reduce 177
		$default => reduce 177

187:	record-spec-2 => record-spec-1 . "id" expr
	record-spec-2 => record-spec-1 .
		"id" => shift 334
		"\n" => reduce 171
		$default => reduce 171

188:	tlm-chan-5 => tlm-chan-4 . "high" "{" tlm-lim-seq "}"
	tlm-chan-5 => tlm-chan-4 .
		"high" => shift 333
		"\n" => reduce 158
		$default => reduce 158

189:	param-spec-4 => param-spec-3 . "save" "opcode" expr
	param-spec-4 => param-spec-3 .
		"save" => shift 332
		"\n" => reduce 146
		$default => reduce 146

190:	event-spec-5 => event-spec-4 . "throttle" expr
	event-spec-5 => event-spec-4 .
		"throttle" => shift 331
		"\n" => reduce 136
		$default => reduce 136

191:	cmd-spec-4 => cmd-spec-3 . queue-full-beh
	queue-full-beh => . "assert"
	queue-full-beh => . "block"
	queue-full-beh => . "drop"
	queue-full-beh => . "hook"
	cmd-spec-4 => cmd-spec-3 .
		"hook" => shift 323
		"drop" => shift 324
		"block" => shift 325
		"assert" => shift 326
		queue-full-beh => shift 330
		"\n" => reduce 110
		$default => reduce 110

192:	int-port-defn-3 => int-port-defn-2 . queue-full-beh
	queue-full-beh => . "assert"
	queue-full-beh => . "block"
	queue-full-beh => . "drop"
	queue-full-beh => . "hook"
	int-port-defn-3 => int-port-defn-2 .
		"hook" => shift 323
		"drop" => shift 324
		"block" => shift 325
		"assert" => shift 326
		queue-full-beh => shift 329
		"\n" => reduce 100
		$default => reduce 100

193:	spc-port-inst-3 => spc-port-inst-2 . queue-full-beh
	queue-full-beh => . "assert"
	queue-full-beh => . "block"
	queue-full-beh => . "drop"
	queue-full-beh => . "hook"
	spc-port-inst-3 => spc-port-inst-2 .
		"hook" => shift 323
		"drop" => shift 324
		"block" => shift 325
		"assert" => shift 326
		queue-full-beh => shift 328
		"\n" => reduce 92
		$default => reduce 92

194:	gen-port-inst-4 => gen-port-inst-3 . queue-full-beh
	queue-full-beh => . "assert"
	queue-full-beh => . "block"
	queue-full-beh => . "drop"
	queue-full-beh => . "hook"
	gen-port-inst-4 => gen-port-inst-3 .
		"hook" => shift 323
		"drop" => shift 324
		"block" => shift 325
		"assert" => shift 326
		queue-full-beh => shift 327
		"\n" => reduce 85
		$default => reduce 85

195:	port-match-spec => "match" . ident "with" ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 322

196:	prod-cont-spec => cont-spec-2 .
		"\n" => reduce 173
		$default => reduce 173

197:	record-spec => record-spec-2 .
		"\n" => reduce 167
		$default => reduce 167

198:	tlm-chan-spec => tlm-chan-5 .
		"\n" => reduce 148
		$default => reduce 148

199:	param-spec => param-spec-4 .
		"\n" => reduce 138
		$default => reduce 138

200:	event-spec => event-spec-5 .
		"\n" => reduce 128
		$default => reduce 128

201:	command-spec => cmd-spec-4 .
		"\n" => reduce 102
		$default => reduce 102

202:	int-port-spec => int-port-defn-3 .
		"\n" => reduce 94
		$default => reduce 94

203:	port-inst => spc-port-inst-3 .
		"\n" => reduce 76
		$default => reduce 76

204:	port-inst => gen-port-inst-4 .
		"\n" => reduce 75
		$default => reduce 75

205:	comp-mem => tlm-chan-spec .
		"\n" => reduce 74
		$default => reduce 74

206:	comp-mem => prod-cont-spec .
		"\n" => reduce 73
		$default => reduce 73

207:	comp-mem => record-spec .
		"\n" => reduce 72
		$default => reduce 72

208:	comp-mem => param-spec .
		"\n" => reduce 71
		$default => reduce 71

209:	comp-mem => event-spec .
		"\n" => reduce 70
		$default => reduce 70

210:	comp-mem => command-spec .
		"\n" => reduce 69
		$default => reduce 69

211:	comp-mem => port-match-spec .
		"\n" => reduce 68
		$default => reduce 68

212:	comp-mem => port-inst .
		"\n" => reduce 67
		$default => reduce 67

213:	comp-mem => int-port-spec .
		"\n" => reduce 66
		$default => reduce 66

214:	comp-mem => struct-defn .
		"\n" => reduce 65
		$default => reduce 65

215:	comp-mem => enum-defn .
		"\n" => reduce 64
		$default => reduce 64

216:	comp-mem => include-spec .
		"\n" => reduce 63
		$default => reduce 63

217:	comp-mem-seq => comp-mem .
		"\n" => reduce 61
		$default => reduce 61

218:	comp-mem-seq => comp-mem-seq . mem-sep comp-mem
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	component-defn => comp-kind ident "{" comp-mem-seq . "}"
		"}" => shift 320
		"\n" => shift 48
		";" => shift 49
		mem-sep => shift 321

219:	tlm-pktset-spec-1 => tlm-pktset-spec-0 . "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec-1 => tlm-pktset-spec-0 .
		"omit" => shift 319
		"\n" => reduce 228
		$default => reduce 228

220:	pattern-kind => "time" .
		$default => reduce 214

221:	pattern-kind => "text" . "event"
		"event" => shift 318

222:	tlm-pktset-spec-0 => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}"
	pattern-kind => "telemetry" .
		"packets" => shift 317
		$default => reduce 212

223:	pattern-kind => "param" .
		$default => reduce 211

224:	pattern-kind => "health" .
		$default => reduce 210

225:	pattern-kind => "event" .
		$default => reduce 209

226:	pattern-kind => "command" .
		$default => reduce 208

227:	tlm-pktset-spec => tlm-pktset-spec-1 .
		"\n" => reduce 226
		$default => reduce 226

228:	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident "{" qual-ident-seq "}"
	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident
		"connections" => shift 316

229:	conn-graph-spec => "connections" . ident "{" conn-seq "}"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 315

230:	comp-inst-spec => "private" . "instance" ident
		"instance" => shift 314

231:	comp-inst-spec => "instance" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 313

232:	topo-mem => include-spec .
		"\n" => reduce 202
		$default => reduce 202

233:	topo-mem => "import" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 312

234:	topo-mem => tlm-pktset-spec .
		"\n" => reduce 200
		$default => reduce 200

235:	topo-mem => conn-graph-spec .
		"\n" => reduce 199
		$default => reduce 199

236:	topo-mem => comp-inst-spec .
		"\n" => reduce 198
		$default => reduce 198

237:	topo-mem-seq => topo-mem . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 48
		";" => shift 49
		mem-sep => shift 311

238:	topology-defn => "topology" ident "{" topo-mem-seq . "}"
		"}" => shift 310

239:	loc-spec => "locate" "instance" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 309

240:	loc-spec => "locate" "component" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 308

241:	loc-spec => "locate" "cnstant" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 307

242:	loc-spec => "locate" "port" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 306

243:	loc-spec => "locate" "state" "machine" qual-ident . "at" string
		"at" => shift 305

244:	loc-spec => "locate" "topology" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 304

245:	loc-spec => "locate" "type" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 303

246:	comp-inst-7 => comp-inst-6 "{" string "}" .
		"\n" => reduce 194
		$default => reduce 194

247:	port-defn-1 => port-defn-0 "(" param-list ")" .
		"\n" => reduce 27
		$default => reduce 27

248:	mem-sep => mem-sep . "\n"
	elt-sep => mem-sep . "\n"
		"\n" => shift 302

249:	mem-sep => "\n" .
	elt-sep => "\n" .
		"\n" => reduce 5
		$default => reduce 2

250:	elt-sep => "," .
		$default => reduce 1

251:	param-list => param-list elt-sep . formal-param
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 301

252:	formal-param => ident ":" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 300

253:	formal-param => "ref" ident . ":" type-name
		":" => shift 299

254:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}" .
		"\n" => reduce 37
		$default => reduce 37

255:	enum-mem-seq => enum-mem elt-sep . enum-mem-seq
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident "=" expr
	ident => . '$ident
		'$ident => shift 53
		ident => shift 120
		enum-mem => shift 121
		enum-mem-seq => shift 298
		$default => reduce 40

256:	enum-mem => ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 297

257:	struct-mem-0 => ident . ":"
		":" => shift 296

258:	struct-mem-1 => struct-mem-0 . "[" expr "]"
	struct-mem-1 => struct-mem-0 .
		"[" => shift 295
		$default => reduce 52

259:	struct-mem-2 => struct-mem-1 . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 294

260:	struct-mem-3 => struct-mem-2 . "format" string
	struct-mem-3 => struct-mem-2 .
		"format" => shift 293
		"\n" => reduce 55
		$default => reduce 55

261:	struct-mem => struct-mem-3 .
		"\n" => reduce 50
		$default => reduce 50

262:	struct-mem-seq => struct-mem . mem-sep struct-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 48
		";" => shift 49
		mem-sep => shift 292

263:	struct-defn-0 => "struct" ident "{" struct-mem-seq . "}"
		"}" => shift 291

264:	type-name => "string" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 290

265:	add-expr => add-expr "+" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 289

266:	add-expr => add-expr "-" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 288

267:	mul-expr => mul-expr "*" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 287

268:	mul-expr => mul-expr "/" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 286

269:	unary-expr => "-" unary-expr .
		"\n" => reduce 269
		$default => reduce 269

270:	expr-seq => expr . elt-sep expr
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	expr-seq => expr .
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 285
		$default => reduce 276

271:	prim-expr => "[" expr-seq . "]"
		"]" => shift 284

272:	struct-elt-seq => ident . "=" expr elt-sep struct-elt-seq
		"=" => shift 283

273:	prim-expr => "{" struct-elt-seq . "}"
		"}" => shift 282

274:	prim-expr => "(" expr . ")"
		")" => shift 281

275:	qual-ident-1 => qual-ident-1 "." . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 280

276:	comp-inst-4 => comp-inst-3 "stack" "size" expr .
		"\n" => reduce 188
		$default => reduce 188

277:	comp-inst-3 => comp-inst-2 "queue" "size" expr .
		"\n" => reduce 186
		$default => reduce 186

278:	comp-inst-0 => "instance" ident ":" qual-ident . "base" "id" expr
		"base" => shift 279

279:	comp-inst-0 => "instance" ident ":" qual-ident "base" . "id" expr
		"id" => shift 438

280:	qual-ident-1 => qual-ident-1 "." ident .
		"\n" => reduce 286
		$default => reduce 286

281:	prim-expr => "(" expr ")" .
		"\n" => reduce 275
		$default => reduce 275

282:	prim-expr => "{" struct-elt-seq "}" .
		"\n" => reduce 274
		$default => reduce 274

283:	struct-elt-seq => ident "=" . expr elt-sep struct-elt-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 437

284:	prim-expr => "[" expr-seq "]" .
		"\n" => reduce 273
		$default => reduce 273

285:	expr-seq => expr elt-sep . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 436

286:	mul-expr => mul-expr "/" unary-expr .
		"\n" => reduce 267
		$default => reduce 267

287:	mul-expr => mul-expr "*" unary-expr .
		"\n" => reduce 266
		$default => reduce 266

288:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "-" mul-expr .
		"*" => shift 267
		"/" => shift 268
		"\n" => reduce 264
		$default => reduce 264

289:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "+" mul-expr .
		"*" => shift 267
		"/" => shift 268
		"\n" => reduce 263
		$default => reduce 263

290:	type-name => "string" "size" expr .
		"\n" => reduce 302
		$default => reduce 302

291:	struct-defn-0 => "struct" ident "{" struct-mem-seq "}" .
		"\n" => reduce 45
		$default => reduce 45

292:	mem-sep => mem-sep . "\n"
	struct-mem-seq => struct-mem mem-sep . struct-mem-seq
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 257
		struct-mem-0 => shift 258
		struct-mem-1 => shift 259
		struct-mem-2 => shift 260
		struct-mem-3 => shift 261
		struct-mem => shift 262
		struct-mem-seq => shift 435
		"\n" => shift 144
		$default => reduce 48

293:	struct-mem-3 => struct-mem-2 "format" . string
	string => . '$string
		'$string => shift 51
		string => shift 434

294:	struct-mem-2 => struct-mem-1 type-name .
		"\n" => reduce 54
		$default => reduce 54

295:	struct-mem-1 => struct-mem-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 433

296:	struct-mem-0 => ident ":" .
		$default => reduce 51

297:	enum-mem => ident "=" expr .
		"\n" => reduce 43
		$default => reduce 43

298:	enum-mem-seq => enum-mem elt-sep enum-mem-seq .
		$default => reduce 41

299:	formal-param => "ref" ident ":" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 432

300:	formal-param => ident ":" type-name .
		"\n" => reduce 247
		$default => reduce 247

301:	param-list => param-list elt-sep formal-param .
		"\n" => reduce 246
		$default => reduce 246

302:	elt-sep => mem-sep "\n" .
	mem-sep => mem-sep "\n" .
		"\n" => reduce 6
		$default => reduce 3

303:	loc-spec => "locate" "type" qual-ident "at" string .
		"\n" => reduce 259
		$default => reduce 259

304:	loc-spec => "locate" "topology" qual-ident "at" string .
		"\n" => reduce 258
		$default => reduce 258

305:	loc-spec => "locate" "state" "machine" qual-ident "at" . string
	string => . '$string
		'$string => shift 51
		string => shift 431

306:	loc-spec => "locate" "port" qual-ident "at" string .
		"\n" => reduce 256
		$default => reduce 256

307:	loc-spec => "locate" "cnstant" qual-ident "at" string .
		"\n" => reduce 255
		$default => reduce 255

308:	loc-spec => "locate" "component" qual-ident "at" string .
		"\n" => reduce 254
		$default => reduce 254

309:	loc-spec => "locate" "instance" qual-ident "at" string .
		"\n" => reduce 253
		$default => reduce 253

310:	topology-defn => "topology" ident "{" topo-mem-seq "}" .
		"\n" => reduce 195
		$default => reduce 195

311:	mem-sep => mem-sep . "\n"
	topo-mem-seq => topo-mem mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	topo-mem => . include-spec
	include-spec => . "include" string
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . tlm-pktset-spec-1
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "text" "event"
	pattern-kind => . "time"
	tlm-pktset-spec-1 => . tlm-pktset-spec-0
	tlm-pktset-spec-1 => . tlm-pktset-spec-0 "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec-0 => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
		tlm-pktset-spec-0 => shift 219
		"time" => shift 220
		"text" => shift 221
		"telemetry" => shift 222
		"param" => shift 223
		"health" => shift 224
		"event" => shift 225
		"command" => shift 226
		tlm-pktset-spec-1 => shift 227
		pattern-kind => shift 228
		"connections" => shift 229
		"private" => shift 230
		"instance" => shift 231
		"include" => shift 32
		include-spec => shift 232
		"import" => shift 233
		tlm-pktset-spec => shift 234
		conn-graph-spec => shift 235
		comp-inst-spec => shift 236
		topo-mem => shift 237
		topo-mem-seq => shift 430
		"\n" => shift 144
		$default => reduce 196

312:	topo-mem => "import" qual-ident .
		"\n" => reduce 201
		$default => reduce 201

313:	comp-inst-spec => "instance" ident .
		"\n" => reduce 203
		$default => reduce 203

314:	comp-inst-spec => "private" "instance" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 429

315:	conn-graph-spec => "connections" ident . "{" conn-seq "}"
		"{" => shift 428

316:	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident
	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident "{" qual-ident-seq "}"
		"instance" => shift 427

317:	tlm-pktset-spec-0 => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 426

318:	pattern-kind => "text" "event" .
		$default => reduce 213

319:	tlm-pktset-spec-1 => tlm-pktset-spec-0 "omit" . "{" tlm-chan-id-seq "}"
		"{" => shift 425

320:	component-defn => comp-kind ident "{" comp-mem-seq "}" .
		"\n" => reduce 57
		$default => reduce 57

321:	mem-sep => mem-sep . "\n"
	comp-mem-seq => comp-mem-seq mem-sep . comp-mem
	comp-mem => . include-spec
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	include-spec => . "include" string
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	enum-defn-0 => . "enum" ident
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 expr
	spc-port-inst-0 => . spc-port-kind "port" ident ":"
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" expr
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 149
		event-spec-0 => shift 150
		"time" => shift 151
		"text" => shift 152
		"telemetry" => shift 153
		"param" => shift 154
		"event" => shift 155
		"command" => shift 156
		"output" => shift 157
		tlm-chan-1 => shift 158
		param-spec-0 => shift 159
		event-spec-1 => shift 160
		"sync" => shift 161
		"guarded" => shift 162
		"async" => shift 163
		cmd-spec-0 => shift 164
		"internal" => shift 165
		spc-port-kind => shift 166
		gen-port-inst-0 => shift 167
		"enum" => shift 6
		"product" => shift 168
		tlm-chan-2 => shift 169
		param-spec-1 => shift 170
		event-spec-2 => shift 171
		cmd-spec-1 => shift 172
		int-port-defn-0 => shift 173
		input-port-kind => shift 174
		spc-port-inst-0 => shift 175
		gen-port-inst-1 => shift 176
		enum-defn-0 => shift 8
		cont-spec-0 => shift 177
		record-spec-0 => shift 178
		tlm-chan-3 => shift 179
		param-spec-2 => shift 180
		event-spec-3 => shift 181
		cmd-spec-2 => shift 182
		int-port-defn-1 => shift 183
		spc-port-inst-1 => shift 184
		gen-port-inst-2 => shift 185
		"struct" => shift 11
		enum-defn-1 => shift 12
		cont-spec-1 => shift 186
		record-spec-1 => shift 187
		tlm-chan-4 => shift 188
		param-spec-3 => shift 189
		event-spec-4 => shift 190
		cmd-spec-3 => shift 191
		int-port-defn-2 => shift 192
		spc-port-inst-2 => shift 193
		gen-port-inst-3 => shift 194
		struct-defn-0 => shift 18
		enum-defn-2 => shift 19
		"match" => shift 195
		cont-spec-2 => shift 196
		record-spec-2 => shift 197
		tlm-chan-5 => shift 198
		param-spec-4 => shift 199
		event-spec-5 => shift 200
		cmd-spec-4 => shift 201
		int-port-defn-3 => shift 202
		spc-port-inst-3 => shift 203
		gen-port-inst-4 => shift 204
		struct-defn-1 => shift 25
		enum-defn-3 => shift 26
		"include" => shift 32
		tlm-chan-spec => shift 205
		prod-cont-spec => shift 206
		record-spec => shift 207
		param-spec => shift 208
		event-spec => shift 209
		command-spec => shift 210
		port-match-spec => shift 211
		port-inst => shift 212
		int-port-spec => shift 213
		struct-defn => shift 214
		enum-defn => shift 215
		include-spec => shift 216
		comp-mem => shift 424
		"\n" => shift 144

322:	port-match-spec => "match" ident . "with" ident
		"with" => shift 423

323:	queue-full-beh => "hook" .
		"\n" => reduce 252
		$default => reduce 252

324:	queue-full-beh => "drop" .
		"\n" => reduce 251
		$default => reduce 251

325:	queue-full-beh => "block" .
		"\n" => reduce 250
		$default => reduce 250

326:	queue-full-beh => "assert" .
		"\n" => reduce 249
		$default => reduce 249

327:	gen-port-inst-4 => gen-port-inst-3 queue-full-beh .
		"\n" => reduce 86
		$default => reduce 86

328:	spc-port-inst-3 => spc-port-inst-2 queue-full-beh .
		"\n" => reduce 93
		$default => reduce 93

329:	int-port-defn-3 => int-port-defn-2 queue-full-beh .
		"\n" => reduce 101
		$default => reduce 101

330:	cmd-spec-4 => cmd-spec-3 queue-full-beh .
		"\n" => reduce 111
		$default => reduce 111

331:	event-spec-5 => event-spec-4 "throttle" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 422

332:	param-spec-4 => param-spec-3 "save" . "opcode" expr
		"opcode" => shift 421

333:	tlm-chan-5 => tlm-chan-4 "high" . "{" tlm-lim-seq "}"
		"{" => shift 420

334:	record-spec-2 => record-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 419

335:	cont-spec-2 => cont-spec-1 "default" . "priority" expr
		"priority" => shift 418

336:	gen-port-inst-3 => gen-port-inst-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 417

337:	spc-port-inst-2 => spc-port-inst-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 416

338:	int-port-defn-2 => int-port-defn-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 415

339:	cmd-spec-3 => cmd-spec-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 414

340:	event-spec-4 => event-spec-3 "format" . string
	string => . '$string
		'$string => shift 51
		string => shift 413

341:	param-spec-3 => param-spec-2 "set" . "opcode" expr
		"opcode" => shift 412

342:	tlm-chan-4 => tlm-chan-3 "low" . "{" tlm-lim-seq "}"
		"{" => shift 411

343:	record-spec-1 => record-spec-0 "array" .
		"\n" => reduce 170
		$default => reduce 170

344:	cont-spec-1 => cont-spec-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 410

345:	gen-port-inst-2 => gen-port-inst-1 qual-ident .
		"\n" => reduce 81
		$default => reduce 81

346:	gen-port-inst-2 => gen-port-inst-1 "serial" .
		"\n" => reduce 82
		$default => reduce 82

347:	spc-port-kind => "telemetry" .
		$default => reduce 122

348:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
		"get" => shift 361
		"recv" => shift 362
		"request" => shift 363
		"send" => shift 364

349:	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 377
		"set" => shift 378

350:	spc-port-kind => "event" .
		$default => reduce 115

351:	spc-port-inst-1 => input-port-kind spc-port-inst-0 .
		"\n" => reduce 89
		$default => reduce 89

352:	gen-port-inst-0 => input-port-kind "input" . "port" ident ":"
		"port" => shift 409

353:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
	cmd-spec-0 => input-port-kind "command" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 408
		"recv" => shift 373
		"reg" => shift 374
		"resp" => shift 375

354:	int-port-defn-1 => int-port-defn-0 "(" . param-list ")"
	param-list => . formal-param
	param-list => . param-list elt-sep formal-param
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 407

355:	cmd-spec-2 => cmd-spec-1 "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 406

356:	event-spec-3 => event-spec-2 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 405

357:	param-spec-2 => param-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 404

358:	tlm-chan-3 => tlm-chan-2 "format" . string
	string => . '$string
		'$string => shift 51
		string => shift 403

359:	record-spec-0 => "product" "record" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		ident => shift 402

360:	cont-spec-0 => "product" "container" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 401

361:	spc-port-kind => "product" "get" .
		$default => reduce 118

362:	spc-port-kind => "product" "recv" .
		$default => reduce 119

363:	spc-port-kind => "product" "request" .
		$default => reduce 120

364:	spc-port-kind => "product" "send" .
		$default => reduce 121

365:	gen-port-inst-1 => gen-port-inst-0 expr .
		$default => reduce 80

366:	spc-port-inst-0 => spc-port-kind "port" . ident ":"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 400

367:	int-port-defn-0 => "internal" "port" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 399

368:	cmd-spec-1 => cmd-spec-0 "(" . param-list ")"
	param-list => . formal-param
	param-list => . param-list elt-sep formal-param
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 398

369:	event-spec-2 => event-spec-1 "severity" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 397

370:	param-spec-1 => param-spec-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 396

371:	tlm-chan-2 => tlm-chan-1 "update" . tlm-update
	tlm-update => . "always"
	tlm-update => . "on" "change"
		"on" => shift 393
		"always" => shift 394
		tlm-update => shift 395

372:	gen-port-inst-0 => "output" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 392

373:	spc-port-kind => "command" "recv" .
		$default => reduce 112

374:	spc-port-kind => "command" "reg" .
		$default => reduce 113

375:	spc-port-kind => "command" "resp" .
		$default => reduce 114

376:	event-spec-0 => "event" ident .
		$default => reduce 129

377:	spc-port-kind => "param" "get" .
		$default => reduce 116

378:	spc-port-kind => "param" "set" .
		$default => reduce 117

379:	param-spec-0 => "param" ident . ":" type-name
		":" => shift 391

380:	tlm-chan-0 => "telemetry" ident . ":" type-name
		":" => shift 390

381:	spc-port-kind => "text" "event" .
		$default => reduce 123

382:	spc-port-kind => "time" "get" .
		$default => reduce 124

383:	event-spec-1 => event-spec-0 "(" . param-list ")"
	param-list => . formal-param
	param-list => . param-list elt-sep formal-param
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 53
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 389

384:	tlm-chan-1 => tlm-chan-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 388

385:	index => "[" expr . "]"
		"]" => shift 387

386:	module-defn => "module" ident "{" module-mem-seq "}" .
		"\n" => reduce 23
		$default => reduce 23

387:	index => "[" expr "]" .
		"\n" => reduce 289
		$default => reduce 289

388:	tlm-chan-1 => tlm-chan-0 "id" expr .
		"\n" => reduce 151
		$default => reduce 151

389:	param-list => param-list . elt-sep formal-param
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	event-spec-1 => event-spec-0 "(" param-list . ")"
		")" => shift 474
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 251

390:	tlm-chan-0 => "telemetry" ident ":" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 473

391:	param-spec-0 => "param" ident ":" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 472

392:	gen-port-inst-0 => "output" "port" ident . ":"
		":" => shift 471

393:	tlm-update => "on" . "change"
		"change" => shift 470

394:	tlm-update => "always" .
		"\n" => reduce 160
		$default => reduce 160

395:	tlm-chan-2 => tlm-chan-1 "update" tlm-update .
		"\n" => reduce 153
		$default => reduce 153

396:	param-spec-1 => param-spec-0 "default" expr .
		"\n" => reduce 141
		$default => reduce 141

397:	event-spec-2 => event-spec-1 "severity" expr .
		$default => reduce 132

398:	param-list => param-list . elt-sep formal-param
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	cmd-spec-1 => cmd-spec-0 "(" param-list . ")"
		")" => shift 469
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 251

399:	int-port-defn-0 => "internal" "port" ident .
		"\n" => reduce 95
		$default => reduce 95

400:	spc-port-inst-0 => spc-port-kind "port" ident . ":"
		":" => shift 468

401:	cont-spec-0 => "product" "container" ident .
		"\n" => reduce 174
		$default => reduce 174

402:	record-spec-0 => "product" "record" ident . ":" type-name
		":" => shift 467

403:	tlm-chan-3 => tlm-chan-2 "format" string .
		"\n" => reduce 155
		$default => reduce 155

404:	param-spec-2 => param-spec-1 "id" expr .
		"\n" => reduce 143
		$default => reduce 143

405:	event-spec-3 => event-spec-2 "id" expr .
		$default => reduce 134

406:	cmd-spec-2 => cmd-spec-1 "opcode" expr .
		"\n" => reduce 107
		$default => reduce 107

407:	param-list => param-list . elt-sep formal-param
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	int-port-defn-1 => int-port-defn-0 "(" param-list . ")"
		")" => shift 466
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 251

408:	cmd-spec-0 => input-port-kind "command" ident .
		"\n" => reduce 103
		$default => reduce 103

409:	gen-port-inst-0 => input-port-kind "input" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 53
		ident => shift 465

410:	cont-spec-1 => cont-spec-0 "id" expr .
		"\n" => reduce 176
		$default => reduce 176

411:	tlm-chan-4 => tlm-chan-3 "low" "{" . tlm-lim-seq "}"
	tlm-lim-seq => . tlm-lim
	tlm-lim-seq => . tlm-lim-seq elt-sep tlm-lim
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 457
		"orange" => shift 458
		"red" => shift 459
		tlm-lim => shift 460
		tlm-lim-seq => shift 464

412:	param-spec-3 => param-spec-2 "set" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 463

413:	event-spec-4 => event-spec-3 "format" string .
		"\n" => reduce 135
		$default => reduce 135

414:	cmd-spec-3 => cmd-spec-2 "priority" expr .
		"\n" => reduce 109
		$default => reduce 109

415:	int-port-defn-2 => int-port-defn-1 "priority" expr .
		"\n" => reduce 99
		$default => reduce 99

416:	spc-port-inst-2 => spc-port-inst-1 "priority" expr .
		"\n" => reduce 91
		$default => reduce 91

417:	gen-port-inst-3 => gen-port-inst-2 "priority" expr .
		"\n" => reduce 84
		$default => reduce 84

418:	cont-spec-2 => cont-spec-1 "default" "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 462

419:	record-spec-2 => record-spec-1 "id" expr .
		"\n" => reduce 172
		$default => reduce 172

420:	tlm-chan-5 => tlm-chan-4 "high" "{" . tlm-lim-seq "}"
	tlm-lim-seq => . tlm-lim
	tlm-lim-seq => . tlm-lim-seq elt-sep tlm-lim
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 457
		"orange" => shift 458
		"red" => shift 459
		tlm-lim => shift 460
		tlm-lim-seq => shift 461

421:	param-spec-4 => param-spec-3 "save" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 456

422:	event-spec-5 => event-spec-4 "throttle" expr .
		"\n" => reduce 137
		$default => reduce 137

423:	port-match-spec => "match" ident "with" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 455

424:	comp-mem-seq => comp-mem-seq mem-sep comp-mem .
		"\n" => reduce 62
		$default => reduce 62

425:	tlm-pktset-spec-1 => tlm-pktset-spec-0 "omit" "{" . tlm-chan-id-seq "}"
	tlm-chan-id-seq => . qual-ident
	tlm-chan-id-seq => . tlm-chan-id-seq elt-sep qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 453
		tlm-chan-id-seq => shift 454

426:	tlm-pktset-spec-0 => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}"
		"{" => shift 452

427:	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident "{" qual-ident-seq "}"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 451

428:	conn-graph-spec => "connections" ident "{" . conn-seq "}"
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . connection-4
	connection-4 => . connection-3
	connection-4 => . connection-3 "[" expr "]"
	connection-3 => . connection-2 "->" qual-ident
	connection-2 => . connection-1
	connection-2 => . connection-1 "[" expr "]"
	connection-1 => . connection-0
	connection-1 => . "unmatched" connection-0
	connection-0 => . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 442
		"unmatched" => shift 443
		connection-0 => shift 444
		connection-1 => shift 445
		connection-2 => shift 446
		connection-3 => shift 447
		connection-4 => shift 448
		connection => shift 449
		conn-seq => shift 450
		$default => reduce 215

429:	comp-inst-spec => "private" "instance" ident .
		"\n" => reduce 204
		$default => reduce 204

430:	topo-mem-seq => topo-mem mem-sep topo-mem-seq .
		$default => reduce 197

431:	loc-spec => "locate" "state" "machine" qual-ident "at" string .
		"\n" => reduce 257
		$default => reduce 257

432:	formal-param => "ref" ident ":" type-name .
		"\n" => reduce 248
		$default => reduce 248

433:	struct-mem-1 => struct-mem-0 "[" expr . "]"
		"]" => shift 441

434:	struct-mem-3 => struct-mem-2 "format" string .
		"\n" => reduce 56
		$default => reduce 56

435:	struct-mem-seq => struct-mem mem-sep struct-mem-seq .
		$default => reduce 49

436:	expr-seq => expr elt-sep expr .
		$default => reduce 277

437:	struct-elt-seq => ident "=" expr . elt-sep struct-elt-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 440

438:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 439

439:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr .
		"\n" => reduce 180
		$default => reduce 180

440:	struct-elt-seq => ident "=" expr elt-sep . struct-elt-seq
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 53
		ident => shift 272
		struct-elt-seq => shift 500
		$default => reduce 278

441:	struct-mem-1 => struct-mem-0 "[" expr "]" .
		$default => reduce 53

442:	connection-0 => qual-ident .
		$default => reduce 218

443:	connection-1 => "unmatched" . connection-0
	connection-0 => . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 442
		connection-0 => shift 499

444:	connection-1 => connection-0 .
		$default => reduce 219

445:	connection-2 => connection-1 . "[" expr "]"
	connection-2 => connection-1 .
		"[" => shift 498
		$default => reduce 221

446:	connection-3 => connection-2 . "->" qual-ident
		"->" => shift 497

447:	connection-4 => connection-3 . "[" expr "]"
	connection-4 => connection-3 .
		"[" => shift 496
		"\n" => reduce 224
		$default => reduce 224

448:	connection => connection-4 .
		"\n" => reduce 217
		$default => reduce 217

449:	conn-seq => connection . elt-sep conn-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 495

450:	conn-graph-spec => "connections" ident "{" conn-seq . "}"
		"}" => shift 494

451:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident .
	conn-graph-spec => pattern-kind "connections" "instance" qual-ident . "{" qual-ident-seq "}"
		"{" => shift 493
		"\n" => reduce 206
		$default => reduce 206

452:	tlm-pktset-spec-0 => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . tlm-pkt-spec-2
	tlm-pkt-spec-2 => . tlm-pkt-spec-1 "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec-1 => . tlm-pkt-spec-0
	tlm-pkt-spec-1 => . tlm-pkt-spec-0 "id" expr
	tlm-pkt-spec-0 => . "packet" ident
		"packet" => shift 485
		tlm-pkt-spec-0 => shift 486
		tlm-pkt-spec-1 => shift 487
		tlm-pkt-spec-2 => shift 488
		"include" => shift 32
		tlm-pkt-spec => shift 489
		include-spec => shift 490
		tlm-pktgrp-mem => shift 491
		tlm-pktgrp-mem-seq => shift 492
		$default => reduce 230

453:	tlm-chan-id-seq => qual-ident .
		"\n" => reduce 243
		$default => reduce 243

454:	tlm-chan-id-seq => tlm-chan-id-seq . elt-sep qual-ident
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	tlm-pktset-spec-1 => tlm-pktset-spec-0 "omit" "{" tlm-chan-id-seq . "}"
		"}" => shift 483
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 484

455:	port-match-spec => "match" ident "with" ident .
		"\n" => reduce 260
		$default => reduce 260

456:	param-spec-4 => param-spec-3 "save" "opcode" expr .
		"\n" => reduce 147
		$default => reduce 147

457:	tlm-lim => "yellow" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 482

458:	tlm-lim => "orange" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 481

459:	tlm-lim => "red" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 480

460:	tlm-lim-seq => tlm-lim .
		"\n" => reduce 162
		$default => reduce 162

461:	tlm-lim-seq => tlm-lim-seq . elt-sep tlm-lim
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq . "}"
		"}" => shift 479
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 478

462:	cont-spec-2 => cont-spec-1 "default" "priority" expr .
		"\n" => reduce 178
		$default => reduce 178

463:	param-spec-3 => param-spec-2 "set" "opcode" expr .
		"\n" => reduce 145
		$default => reduce 145

464:	tlm-lim-seq => tlm-lim-seq . elt-sep tlm-lim
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq . "}"
		"}" => shift 477
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 478

465:	gen-port-inst-0 => input-port-kind "input" "port" ident . ":"
		":" => shift 476

466:	int-port-defn-1 => int-port-defn-0 "(" param-list ")" .
		"\n" => reduce 97
		$default => reduce 97

467:	record-spec-0 => "product" "record" ident ":" . type-name
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		type-name => shift 475

468:	spc-port-inst-0 => spc-port-kind "port" ident ":" .
		"\n" => reduce 87
		$default => reduce 87

469:	cmd-spec-1 => cmd-spec-0 "(" param-list ")" .
		"\n" => reduce 105
		$default => reduce 105

470:	tlm-update => "on" "change" .
		"\n" => reduce 161
		$default => reduce 161

471:	gen-port-inst-0 => "output" "port" ident ":" .
		$default => reduce 78

472:	param-spec-0 => "param" ident ":" type-name .
		"\n" => reduce 139
		$default => reduce 139

473:	tlm-chan-0 => "telemetry" ident ":" type-name .
		"\n" => reduce 149
		$default => reduce 149

474:	event-spec-1 => event-spec-0 "(" param-list ")" .
		$default => reduce 131

475:	record-spec-0 => "product" "record" ident ":" type-name .
		"\n" => reduce 168
		$default => reduce 168

476:	gen-port-inst-0 => input-port-kind "input" "port" ident ":" .
		$default => reduce 77

477:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}" .
		"\n" => reduce 157
		$default => reduce 157

478:	tlm-lim-seq => tlm-lim-seq elt-sep . tlm-lim
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 457
		"orange" => shift 458
		"red" => shift 459
		tlm-lim => shift 513

479:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}" .
		"\n" => reduce 159
		$default => reduce 159

480:	tlm-lim => "red" expr .
		"\n" => reduce 164
		$default => reduce 164

481:	tlm-lim => "orange" expr .
		"\n" => reduce 165
		$default => reduce 165

482:	tlm-lim => "yellow" expr .
		"\n" => reduce 166
		$default => reduce 166

483:	tlm-pktset-spec-1 => tlm-pktset-spec-0 "omit" "{" tlm-chan-id-seq "}" .
		"\n" => reduce 229
		$default => reduce 229

484:	tlm-chan-id-seq => tlm-chan-id-seq elt-sep . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 512

485:	tlm-pkt-spec-0 => "packet" . ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 511

486:	tlm-pkt-spec-1 => tlm-pkt-spec-0 . "id" expr
	tlm-pkt-spec-1 => tlm-pkt-spec-0 .
		"id" => shift 510
		$default => reduce 236

487:	tlm-pkt-spec-2 => tlm-pkt-spec-1 . "group" expr "{" tlm-pkt-mem-seq "}"
		"group" => shift 509

488:	tlm-pkt-spec => tlm-pkt-spec-2 .
		"\n" => reduce 234
		$default => reduce 234

489:	tlm-pktgrp-mem => tlm-pkt-spec .
		"\n" => reduce 233
		$default => reduce 233

490:	tlm-pktgrp-mem => include-spec .
		"\n" => reduce 232
		$default => reduce 232

491:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 508

492:	tlm-pktset-spec-0 => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}"
		"}" => shift 507

493:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" . qual-ident-seq "}"
	qual-ident-seq => . qual-ident
	qual-ident-seq => . qual-ident-seq elt-sep qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 505
		qual-ident-seq => shift 506

494:	conn-graph-spec => "connections" ident "{" conn-seq "}" .
		"\n" => reduce 205
		$default => reduce 205

495:	conn-seq => connection elt-sep . conn-seq
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . connection-4
	connection-4 => . connection-3
	connection-4 => . connection-3 "[" expr "]"
	connection-3 => . connection-2 "->" qual-ident
	connection-2 => . connection-1
	connection-2 => . connection-1 "[" expr "]"
	connection-1 => . connection-0
	connection-1 => . "unmatched" connection-0
	connection-0 => . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 442
		"unmatched" => shift 443
		connection-0 => shift 444
		connection-1 => shift 445
		connection-2 => shift 446
		connection-3 => shift 447
		connection-4 => shift 448
		connection => shift 449
		conn-seq => shift 504
		$default => reduce 215

496:	connection-4 => connection-3 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 503

497:	connection-3 => connection-2 "->" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 502

498:	connection-2 => connection-1 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 501

499:	connection-1 => "unmatched" connection-0 .
		$default => reduce 220

500:	struct-elt-seq => ident "=" expr elt-sep struct-elt-seq .
		$default => reduce 279

501:	connection-2 => connection-1 "[" expr . "]"
		"]" => shift 520

502:	connection-3 => connection-2 "->" qual-ident .
		"\n" => reduce 223
		$default => reduce 223

503:	connection-4 => connection-3 "[" expr . "]"
		"]" => shift 519

504:	conn-seq => connection elt-sep conn-seq .
		$default => reduce 216

505:	qual-ident-seq => qual-ident .
		"\n" => reduce 287
		$default => reduce 287

506:	qual-ident-seq => qual-ident-seq . elt-sep qual-ident
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq . "}"
		"}" => shift 517
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 518

507:	tlm-pktset-spec-0 => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" .
		"\n" => reduce 227
		$default => reduce 227

508:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . tlm-pkt-spec-2
	tlm-pkt-spec-2 => . tlm-pkt-spec-1 "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec-1 => . tlm-pkt-spec-0
	tlm-pkt-spec-1 => . tlm-pkt-spec-0 "id" expr
	tlm-pkt-spec-0 => . "packet" ident
		"packet" => shift 485
		tlm-pkt-spec-0 => shift 486
		tlm-pkt-spec-1 => shift 487
		tlm-pkt-spec-2 => shift 488
		"include" => shift 32
		tlm-pkt-spec => shift 489
		include-spec => shift 490
		tlm-pktgrp-mem => shift 491
		tlm-pktgrp-mem-seq => shift 516
		$default => reduce 230

509:	tlm-pkt-spec-2 => tlm-pkt-spec-1 "group" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 515

510:	tlm-pkt-spec-1 => tlm-pkt-spec-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		'$string => shift 51
		'$fixed => shift 91
		'$float => shift 92
		"(" => shift 93
		"{" => shift 94
		"[" => shift 95
		string => shift 96
		number => shift 97
		qual-ident => shift 98
		"-" => shift 99
		prim-expr => shift 100
		unary-expr => shift 101
		mul-expr => shift 102
		add-expr => shift 103
		expr => shift 514

511:	tlm-pkt-spec-0 => "packet" ident .
		$default => reduce 235

512:	tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident .
		"\n" => reduce 244
		$default => reduce 244

513:	tlm-lim-seq => tlm-lim-seq elt-sep tlm-lim .
		"\n" => reduce 163
		$default => reduce 163

514:	tlm-pkt-spec-1 => tlm-pkt-spec-0 "id" expr .
		$default => reduce 237

515:	tlm-pkt-spec-2 => tlm-pkt-spec-1 "group" expr . "{" tlm-pkt-mem-seq "}"
		"{" => shift 522

516:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 231

517:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}" .
		"\n" => reduce 207
		$default => reduce 207

518:	qual-ident-seq => qual-ident-seq elt-sep . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		qual-ident => shift 521

519:	connection-4 => connection-3 "[" expr "]" .
		"\n" => reduce 225
		$default => reduce 225

520:	connection-2 => connection-1 "[" expr "]" .
		$default => reduce 222

521:	qual-ident-seq => qual-ident-seq elt-sep qual-ident .
		"\n" => reduce 288
		$default => reduce 288

522:	tlm-pkt-spec-2 => tlm-pkt-spec-1 "group" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		"include" => shift 32
		qual-ident => shift 523
		include-spec => shift 524
		tlm-pkt-mem => shift 525
		tlm-pkt-mem-seq => shift 526
		$default => reduce 239

523:	tlm-pkt-mem => qual-ident .
		"\n" => reduce 242
		$default => reduce 242

524:	tlm-pkt-mem => include-spec .
		"\n" => reduce 241
		$default => reduce 241

525:	tlm-pkt-mem-seq => tlm-pkt-mem . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . mem-sep "\n"
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		";" => shift 49
		mem-sep => shift 248
		"\n" => shift 249
		"," => shift 250
		elt-sep => shift 528

526:	tlm-pkt-spec-2 => tlm-pkt-spec-1 "group" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 527

527:	tlm-pkt-spec-2 => tlm-pkt-spec-1 "group" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 238
		$default => reduce 238

528:	tlm-pkt-mem-seq => tlm-pkt-mem elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 53
		ident => shift 89
		qual-ident-1 => shift 90
		"include" => shift 32
		qual-ident => shift 523
		include-spec => shift 524
		tlm-pkt-mem => shift 525
		tlm-pkt-mem-seq => shift 529
		$default => reduce 239

529:	tlm-pkt-mem-seq => tlm-pkt-mem elt-sep tlm-pkt-mem-seq .
		$default => reduce 240

