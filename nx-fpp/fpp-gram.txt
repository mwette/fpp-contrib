0 $start => translation-unit
1 elt-sep => ","
2 elt-sep => "\n"
3 elt-sep => elt-sep "\n"
4 mem-sep => ";"
5 mem-sep => "\n"
6 mem-sep => mem-sep "\n"
7 include-spec => "include" string
8 translation-unit => module-mem-seq
9 module-mem-seq =>
10 module-mem-seq => mod-mem mem-sep module-mem-seq
11 mod-mem => lone-anno
12 mod-mem => include-spec
13 mod-mem => component-defn
14 mod-mem => comp-inst-defn
15 mod-mem => topology-defn
16 mod-mem => const-defn
17 mod-mem => module-defn
18 mod-mem => port-defn
19 mod-mem => struct-defn
20 mod-mem => loc-spec
21 mod-mem => abs-type-defn
22 mod-mem => array-defn
23 mod-mem => enum-defn
24 mod-mem => stmach-defn
25 module-defn => "module" ident "{" module-mem-seq "}"
26 const-defn => "constant" ident "=" expr
27 abs-type-defn => "type" ident
28 array-defn => "array" ident "=" index ident
29 enum-defn => enum-defn-3
30 enum-defn-0 => "enum" ident
31 enum-defn-1 => enum-defn-0
32 enum-defn-1 => enum-defn-0 ":" type-name
33 enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}"
34 enum-defn-3 => enum-defn-2
35 enum-defn-3 => enum-defn-2 "default" expr
36 enum-mem-seq =>
37 enum-mem-seq => enum-mem elt-sep enum-mem-seq
38 enum-mem => ident
39 enum-mem => ident "=" expr
40 struct-defn => struct-defn-1
41 struct-defn-0 => "struct" ident "{" struct-mem-seq "}"
42 struct-defn-1 => struct-defn-0
43 struct-defn-1 => struct-defn-0 "default" expr
44 struct-mem-seq =>
45 struct-mem-seq => struct-mem mem-sep struct-mem-seq
46 struct-mem => struct-mem-3
47 struct-mem => struct-mem-3 '$code-anno
48 struct-mem-0 => ident ":"
49 struct-mem-1 => struct-mem-0
50 struct-mem-1 => struct-mem-0 "[" expr "]"
51 struct-mem-2 => struct-mem-1 type-name
52 struct-mem-3 => struct-mem-2
53 struct-mem-3 => struct-mem-2 "format" string
54 port-defn => port-defn-2
55 port-defn-0 => "port" ident
56 port-defn-1 => port-defn-0
57 port-defn-1 => port-defn-0 "(" param-list ")"
58 port-defn-2 => port-defn-1
59 port-defn-2 => port-defn-1 "->" type-name
60 component-defn => comp-kind "component" ident "{" comp-mem-seq "}"
61 comp-kind => "active"
62 comp-kind => "passive"
63 comp-kind => "queued"
64 comp-mem-seq =>
65 comp-mem-seq => comp-mem mem-sep comp-mem-seq
66 comp-mem => lone-anno
67 comp-mem => include-spec
68 comp-mem => enum-defn
69 comp-mem => struct-defn
70 comp-mem => int-port-spec
71 comp-mem => port-inst
72 comp-mem => port-match-spec
73 comp-mem => command-spec
74 comp-mem => event-spec
75 comp-mem => param-spec
76 comp-mem => record-spec
77 comp-mem => prod-cont-spec
78 comp-mem => tlm-chan-spec
79 comp-mem => stmach-defn
80 comp-mem => stmach-inst
81 port-inst => gen-port-inst-4
82 port-inst => spc-port-inst-3
83 gen-port-inst-0 => input-port-kind "input" "port" ident ":"
84 gen-port-inst-0 => "output" "port" ident ":"
85 gen-port-inst-1 => gen-port-inst-0
86 gen-port-inst-1 => gen-port-inst-0 "[" expr "]"
87 gen-port-inst-2 => gen-port-inst-1 qual-ident
88 gen-port-inst-2 => gen-port-inst-1 "serial"
89 gen-port-inst-3 => gen-port-inst-2
90 gen-port-inst-3 => gen-port-inst-2 "priority" expr
91 gen-port-inst-4 => gen-port-inst-3
92 gen-port-inst-4 => gen-port-inst-3 queue-full-beh
93 spc-port-inst-0 => spc-port-kind "port" ident
94 spc-port-inst-1 => spc-port-inst-0
95 spc-port-inst-1 => input-port-kind spc-port-inst-0
96 spc-port-inst-2 => spc-port-inst-1
97 spc-port-inst-2 => spc-port-inst-1 "priority" expr
98 spc-port-inst-3 => spc-port-inst-2
99 spc-port-inst-3 => spc-port-inst-2 queue-full-beh
100 int-port-spec => int-port-defn-3
101 int-port-defn-0 => "internal" "port" ident
102 int-port-defn-1 => int-port-defn-0
103 int-port-defn-1 => int-port-defn-0 "(" param-list ")"
104 int-port-defn-2 => int-port-defn-1
105 int-port-defn-2 => int-port-defn-1 "priority" expr
106 int-port-defn-3 => int-port-defn-2
107 int-port-defn-3 => int-port-defn-2 queue-full-beh
108 command-spec => cmd-spec-4
109 cmd-spec-0 => input-port-kind "command" ident
110 cmd-spec-1 => cmd-spec-0
111 cmd-spec-1 => cmd-spec-0 "(" param-list ")"
112 cmd-spec-2 => cmd-spec-1
113 cmd-spec-2 => cmd-spec-1 "opcode" expr
114 cmd-spec-3 => cmd-spec-2
115 cmd-spec-3 => cmd-spec-2 "priority" expr
116 cmd-spec-4 => cmd-spec-3
117 cmd-spec-4 => cmd-spec-3 queue-full-beh
118 spc-port-kind => "command" "recv"
119 spc-port-kind => "command" "reg"
120 spc-port-kind => "command" "resp"
121 spc-port-kind => "event"
122 spc-port-kind => "param" "get"
123 spc-port-kind => "param" "set"
124 spc-port-kind => "product" "get"
125 spc-port-kind => "product" "recv"
126 spc-port-kind => "product" "request"
127 spc-port-kind => "product" "send"
128 spc-port-kind => "telemetry"
129 spc-port-kind => "text" "event"
130 spc-port-kind => "time" "get"
131 input-port-kind => "async"
132 input-port-kind => "guarded"
133 input-port-kind => "sync"
134 event-spec => event-spec-5
135 event-spec-0 => "event" ident
136 event-spec-1 => event-spec-0
137 event-spec-1 => event-spec-0 "(" param-list ")"
138 event-spec-2 => event-spec-1 "severity" severity
139 event-spec-3 => event-spec-2
140 event-spec-3 => event-spec-2 "id" expr
141 event-spec-4 => event-spec-3 "format" string
142 event-spec-5 => event-spec-4
143 event-spec-5 => event-spec-4 "throttle" expr
144 severity => "activity" "high"
145 severity => "activity" "low"
146 severity => "command"
147 severity => "diagnostic"
148 severity => "fatal"
149 severity => "warning" "high"
150 severity => "warning" "low"
151 param-spec => param-spec-4
152 param-spec-0 => "param" ident ":" type-name
153 param-spec-1 => param-spec-0
154 param-spec-1 => param-spec-0 "default" expr
155 param-spec-2 => param-spec-1
156 param-spec-2 => param-spec-1 "id" expr
157 param-spec-3 => param-spec-2
158 param-spec-3 => param-spec-2 "set" "opcode" expr
159 param-spec-4 => param-spec-3
160 param-spec-4 => param-spec-3 "save" "opcode" expr
161 tlm-chan-spec => tlm-chan-5
162 tlm-chan-0 => "telemetry" ident ":" type-name
163 tlm-chan-1 => tlm-chan-0
164 tlm-chan-1 => tlm-chan-0 "id" expr
165 tlm-chan-2 => tlm-chan-1
166 tlm-chan-2 => tlm-chan-1 "update" tlm-update
167 tlm-chan-3 => tlm-chan-2
168 tlm-chan-3 => tlm-chan-2 "format" string
169 tlm-chan-4 => tlm-chan-3
170 tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}"
171 tlm-chan-5 => tlm-chan-4
172 tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}"
173 tlm-update => "always"
174 tlm-update => "on" "change"
175 tlm-lim-seq =>
176 tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq
177 tlm-lim => "red" expr
178 tlm-lim => "orange" expr
179 tlm-lim => "yellow" expr
180 record-spec => record-spec-2
181 record-spec-0 => "product" "record" ident ":" type-name
182 record-spec-1 => record-spec-0
183 record-spec-1 => record-spec-0 "array"
184 record-spec-2 => record-spec-1
185 record-spec-2 => record-spec-1 "id" expr
186 prod-cont-spec => cont-spec-2
187 cont-spec-0 => "product" "container" ident
188 cont-spec-1 => cont-spec-0
189 cont-spec-1 => cont-spec-0 "id" expr
190 cont-spec-2 => cont-spec-1
191 cont-spec-2 => cont-spec-1 "default" "priority" expr
192 comp-inst-defn => comp-inst-7
193 comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr
194 comp-inst-1 => comp-inst-0
195 comp-inst-1 => comp-inst-0 "type" string
196 comp-inst-2 => comp-inst-1
197 comp-inst-2 => comp-inst-1 "at" string
198 comp-inst-3 => comp-inst-2
199 comp-inst-3 => comp-inst-2 "queue" "size" expr
200 comp-inst-4 => comp-inst-3
201 comp-inst-4 => comp-inst-3 "stack" "size" expr
202 comp-inst-5 => comp-inst-4
203 comp-inst-5 => comp-inst-4 "priority" expr
204 comp-inst-6 => comp-inst-5
205 comp-inst-6 => comp-inst-5 "cpu" expr
206 comp-inst-7 => comp-inst-6
207 comp-inst-7 => comp-inst-6 "{" string "}"
208 topology-defn => "topology" ident "{" topo-mem-seq "}"
209 topo-mem-seq =>
210 topo-mem-seq => topo-mem mem-sep topo-mem-seq
211 topo-mem => lone-anno
212 topo-mem => comp-inst-spec
213 topo-mem => conn-graph-spec
214 topo-mem => tlm-pktset-spec
215 topo-mem => "import" qual-ident
216 topo-mem => include-spec
217 comp-inst-spec => "instance" ident
218 comp-inst-spec => "private" "instance" ident
219 conn-graph-spec => "connections" ident "{" conn-seq "}"
220 conn-graph-spec => pattern-kind "connections" "instance" qual-ident
221 conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
222 pattern-kind => "command"
223 pattern-kind => "event"
224 pattern-kind => "health"
225 pattern-kind => "param"
226 pattern-kind => "telemetry"
227 pattern-kind => "time"
228 pattern-kind => "text" "event"
229 conn-seq =>
230 conn-seq => connection elt-sep conn-seq
231 connection => conn-from "->" conn-to
232 connection => "unmatched" conn-from "->" conn-to
233 conn-from => qual-ident
234 conn-from => qual-ident "[" expr "]"
235 conn-to => qual-ident
236 conn-to => qual-ident "[" expr "]"
237 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
238 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
239 tlm-pktgrp-mem-seq =>
240 tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
241 tlm-pktgrp-mem => include-spec
242 tlm-pktgrp-mem => tlm-pkt-spec
243 tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
244 tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
245 tlm-pkt-mem-seq =>
246 tlm-pkt-mem-seq => tlm-pkt-mem elt-sep tlm-pkt-mem-seq
247 tlm-pkt-mem => include-spec
248 tlm-pkt-mem => qual-ident
249 tlm-chan-id-seq =>
250 tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident
251 param-list => param-list-1
252 param-list-1 =>
253 param-list-1 => formal-param elt-sep param-list-1
254 formal-param => formal-param-1
255 formal-param => formal-param-1 '$code-anno
256 formal-param-1 => ident ":" type-name
257 formal-param-1 => "ref" ident ":" type-name
258 queue-full-beh => queue-full-beh-1
259 queue-full-beh-1 => "assert"
260 queue-full-beh-1 => "block"
261 queue-full-beh-1 => "drop"
262 queue-full-beh-1 => "hook"
263 loc-spec => "locate" "instance" qual-ident "at" string
264 loc-spec => "locate" "component" qual-ident "at" string
265 loc-spec => "locate" "constant" qual-ident "at" string
266 loc-spec => "locate" "port" qual-ident "at" string
267 loc-spec => "locate" "state" "machine" qual-ident "at" string
268 loc-spec => "locate" "topology" qual-ident "at" string
269 loc-spec => "locate" "type" qual-ident "at" string
270 port-match-spec => "match" ident "with" ident
271 expr => add-expr
272 add-expr => mul-expr
273 add-expr => add-expr "+" mul-expr
274 add-expr => add-expr "-" mul-expr
275 mul-expr => unary-expr
276 mul-expr => mul-expr "*" unary-expr
277 mul-expr => mul-expr "/" unary-expr
278 unary-expr => prim-expr
279 unary-expr => "-" unary-expr
280 prim-expr => qual-ident
281 prim-expr => number
282 prim-expr => string
283 prim-expr => "[" expr-seq "]"
284 prim-expr => "{" struct-elt-seq "}"
285 prim-expr => "(" expr ")"
286 expr-seq => expr
287 expr-seq => expr elt-sep expr-seq
288 struct-elt-seq =>
289 struct-elt-seq => ident "=" expr elt-sep struct-elt-seq
290 number => '$float
291 number => '$fixed
292 ident => '$ident
293 string => '$string
294 lone-anno => '$lone-anno
295 qual-ident => qual-ident-1
296 qual-ident-1 => ident
297 qual-ident-1 => qual-ident-1 "." ident
298 qual-ident-seq =>
299 qual-ident-seq => qual-ident elt-sep qual-ident-seq
300 index => "[" expr "]"
301 type-name => qual-ident
302 type-name => "I8"
303 type-name => "U8"
304 type-name => "I16"
305 type-name => "U16"
306 type-name => "I32"
307 type-name => "U32"
308 type-name => "I64"
309 type-name => "U64"
310 type-name => "F32"
311 type-name => "F64"
312 type-name => "bool"
313 type-name => "string"
314 type-name => "string" "size" expr
315 stmach-inst => stmach-inst-2
316 stmach-inst => stmach-inst-2 '$code-anno
317 stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident
318 stmach-inst-1 => stmach-inst-0
319 stmach-inst-1 => stmach-inst-0 "priority" expr
320 stmach-inst-2 => stmach-inst-1
321 stmach-inst-2 => stmach-inst-1 queue-full-beh
322 stmach-defn => "state" "machine" ident
323 stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}"
324 stmach-mem-seq =>
325 stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq
326 stmach-mem => lone-anno
327 stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
328 stmach-mem => "action" ident
329 stmach-mem => "action" ident ":" type-name
330 stmach-mem => "guard" ident
331 stmach-mem => "guard" ident ":" type-name
332 stmach-mem => "signal" ident
333 stmach-mem => "signal" ident ":" type-name
334 stmach-mem => "initial" trans-expr
335 stmach-mem => state-defn
336 state-defn => "state" ident
337 state-defn => "state" ident "{" state-defn-mem-seq "}"
338 state-defn-mem-seq =>
339 state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq
340 state-defn-mem => lone-anno
341 state-defn-mem => "initial" trans-expr
342 state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
343 state-defn-mem => state-defn
344 state-defn-mem => state-trans-spec
345 state-defn-mem => "entry" do-expr
346 state-defn-mem => "exit" do-expr
347 state-trans-spec => st-tran-spec-2
348 st-tran-spec-0 => "on" ident
349 st-tran-spec-1 => st-tran-spec-0
350 st-tran-spec-1 => st-tran-spec-0 "if" ident
351 st-tran-spec-2 => st-tran-spec-1 trans-or-do
352 trans-expr => trans-expr-1
353 trans-expr-0 => "enter" qual-ident
354 trans-expr-1 => trans-expr-0
355 trans-expr-1 => do-expr trans-expr-0
356 do-expr => "do" "{" action-seq "}"
357 action-seq =>
358 action-seq => ident elt-sep action-seq
359 trans-or-do => trans-expr
360 trans-or-do => do-expr

0:	$start => . translation-unit
	translation-unit => . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . lone-anno
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index ident
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-defn => . port-defn-2
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		"port" => shift 8
		enum-defn-0 => shift 9
		comp-inst-5 => shift 10
		port-defn-0 => shift 11
		"struct" => shift 12
		enum-defn-1 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		port-defn-1 => shift 18
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 21
		'$lone-anno => shift 22
		"locate" => shift 23
		"topology" => shift 24
		comp-inst-7 => shift 25
		comp-kind => shift 26
		port-defn-2 => shift 27
		struct-defn-1 => shift 28
		enum-defn-3 => shift 29
		"array" => shift 30
		"type" => shift 31
		"constant" => shift 32
		"module" => shift 33
		"include" => shift 34
		stmach-defn => shift 35
		enum-defn => shift 36
		array-defn => shift 37
		abs-type-defn => shift 38
		loc-spec => shift 39
		struct-defn => shift 40
		port-defn => shift 41
		module-defn => shift 42
		const-defn => shift 43
		topology-defn => shift 44
		comp-inst-defn => shift 45
		component-defn => shift 46
		include-spec => shift 47
		lone-anno => shift 48
		mod-mem => shift 49
		module-mem-seq => shift 50
		translation-unit => shift 51
		$default => reduce 9

1:	comp-inst-0 => "instance" . ident ":" qual-ident "base" "id" expr
	ident => . '$ident
		'$ident => shift 57
		ident => shift 88

2:	comp-inst-1 => comp-inst-0 . "type" string
	comp-inst-1 => comp-inst-0 .
		"type" => shift 87
		"\n" => reduce 194
		$default => reduce 194

3:	comp-inst-2 => comp-inst-1 . "at" string
	comp-inst-2 => comp-inst-1 .
		"at" => shift 86
		"\n" => reduce 196
		$default => reduce 196

4:	comp-inst-3 => comp-inst-2 . "queue" "size" expr
	comp-inst-3 => comp-inst-2 .
		"queue" => shift 85
		"\n" => reduce 198
		$default => reduce 198

5:	comp-inst-4 => comp-inst-3 . "stack" "size" expr
	comp-inst-4 => comp-inst-3 .
		"stack" => shift 84
		"\n" => reduce 200
		$default => reduce 200

6:	enum-defn-0 => "enum" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 83

7:	comp-inst-5 => comp-inst-4 . "priority" expr
	comp-inst-5 => comp-inst-4 .
		"priority" => shift 82
		"\n" => reduce 202
		$default => reduce 202

8:	port-defn-0 => "port" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 81

9:	enum-defn-1 => enum-defn-0 . ":" type-name
	enum-defn-1 => enum-defn-0 .
		":" => shift 80
		$default => reduce 31

10:	comp-inst-6 => comp-inst-5 . "cpu" expr
	comp-inst-6 => comp-inst-5 .
		"cpu" => shift 79
		"\n" => reduce 204
		$default => reduce 204

11:	port-defn-1 => port-defn-0 . "(" param-list ")"
	port-defn-1 => port-defn-0 .
		"(" => shift 78
		"\n" => reduce 56
		$default => reduce 56

12:	struct-defn-0 => "struct" . ident "{" struct-mem-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 77

13:	enum-defn-2 => enum-defn-1 . "{" enum-mem-seq "}"
		"{" => shift 76

14:	comp-inst-7 => comp-inst-6 . "{" string "}"
	comp-inst-7 => comp-inst-6 .
		"{" => shift 75
		"\n" => reduce 206
		$default => reduce 206

15:	comp-kind => "queued" .
		$default => reduce 63

16:	comp-kind => "passive" .
		$default => reduce 62

17:	comp-kind => "active" .
		$default => reduce 61

18:	port-defn-2 => port-defn-1 . "->" type-name
	port-defn-2 => port-defn-1 .
		"->" => shift 74
		"\n" => reduce 58
		$default => reduce 58

19:	struct-defn-1 => struct-defn-0 . "default" expr
	struct-defn-1 => struct-defn-0 .
		"default" => shift 73
		"\n" => reduce 42
		$default => reduce 42

20:	enum-defn-3 => enum-defn-2 . "default" expr
	enum-defn-3 => enum-defn-2 .
		"default" => shift 72
		"\n" => reduce 34
		$default => reduce 34

21:	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 71

22:	lone-anno => '$lone-anno .
		"\n" => reduce 294
		$default => reduce 294

23:	loc-spec => "locate" . "type" qual-ident "at" string
	loc-spec => "locate" . "topology" qual-ident "at" string
	loc-spec => "locate" . "state" "machine" qual-ident "at" string
	loc-spec => "locate" . "port" qual-ident "at" string
	loc-spec => "locate" . "constant" qual-ident "at" string
	loc-spec => "locate" . "component" qual-ident "at" string
	loc-spec => "locate" . "instance" qual-ident "at" string
		"instance" => shift 64
		"component" => shift 65
		"constant" => shift 66
		"port" => shift 67
		"state" => shift 68
		"topology" => shift 69
		"type" => shift 70

24:	topology-defn => "topology" . ident "{" topo-mem-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 63

25:	comp-inst-defn => comp-inst-7 .
		"\n" => reduce 192
		$default => reduce 192

26:	component-defn => comp-kind . "component" ident "{" comp-mem-seq "}"
		"component" => shift 62

27:	port-defn => port-defn-2 .
		"\n" => reduce 54
		$default => reduce 54

28:	struct-defn => struct-defn-1 .
		"\n" => reduce 40
		$default => reduce 40

29:	enum-defn => enum-defn-3 .
		"\n" => reduce 29
		$default => reduce 29

30:	array-defn => "array" . ident "=" index ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 61

31:	abs-type-defn => "type" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 60

32:	const-defn => "constant" . ident "=" expr
	ident => . '$ident
		'$ident => shift 57
		ident => shift 59

33:	module-defn => "module" . ident "{" module-mem-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 58

34:	include-spec => "include" . string
	string => . '$string
		'$string => shift 55
		string => shift 56

35:	mod-mem => stmach-defn .
		"\n" => reduce 24
		$default => reduce 24

36:	mod-mem => enum-defn .
		"\n" => reduce 23
		$default => reduce 23

37:	mod-mem => array-defn .
		"\n" => reduce 22
		$default => reduce 22

38:	mod-mem => abs-type-defn .
		"\n" => reduce 21
		$default => reduce 21

39:	mod-mem => loc-spec .
		"\n" => reduce 20
		$default => reduce 20

40:	mod-mem => struct-defn .
		"\n" => reduce 19
		$default => reduce 19

41:	mod-mem => port-defn .
		"\n" => reduce 18
		$default => reduce 18

42:	mod-mem => module-defn .
		"\n" => reduce 17
		$default => reduce 17

43:	mod-mem => const-defn .
		"\n" => reduce 16
		$default => reduce 16

44:	mod-mem => topology-defn .
		"\n" => reduce 15
		$default => reduce 15

45:	mod-mem => comp-inst-defn .
		"\n" => reduce 14
		$default => reduce 14

46:	mod-mem => component-defn .
		"\n" => reduce 13
		$default => reduce 13

47:	mod-mem => include-spec .
		"\n" => reduce 12
		$default => reduce 12

48:	mod-mem => lone-anno .
		"\n" => reduce 11
		$default => reduce 11

49:	module-mem-seq => mod-mem . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 52
		";" => shift 53
		mem-sep => shift 54

50:	translation-unit => module-mem-seq .
		$default => reduce 8

51:	$start => translation-unit .
		'$end => accept 0

52:	mem-sep => "\n" .
		'$lone-anno => reduce 5
		"\n" => reduce 5
		$default => reduce 5

53:	mem-sep => ";" .
		'$lone-anno => reduce 4
		"\n" => reduce 4
		$default => reduce 4

54:	mem-sep => mem-sep . "\n"
	module-mem-seq => mod-mem mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . lone-anno
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index ident
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-defn => . port-defn-2
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		"port" => shift 8
		enum-defn-0 => shift 9
		comp-inst-5 => shift 10
		port-defn-0 => shift 11
		"struct" => shift 12
		enum-defn-1 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		port-defn-1 => shift 18
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 21
		'$lone-anno => shift 22
		"locate" => shift 23
		"topology" => shift 24
		comp-inst-7 => shift 25
		comp-kind => shift 26
		port-defn-2 => shift 27
		struct-defn-1 => shift 28
		enum-defn-3 => shift 29
		"array" => shift 30
		"type" => shift 31
		"constant" => shift 32
		"module" => shift 33
		"include" => shift 34
		stmach-defn => shift 35
		enum-defn => shift 36
		array-defn => shift 37
		abs-type-defn => shift 38
		loc-spec => shift 39
		struct-defn => shift 40
		port-defn => shift 41
		module-defn => shift 42
		const-defn => shift 43
		topology-defn => shift 44
		comp-inst-defn => shift 45
		component-defn => shift 46
		include-spec => shift 47
		lone-anno => shift 48
		mod-mem => shift 49
		module-mem-seq => shift 152
		"\n" => shift 153
		$default => reduce 9

55:	string => '$string .
		"\n" => reduce 293
		'$code-anno => reduce 293
		$default => reduce 293

56:	include-spec => "include" string .
		"\n" => reduce 7
		$default => reduce 7

57:	ident => '$ident .
		"\n" => reduce 292
		'$code-anno => reduce 292
		$default => reduce 292

58:	module-defn => "module" ident . "{" module-mem-seq "}"
		"{" => shift 151

59:	const-defn => "constant" ident . "=" expr
		"=" => shift 150

60:	abs-type-defn => "type" ident .
		"\n" => reduce 27
		$default => reduce 27

61:	array-defn => "array" ident . "=" index ident
		"=" => shift 149

62:	component-defn => comp-kind "component" . ident "{" comp-mem-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 148

63:	topology-defn => "topology" ident . "{" topo-mem-seq "}"
		"{" => shift 147

64:	loc-spec => "locate" "instance" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 146

65:	loc-spec => "locate" "component" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 145

66:	loc-spec => "locate" "constant" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 144

67:	loc-spec => "locate" "port" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 143

68:	loc-spec => "locate" "state" . "machine" qual-ident "at" string
		"machine" => shift 142

69:	loc-spec => "locate" "topology" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 141

70:	loc-spec => "locate" "type" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 140

71:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 139

72:	enum-defn-3 => enum-defn-2 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 138

73:	struct-defn-1 => struct-defn-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 137

74:	port-defn-2 => port-defn-1 "->" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 136

75:	comp-inst-7 => comp-inst-6 "{" . string "}"
	string => . '$string
		'$string => shift 55
		string => shift 135

76:	enum-defn-2 => enum-defn-1 "{" . enum-mem-seq "}"
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident "=" expr
	ident => . '$ident
		'$ident => shift 57
		ident => shift 132
		enum-mem => shift 133
		enum-mem-seq => shift 134
		$default => reduce 36

77:	struct-defn-0 => "struct" ident . "{" struct-mem-seq "}"
		"{" => shift 131

78:	port-defn-1 => port-defn-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 '$code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		"ref" => shift 125
		ident => shift 126
		formal-param-1 => shift 127
		formal-param => shift 128
		param-list-1 => shift 129
		param-list => shift 130
		$default => reduce 252

79:	comp-inst-6 => comp-inst-5 "cpu" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 124

80:	enum-defn-1 => enum-defn-0 ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 123

81:	port-defn-0 => "port" ident .
		"\n" => reduce 55
		$default => reduce 55

82:	comp-inst-5 => comp-inst-4 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 109

83:	enum-defn-0 => "enum" ident .
		$default => reduce 30

84:	comp-inst-4 => comp-inst-3 "stack" . "size" expr
		"size" => shift 93

85:	comp-inst-3 => comp-inst-2 "queue" . "size" expr
		"size" => shift 92

86:	comp-inst-2 => comp-inst-1 "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 91

87:	comp-inst-1 => comp-inst-0 "type" . string
	string => . '$string
		'$string => shift 55
		string => shift 90

88:	comp-inst-0 => "instance" ident . ":" qual-ident "base" "id" expr
		":" => shift 89

89:	comp-inst-0 => "instance" ident ":" . qual-ident "base" "id" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 218

90:	comp-inst-1 => comp-inst-0 "type" string .
		"\n" => reduce 195
		$default => reduce 195

91:	comp-inst-2 => comp-inst-1 "at" string .
		"\n" => reduce 197
		$default => reduce 197

92:	comp-inst-3 => comp-inst-2 "queue" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 217

93:	comp-inst-4 => comp-inst-3 "stack" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 216

94:	qual-ident-1 => ident .
		"\n" => reduce 296
		'$code-anno => reduce 296
		$default => reduce 296

95:	qual-ident-1 => qual-ident-1 . "." ident
	qual-ident => qual-ident-1 .
		"." => shift 215
		"\n" => reduce 295
		'$code-anno => reduce 295
		$default => reduce 295

96:	number => '$fixed .
		"\n" => reduce 291
		'$code-anno => reduce 291
		$default => reduce 291

97:	number => '$float .
		"\n" => reduce 290
		'$code-anno => reduce 290
		$default => reduce 290

98:	prim-expr => "(" . expr ")"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 214

99:	prim-expr => "{" . struct-elt-seq "}"
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 57
		ident => shift 212
		struct-elt-seq => shift 213
		$default => reduce 288

100:	prim-expr => "[" . expr-seq "]"
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 210
		expr-seq => shift 211

101:	prim-expr => string .
		"\n" => reduce 282
		'$code-anno => reduce 282
		$default => reduce 282

102:	prim-expr => number .
		"\n" => reduce 281
		'$code-anno => reduce 281
		$default => reduce 281

103:	prim-expr => qual-ident .
		"\n" => reduce 280
		'$code-anno => reduce 280
		$default => reduce 280

104:	unary-expr => "-" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 209

105:	unary-expr => prim-expr .
		"\n" => reduce 278
		'$code-anno => reduce 278
		$default => reduce 278

106:	mul-expr => unary-expr .
		"\n" => reduce 275
		'$code-anno => reduce 275
		$default => reduce 275

107:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => mul-expr .
		"*" => shift 207
		"/" => shift 208
		"\n" => reduce 272
		'$code-anno => reduce 272
		$default => reduce 272

108:	add-expr => add-expr . "-" mul-expr
	add-expr => add-expr . "+" mul-expr
	expr => add-expr .
		"+" => shift 205
		"-" => shift 206
		"\n" => reduce 271
		'$code-anno => reduce 271
		$default => reduce 271

109:	comp-inst-5 => comp-inst-4 "priority" expr .
		"\n" => reduce 203
		$default => reduce 203

110:	type-name => "string" . "size" expr
	type-name => "string" .
		"size" => shift 204
		"\n" => reduce 313
		'$code-anno => reduce 313
		$default => reduce 313

111:	type-name => "bool" .
		"\n" => reduce 312
		'$code-anno => reduce 312
		$default => reduce 312

112:	type-name => "F64" .
		"\n" => reduce 311
		'$code-anno => reduce 311
		$default => reduce 311

113:	type-name => "F32" .
		"\n" => reduce 310
		'$code-anno => reduce 310
		$default => reduce 310

114:	type-name => "U64" .
		"\n" => reduce 309
		'$code-anno => reduce 309
		$default => reduce 309

115:	type-name => "I64" .
		"\n" => reduce 308
		'$code-anno => reduce 308
		$default => reduce 308

116:	type-name => "U32" .
		"\n" => reduce 307
		'$code-anno => reduce 307
		$default => reduce 307

117:	type-name => "I32" .
		"\n" => reduce 306
		'$code-anno => reduce 306
		$default => reduce 306

118:	type-name => "U16" .
		"\n" => reduce 305
		'$code-anno => reduce 305
		$default => reduce 305

119:	type-name => "I16" .
		"\n" => reduce 304
		'$code-anno => reduce 304
		$default => reduce 304

120:	type-name => "U8" .
		"\n" => reduce 303
		'$code-anno => reduce 303
		$default => reduce 303

121:	type-name => "I8" .
		"\n" => reduce 302
		'$code-anno => reduce 302
		$default => reduce 302

122:	type-name => qual-ident .
		"\n" => reduce 301
		'$code-anno => reduce 301
		$default => reduce 301

123:	enum-defn-1 => enum-defn-0 ":" type-name .
		$default => reduce 32

124:	comp-inst-6 => comp-inst-5 "cpu" expr .
		"\n" => reduce 205
		$default => reduce 205

125:	formal-param-1 => "ref" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		ident => shift 203

126:	formal-param-1 => ident . ":" type-name
		":" => shift 202

127:	formal-param => formal-param-1 . '$code-anno
	formal-param => formal-param-1 .
		'$code-anno => shift 201
		"\n" => reduce 254
		$default => reduce 254

128:	param-list-1 => formal-param . elt-sep param-list-1
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 200

129:	param-list => param-list-1 .
		$default => reduce 251

130:	port-defn-1 => port-defn-0 "(" param-list . ")"
		")" => shift 199

131:	struct-defn-0 => "struct" ident "{" . struct-mem-seq "}"
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem => . struct-mem-3 '$code-anno
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 192
		struct-mem-0 => shift 193
		struct-mem-1 => shift 194
		struct-mem-2 => shift 195
		struct-mem-3 => shift 196
		struct-mem => shift 197
		struct-mem-seq => shift 198
		$default => reduce 44

132:	enum-mem => ident . "=" expr
	enum-mem => ident .
		"=" => shift 191
		"\n" => reduce 38
		$default => reduce 38

133:	enum-mem-seq => enum-mem . elt-sep enum-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 190

134:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq . "}"
		"}" => shift 187

135:	comp-inst-7 => comp-inst-6 "{" string . "}"
		"}" => shift 186

136:	port-defn-2 => port-defn-1 "->" type-name .
		"\n" => reduce 59
		$default => reduce 59

137:	struct-defn-1 => struct-defn-0 "default" expr .
		"\n" => reduce 43
		$default => reduce 43

138:	enum-defn-3 => enum-defn-2 "default" expr .
		"\n" => reduce 35
		$default => reduce 35

139:	stmach-defn => "state" "machine" ident . "{" stmach-mem-seq "}"
	stmach-defn => "state" "machine" ident .
		"{" => shift 185
		"\n" => reduce 322
		$default => reduce 322

140:	loc-spec => "locate" "type" qual-ident . "at" string
		"at" => shift 184

141:	loc-spec => "locate" "topology" qual-ident . "at" string
		"at" => shift 183

142:	loc-spec => "locate" "state" "machine" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 182

143:	loc-spec => "locate" "port" qual-ident . "at" string
		"at" => shift 181

144:	loc-spec => "locate" "constant" qual-ident . "at" string
		"at" => shift 180

145:	loc-spec => "locate" "component" qual-ident . "at" string
		"at" => shift 179

146:	loc-spec => "locate" "instance" qual-ident . "at" string
		"at" => shift 178

147:	topology-defn => "topology" ident "{" . topo-mem-seq "}"
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	topo-mem => . include-spec
	include-spec => . "include" string
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 159
		"time" => shift 160
		"param" => shift 161
		"health" => shift 162
		"event" => shift 163
		"command" => shift 164
		'$lone-anno => shift 22
		"telemetry" => shift 165
		pattern-kind => shift 166
		"connections" => shift 167
		"private" => shift 168
		"instance" => shift 169
		"include" => shift 34
		include-spec => shift 170
		"import" => shift 171
		tlm-pktset-spec => shift 172
		conn-graph-spec => shift 173
		comp-inst-spec => shift 174
		lone-anno => shift 175
		topo-mem => shift 176
		topo-mem-seq => shift 177
		$default => reduce 209

148:	component-defn => comp-kind "component" ident . "{" comp-mem-seq "}"
		"{" => shift 158

149:	array-defn => "array" ident "=" . index ident
	index => . "[" expr "]"
		"[" => shift 156
		index => shift 157

150:	const-defn => "constant" ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 155

151:	module-defn => "module" ident "{" . module-mem-seq "}"
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . lone-anno
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index ident
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-defn => . port-defn-2
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		"port" => shift 8
		enum-defn-0 => shift 9
		comp-inst-5 => shift 10
		port-defn-0 => shift 11
		"struct" => shift 12
		enum-defn-1 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		port-defn-1 => shift 18
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 21
		'$lone-anno => shift 22
		"locate" => shift 23
		"topology" => shift 24
		comp-inst-7 => shift 25
		comp-kind => shift 26
		port-defn-2 => shift 27
		struct-defn-1 => shift 28
		enum-defn-3 => shift 29
		"array" => shift 30
		"type" => shift 31
		"constant" => shift 32
		"module" => shift 33
		"include" => shift 34
		stmach-defn => shift 35
		enum-defn => shift 36
		array-defn => shift 37
		abs-type-defn => shift 38
		loc-spec => shift 39
		struct-defn => shift 40
		port-defn => shift 41
		module-defn => shift 42
		const-defn => shift 43
		topology-defn => shift 44
		comp-inst-defn => shift 45
		component-defn => shift 46
		include-spec => shift 47
		lone-anno => shift 48
		mod-mem => shift 49
		module-mem-seq => shift 154
		$default => reduce 9

152:	module-mem-seq => mod-mem mem-sep module-mem-seq .
		$default => reduce 10

153:	mem-sep => mem-sep "\n" .
		'$lone-anno => reduce 6
		"\n" => reduce 6
		$default => reduce 6

154:	module-defn => "module" ident "{" module-mem-seq . "}"
		"}" => shift 349

155:	const-defn => "constant" ident "=" expr .
		"\n" => reduce 26
		$default => reduce 26

156:	index => "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 348

157:	array-defn => "array" ident "=" index . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 347

158:	component-defn => comp-kind "component" ident "{" . comp-mem-seq "}"
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem => . lone-anno
	comp-mem => . include-spec
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	include-spec => . "include" string
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 '$code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-0 => . "enum" ident
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 270
		event-spec-0 => shift 271
		"time" => shift 272
		"text" => shift 273
		"telemetry" => shift 274
		"param" => shift 275
		"event" => shift 276
		"command" => shift 277
		"output" => shift 278
		tlm-chan-1 => shift 279
		param-spec-0 => shift 280
		event-spec-1 => shift 281
		"sync" => shift 282
		"guarded" => shift 283
		"async" => shift 284
		cmd-spec-0 => shift 285
		"internal" => shift 286
		spc-port-kind => shift 287
		gen-port-inst-0 => shift 288
		"enum" => shift 6
		"product" => shift 289
		tlm-chan-2 => shift 290
		param-spec-1 => shift 291
		event-spec-2 => shift 292
		cmd-spec-1 => shift 293
		int-port-defn-0 => shift 294
		input-port-kind => shift 295
		spc-port-inst-0 => shift 296
		gen-port-inst-1 => shift 297
		enum-defn-0 => shift 9
		stmach-inst-0 => shift 298
		cont-spec-0 => shift 299
		record-spec-0 => shift 300
		tlm-chan-3 => shift 301
		param-spec-2 => shift 302
		event-spec-3 => shift 303
		cmd-spec-2 => shift 304
		int-port-defn-1 => shift 305
		spc-port-inst-1 => shift 306
		gen-port-inst-2 => shift 307
		"struct" => shift 12
		enum-defn-1 => shift 13
		stmach-inst-1 => shift 308
		cont-spec-1 => shift 309
		record-spec-1 => shift 310
		tlm-chan-4 => shift 311
		param-spec-3 => shift 312
		event-spec-4 => shift 313
		cmd-spec-3 => shift 314
		int-port-defn-2 => shift 315
		spc-port-inst-2 => shift 316
		gen-port-inst-3 => shift 317
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 318
		stmach-inst-2 => shift 319
		'$lone-anno => shift 22
		"match" => shift 320
		cont-spec-2 => shift 321
		record-spec-2 => shift 322
		tlm-chan-5 => shift 323
		param-spec-4 => shift 324
		event-spec-5 => shift 325
		cmd-spec-4 => shift 326
		int-port-defn-3 => shift 327
		spc-port-inst-3 => shift 328
		gen-port-inst-4 => shift 329
		struct-defn-1 => shift 28
		enum-defn-3 => shift 29
		"include" => shift 34
		stmach-inst => shift 330
		stmach-defn => shift 331
		tlm-chan-spec => shift 332
		prod-cont-spec => shift 333
		record-spec => shift 334
		param-spec => shift 335
		event-spec => shift 336
		command-spec => shift 337
		port-match-spec => shift 338
		port-inst => shift 339
		int-port-spec => shift 340
		struct-defn => shift 341
		enum-defn => shift 342
		include-spec => shift 343
		lone-anno => shift 344
		comp-mem => shift 345
		comp-mem-seq => shift 346
		$default => reduce 64

159:	pattern-kind => "text" . "event"
		"event" => shift 269

160:	pattern-kind => "time" .
		$default => reduce 227

161:	pattern-kind => "param" .
		$default => reduce 225

162:	pattern-kind => "health" .
		$default => reduce 224

163:	pattern-kind => "event" .
		$default => reduce 223

164:	pattern-kind => "command" .
		$default => reduce 222

165:	pattern-kind => "telemetry" .
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}"
		"packets" => shift 268
		$default => reduce 226

166:	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident "{" qual-ident-seq "}"
	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident
		"connections" => shift 267

167:	conn-graph-spec => "connections" . ident "{" conn-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 266

168:	comp-inst-spec => "private" . "instance" ident
		"instance" => shift 265

169:	comp-inst-spec => "instance" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 264

170:	topo-mem => include-spec .
		"\n" => reduce 216
		$default => reduce 216

171:	topo-mem => "import" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 263

172:	topo-mem => tlm-pktset-spec .
		"\n" => reduce 214
		$default => reduce 214

173:	topo-mem => conn-graph-spec .
		"\n" => reduce 213
		$default => reduce 213

174:	topo-mem => comp-inst-spec .
		"\n" => reduce 212
		$default => reduce 212

175:	topo-mem => lone-anno .
		"\n" => reduce 211
		$default => reduce 211

176:	topo-mem-seq => topo-mem . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 52
		";" => shift 53
		mem-sep => shift 262

177:	topology-defn => "topology" ident "{" topo-mem-seq . "}"
		"}" => shift 261

178:	loc-spec => "locate" "instance" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 260

179:	loc-spec => "locate" "component" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 259

180:	loc-spec => "locate" "constant" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 258

181:	loc-spec => "locate" "port" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 257

182:	loc-spec => "locate" "state" "machine" qual-ident . "at" string
		"at" => shift 256

183:	loc-spec => "locate" "topology" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 255

184:	loc-spec => "locate" "type" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 254

185:	stmach-defn => "state" "machine" ident "{" . stmach-mem-seq "}"
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . lone-anno
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 244
		'$lone-anno => shift 22
		state-defn => shift 245
		"initial" => shift 246
		"signal" => shift 247
		"guard" => shift 248
		"action" => shift 249
		"choice" => shift 250
		lone-anno => shift 251
		stmach-mem => shift 252
		stmach-mem-seq => shift 253
		$default => reduce 324

186:	comp-inst-7 => comp-inst-6 "{" string "}" .
		"\n" => reduce 207
		$default => reduce 207

187:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}" .
		"\n" => reduce 33
		$default => reduce 33

188:	elt-sep => "\n" .
		"\n" => reduce 2
		$default => reduce 2

189:	elt-sep => "," .
		"\n" => reduce 1
		$default => reduce 1

190:	elt-sep => elt-sep . "\n"
	enum-mem-seq => enum-mem elt-sep . enum-mem-seq
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident "=" expr
	ident => . '$ident
		'$ident => shift 57
		ident => shift 132
		enum-mem => shift 133
		enum-mem-seq => shift 243
		"\n" => shift 234
		$default => reduce 36

191:	enum-mem => ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 242

192:	struct-mem-0 => ident . ":"
		":" => shift 241

193:	struct-mem-1 => struct-mem-0 . "[" expr "]"
	struct-mem-1 => struct-mem-0 .
		"[" => shift 240
		$default => reduce 49

194:	struct-mem-2 => struct-mem-1 . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 239

195:	struct-mem-3 => struct-mem-2 . "format" string
	struct-mem-3 => struct-mem-2 .
		"format" => shift 238
		'$code-anno => reduce 52
		"\n" => reduce 52
		$default => reduce 52

196:	struct-mem => struct-mem-3 . '$code-anno
	struct-mem => struct-mem-3 .
		'$code-anno => shift 237
		"\n" => reduce 46
		$default => reduce 46

197:	struct-mem-seq => struct-mem . mem-sep struct-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 52
		";" => shift 53
		mem-sep => shift 236

198:	struct-defn-0 => "struct" ident "{" struct-mem-seq . "}"
		"}" => shift 235

199:	port-defn-1 => port-defn-0 "(" param-list ")" .
		"\n" => reduce 57
		$default => reduce 57

200:	elt-sep => elt-sep . "\n"
	param-list-1 => formal-param elt-sep . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 '$code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		"ref" => shift 125
		ident => shift 126
		formal-param-1 => shift 127
		formal-param => shift 128
		param-list-1 => shift 233
		"\n" => shift 234
		$default => reduce 252

201:	formal-param => formal-param-1 '$code-anno .
		"\n" => reduce 255
		$default => reduce 255

202:	formal-param-1 => ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 232

203:	formal-param-1 => "ref" ident . ":" type-name
		":" => shift 231

204:	type-name => "string" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 230

205:	add-expr => add-expr "+" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 229

206:	add-expr => add-expr "-" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 228

207:	mul-expr => mul-expr "*" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 227

208:	mul-expr => mul-expr "/" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 226

209:	unary-expr => "-" unary-expr .
		"\n" => reduce 279
		'$code-anno => reduce 279
		$default => reduce 279

210:	expr-seq => expr . elt-sep expr-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	expr-seq => expr .
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 225
		$default => reduce 286

211:	prim-expr => "[" expr-seq . "]"
		"]" => shift 224

212:	struct-elt-seq => ident . "=" expr elt-sep struct-elt-seq
		"=" => shift 223

213:	prim-expr => "{" struct-elt-seq . "}"
		"}" => shift 222

214:	prim-expr => "(" expr . ")"
		")" => shift 221

215:	qual-ident-1 => qual-ident-1 "." . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 220

216:	comp-inst-4 => comp-inst-3 "stack" "size" expr .
		"\n" => reduce 201
		$default => reduce 201

217:	comp-inst-3 => comp-inst-2 "queue" "size" expr .
		"\n" => reduce 199
		$default => reduce 199

218:	comp-inst-0 => "instance" ident ":" qual-ident . "base" "id" expr
		"base" => shift 219

219:	comp-inst-0 => "instance" ident ":" qual-ident "base" . "id" expr
		"id" => shift 446

220:	qual-ident-1 => qual-ident-1 "." ident .
		"\n" => reduce 297
		'$code-anno => reduce 297
		$default => reduce 297

221:	prim-expr => "(" expr ")" .
		"\n" => reduce 285
		'$code-anno => reduce 285
		$default => reduce 285

222:	prim-expr => "{" struct-elt-seq "}" .
		"\n" => reduce 284
		'$code-anno => reduce 284
		$default => reduce 284

223:	struct-elt-seq => ident "=" . expr elt-sep struct-elt-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 445

224:	prim-expr => "[" expr-seq "]" .
		"\n" => reduce 283
		'$code-anno => reduce 283
		$default => reduce 283

225:	elt-sep => elt-sep . "\n"
	expr-seq => expr elt-sep . expr-seq
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 210
		expr-seq => shift 444
		"\n" => shift 234

226:	mul-expr => mul-expr "/" unary-expr .
		"\n" => reduce 277
		'$code-anno => reduce 277
		$default => reduce 277

227:	mul-expr => mul-expr "*" unary-expr .
		"\n" => reduce 276
		'$code-anno => reduce 276
		$default => reduce 276

228:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "-" mul-expr .
		"*" => shift 207
		"/" => shift 208
		"\n" => reduce 274
		'$code-anno => reduce 274
		$default => reduce 274

229:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "+" mul-expr .
		"*" => shift 207
		"/" => shift 208
		"\n" => reduce 273
		'$code-anno => reduce 273
		$default => reduce 273

230:	type-name => "string" "size" expr .
		"\n" => reduce 314
		'$code-anno => reduce 314
		$default => reduce 314

231:	formal-param-1 => "ref" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 443

232:	formal-param-1 => ident ":" type-name .
		'$code-anno => reduce 256
		"\n" => reduce 256
		$default => reduce 256

233:	param-list-1 => formal-param elt-sep param-list-1 .
		$default => reduce 253

234:	elt-sep => elt-sep "\n" .
		"\n" => reduce 3
		$default => reduce 3

235:	struct-defn-0 => "struct" ident "{" struct-mem-seq "}" .
		"\n" => reduce 41
		$default => reduce 41

236:	mem-sep => mem-sep . "\n"
	struct-mem-seq => struct-mem mem-sep . struct-mem-seq
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem => . struct-mem-3 '$code-anno
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 192
		struct-mem-0 => shift 193
		struct-mem-1 => shift 194
		struct-mem-2 => shift 195
		struct-mem-3 => shift 196
		struct-mem => shift 197
		struct-mem-seq => shift 442
		"\n" => shift 153
		$default => reduce 44

237:	struct-mem => struct-mem-3 '$code-anno .
		"\n" => reduce 47
		$default => reduce 47

238:	struct-mem-3 => struct-mem-2 "format" . string
	string => . '$string
		'$string => shift 55
		string => shift 441

239:	struct-mem-2 => struct-mem-1 type-name .
		"\n" => reduce 51
		'$code-anno => reduce 51
		$default => reduce 51

240:	struct-mem-1 => struct-mem-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 440

241:	struct-mem-0 => ident ":" .
		$default => reduce 48

242:	enum-mem => ident "=" expr .
		"\n" => reduce 39
		$default => reduce 39

243:	enum-mem-seq => enum-mem elt-sep enum-mem-seq .
		$default => reduce 37

244:	state-defn => "state" . ident "{" state-defn-mem-seq "}"
	ident => . '$ident
	state-defn => "state" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 439

245:	stmach-mem => state-defn .
		"\n" => reduce 335
		$default => reduce 335

246:	stmach-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		"enter" => shift 434
		do-expr => shift 435
		trans-expr-0 => shift 436
		trans-expr-1 => shift 437
		trans-expr => shift 438

247:	stmach-mem => "signal" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "signal" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 432

248:	stmach-mem => "guard" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "guard" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 431

249:	stmach-mem => "action" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "action" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 430

250:	stmach-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 429

251:	stmach-mem => lone-anno .
		"\n" => reduce 326
		$default => reduce 326

252:	stmach-mem-seq => stmach-mem . mem-sep stmach-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 52
		";" => shift 53
		mem-sep => shift 428

253:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq . "}"
		"}" => shift 427

254:	loc-spec => "locate" "type" qual-ident "at" string .
		"\n" => reduce 269
		$default => reduce 269

255:	loc-spec => "locate" "topology" qual-ident "at" string .
		"\n" => reduce 268
		$default => reduce 268

256:	loc-spec => "locate" "state" "machine" qual-ident "at" . string
	string => . '$string
		'$string => shift 55
		string => shift 426

257:	loc-spec => "locate" "port" qual-ident "at" string .
		"\n" => reduce 266
		$default => reduce 266

258:	loc-spec => "locate" "constant" qual-ident "at" string .
		"\n" => reduce 265
		$default => reduce 265

259:	loc-spec => "locate" "component" qual-ident "at" string .
		"\n" => reduce 264
		$default => reduce 264

260:	loc-spec => "locate" "instance" qual-ident "at" string .
		"\n" => reduce 263
		$default => reduce 263

261:	topology-defn => "topology" ident "{" topo-mem-seq "}" .
		"\n" => reduce 208
		$default => reduce 208

262:	mem-sep => mem-sep . "\n"
	topo-mem-seq => topo-mem mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	topo-mem => . include-spec
	include-spec => . "include" string
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 159
		"time" => shift 160
		"param" => shift 161
		"health" => shift 162
		"event" => shift 163
		"command" => shift 164
		'$lone-anno => shift 22
		"telemetry" => shift 165
		pattern-kind => shift 166
		"connections" => shift 167
		"private" => shift 168
		"instance" => shift 169
		"include" => shift 34
		include-spec => shift 170
		"import" => shift 171
		tlm-pktset-spec => shift 172
		conn-graph-spec => shift 173
		comp-inst-spec => shift 174
		lone-anno => shift 175
		topo-mem => shift 176
		topo-mem-seq => shift 425
		"\n" => shift 153
		$default => reduce 209

263:	topo-mem => "import" qual-ident .
		"\n" => reduce 215
		$default => reduce 215

264:	comp-inst-spec => "instance" ident .
		"\n" => reduce 217
		$default => reduce 217

265:	comp-inst-spec => "private" "instance" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 424

266:	conn-graph-spec => "connections" ident . "{" conn-seq "}"
		"{" => shift 423

267:	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident
	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident "{" qual-ident-seq "}"
		"instance" => shift 422

268:	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}"
	ident => . '$ident
	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 421

269:	pattern-kind => "text" "event" .
		$default => reduce 228

270:	tlm-chan-1 => tlm-chan-0 . "id" expr
	tlm-chan-1 => tlm-chan-0 .
		"id" => shift 420
		"\n" => reduce 163
		$default => reduce 163

271:	event-spec-1 => event-spec-0 . "(" param-list ")"
	event-spec-1 => event-spec-0 .
		"(" => shift 419
		$default => reduce 136

272:	spc-port-kind => "time" . "get"
		"get" => shift 418

273:	spc-port-kind => "text" . "event"
		"event" => shift 417

274:	tlm-chan-0 => "telemetry" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "telemetry" .
		'$ident => shift 57
		ident => shift 416
		$default => reduce 128

275:	param-spec-0 => "param" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 413
		"set" => shift 414
		'$ident => shift 57
		ident => shift 415

276:	event-spec-0 => "event" . ident
	ident => . '$ident
	spc-port-kind => "event" .
		'$ident => shift 57
		ident => shift 412
		$default => reduce 121

277:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
		"recv" => shift 409
		"reg" => shift 410
		"resp" => shift 411

278:	gen-port-inst-0 => "output" . "port" ident ":"
		"port" => shift 408

279:	tlm-chan-2 => tlm-chan-1 . "update" tlm-update
	tlm-chan-2 => tlm-chan-1 .
		"update" => shift 407
		"\n" => reduce 165
		$default => reduce 165

280:	param-spec-1 => param-spec-0 . "default" expr
	param-spec-1 => param-spec-0 .
		"default" => shift 406
		"\n" => reduce 153
		$default => reduce 153

281:	event-spec-2 => event-spec-1 . "severity" severity
		"severity" => shift 405

282:	input-port-kind => "sync" .
		$default => reduce 133

283:	input-port-kind => "guarded" .
		$default => reduce 132

284:	input-port-kind => "async" .
		$default => reduce 131

285:	cmd-spec-1 => cmd-spec-0 . "(" param-list ")"
	cmd-spec-1 => cmd-spec-0 .
		"(" => shift 404
		"\n" => reduce 110
		$default => reduce 110

286:	int-port-defn-0 => "internal" . "port" ident
		"port" => shift 403

287:	spc-port-inst-0 => spc-port-kind . "port" ident
		"port" => shift 402

288:	gen-port-inst-1 => gen-port-inst-0 . "[" expr "]"
	gen-port-inst-1 => gen-port-inst-0 .
		"[" => shift 401
		$default => reduce 85

289:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
	cont-spec-0 => "product" . "container" ident
	record-spec-0 => "product" . "record" ident ":" type-name
		"record" => shift 395
		"container" => shift 396
		"get" => shift 397
		"recv" => shift 398
		"request" => shift 399
		"send" => shift 400

290:	tlm-chan-3 => tlm-chan-2 . "format" string
	tlm-chan-3 => tlm-chan-2 .
		"format" => shift 394
		"\n" => reduce 167
		$default => reduce 167

291:	param-spec-2 => param-spec-1 . "id" expr
	param-spec-2 => param-spec-1 .
		"id" => shift 393
		"\n" => reduce 155
		$default => reduce 155

292:	event-spec-3 => event-spec-2 . "id" expr
	event-spec-3 => event-spec-2 .
		"id" => shift 392
		$default => reduce 139

293:	cmd-spec-2 => cmd-spec-1 . "opcode" expr
	cmd-spec-2 => cmd-spec-1 .
		"opcode" => shift 391
		"\n" => reduce 112
		$default => reduce 112

294:	int-port-defn-1 => int-port-defn-0 . "(" param-list ")"
	int-port-defn-1 => int-port-defn-0 .
		"(" => shift 390
		"\n" => reduce 102
		$default => reduce 102

295:	cmd-spec-0 => input-port-kind . "command" ident
	gen-port-inst-0 => input-port-kind . "input" "port" ident ":"
	spc-port-inst-1 => input-port-kind . spc-port-inst-0
	spc-port-inst-0 => . spc-port-kind "port" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
		"time" => shift 272
		"text" => shift 273
		"telemetry" => shift 383
		"product" => shift 384
		"param" => shift 385
		"event" => shift 386
		spc-port-kind => shift 287
		spc-port-inst-0 => shift 387
		"input" => shift 388
		"command" => shift 389

296:	spc-port-inst-1 => spc-port-inst-0 .
		"\n" => reduce 94
		$default => reduce 94

297:	gen-port-inst-2 => gen-port-inst-1 . "serial"
	gen-port-inst-2 => gen-port-inst-1 . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 381
		"serial" => shift 382

298:	stmach-inst-1 => stmach-inst-0 . "priority" expr
	stmach-inst-1 => stmach-inst-0 .
		"priority" => shift 380
		"\n" => reduce 318
		'$code-anno => reduce 318
		$default => reduce 318

299:	cont-spec-1 => cont-spec-0 . "id" expr
	cont-spec-1 => cont-spec-0 .
		"id" => shift 379
		"\n" => reduce 188
		$default => reduce 188

300:	record-spec-1 => record-spec-0 . "array"
	record-spec-1 => record-spec-0 .
		"array" => shift 378
		"\n" => reduce 182
		$default => reduce 182

301:	tlm-chan-4 => tlm-chan-3 . "low" "{" tlm-lim-seq "}"
	tlm-chan-4 => tlm-chan-3 .
		"low" => shift 377
		"\n" => reduce 169
		$default => reduce 169

302:	param-spec-3 => param-spec-2 . "set" "opcode" expr
	param-spec-3 => param-spec-2 .
		"set" => shift 376
		"\n" => reduce 157
		$default => reduce 157

303:	event-spec-4 => event-spec-3 . "format" string
		"format" => shift 375

304:	cmd-spec-3 => cmd-spec-2 . "priority" expr
	cmd-spec-3 => cmd-spec-2 .
		"priority" => shift 374
		"\n" => reduce 114
		$default => reduce 114

305:	int-port-defn-2 => int-port-defn-1 . "priority" expr
	int-port-defn-2 => int-port-defn-1 .
		"priority" => shift 373
		"\n" => reduce 104
		$default => reduce 104

306:	spc-port-inst-2 => spc-port-inst-1 . "priority" expr
	spc-port-inst-2 => spc-port-inst-1 .
		"priority" => shift 372
		"\n" => reduce 96
		$default => reduce 96

307:	gen-port-inst-3 => gen-port-inst-2 . "priority" expr
	gen-port-inst-3 => gen-port-inst-2 .
		"priority" => shift 371
		"\n" => reduce 89
		$default => reduce 89

308:	stmach-inst-2 => stmach-inst-1 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	stmach-inst-2 => stmach-inst-1 .
		"hook" => shift 356
		"drop" => shift 357
		"block" => shift 358
		"assert" => shift 359
		queue-full-beh-1 => shift 360
		queue-full-beh => shift 370
		'$code-anno => reduce 320
		"\n" => reduce 320
		$default => reduce 320

309:	cont-spec-2 => cont-spec-1 . "default" "priority" expr
	cont-spec-2 => cont-spec-1 .
		"default" => shift 369
		"\n" => reduce 190
		$default => reduce 190

310:	record-spec-2 => record-spec-1 . "id" expr
	record-spec-2 => record-spec-1 .
		"id" => shift 368
		"\n" => reduce 184
		$default => reduce 184

311:	tlm-chan-5 => tlm-chan-4 . "high" "{" tlm-lim-seq "}"
	tlm-chan-5 => tlm-chan-4 .
		"high" => shift 367
		"\n" => reduce 171
		$default => reduce 171

312:	param-spec-4 => param-spec-3 . "save" "opcode" expr
	param-spec-4 => param-spec-3 .
		"save" => shift 366
		"\n" => reduce 159
		$default => reduce 159

313:	event-spec-5 => event-spec-4 . "throttle" expr
	event-spec-5 => event-spec-4 .
		"throttle" => shift 365
		"\n" => reduce 142
		$default => reduce 142

314:	cmd-spec-4 => cmd-spec-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	cmd-spec-4 => cmd-spec-3 .
		"hook" => shift 356
		"drop" => shift 357
		"block" => shift 358
		"assert" => shift 359
		queue-full-beh-1 => shift 360
		queue-full-beh => shift 364
		"\n" => reduce 116
		$default => reduce 116

315:	int-port-defn-3 => int-port-defn-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	int-port-defn-3 => int-port-defn-2 .
		"hook" => shift 356
		"drop" => shift 357
		"block" => shift 358
		"assert" => shift 359
		queue-full-beh-1 => shift 360
		queue-full-beh => shift 363
		"\n" => reduce 106
		$default => reduce 106

316:	spc-port-inst-3 => spc-port-inst-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	spc-port-inst-3 => spc-port-inst-2 .
		"hook" => shift 356
		"drop" => shift 357
		"block" => shift 358
		"assert" => shift 359
		queue-full-beh-1 => shift 360
		queue-full-beh => shift 362
		"\n" => reduce 98
		$default => reduce 98

317:	gen-port-inst-4 => gen-port-inst-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	gen-port-inst-4 => gen-port-inst-3 .
		"hook" => shift 356
		"drop" => shift 357
		"block" => shift 358
		"assert" => shift 359
		queue-full-beh-1 => shift 360
		queue-full-beh => shift 361
		"\n" => reduce 91
		$default => reduce 91

318:	stmach-inst-0 => "state" . "machine" "instance" ident ":" qual-ident
	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 355

319:	stmach-inst => stmach-inst-2 . '$code-anno
	stmach-inst => stmach-inst-2 .
		'$code-anno => shift 354
		"\n" => reduce 315
		$default => reduce 315

320:	port-match-spec => "match" . ident "with" ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 353

321:	prod-cont-spec => cont-spec-2 .
		"\n" => reduce 186
		$default => reduce 186

322:	record-spec => record-spec-2 .
		"\n" => reduce 180
		$default => reduce 180

323:	tlm-chan-spec => tlm-chan-5 .
		"\n" => reduce 161
		$default => reduce 161

324:	param-spec => param-spec-4 .
		"\n" => reduce 151
		$default => reduce 151

325:	event-spec => event-spec-5 .
		"\n" => reduce 134
		$default => reduce 134

326:	command-spec => cmd-spec-4 .
		"\n" => reduce 108
		$default => reduce 108

327:	int-port-spec => int-port-defn-3 .
		"\n" => reduce 100
		$default => reduce 100

328:	port-inst => spc-port-inst-3 .
		"\n" => reduce 82
		$default => reduce 82

329:	port-inst => gen-port-inst-4 .
		"\n" => reduce 81
		$default => reduce 81

330:	comp-mem => stmach-inst .
		"\n" => reduce 80
		$default => reduce 80

331:	comp-mem => stmach-defn .
		"\n" => reduce 79
		$default => reduce 79

332:	comp-mem => tlm-chan-spec .
		"\n" => reduce 78
		$default => reduce 78

333:	comp-mem => prod-cont-spec .
		"\n" => reduce 77
		$default => reduce 77

334:	comp-mem => record-spec .
		"\n" => reduce 76
		$default => reduce 76

335:	comp-mem => param-spec .
		"\n" => reduce 75
		$default => reduce 75

336:	comp-mem => event-spec .
		"\n" => reduce 74
		$default => reduce 74

337:	comp-mem => command-spec .
		"\n" => reduce 73
		$default => reduce 73

338:	comp-mem => port-match-spec .
		"\n" => reduce 72
		$default => reduce 72

339:	comp-mem => port-inst .
		"\n" => reduce 71
		$default => reduce 71

340:	comp-mem => int-port-spec .
		"\n" => reduce 70
		$default => reduce 70

341:	comp-mem => struct-defn .
		"\n" => reduce 69
		$default => reduce 69

342:	comp-mem => enum-defn .
		"\n" => reduce 68
		$default => reduce 68

343:	comp-mem => include-spec .
		"\n" => reduce 67
		$default => reduce 67

344:	comp-mem => lone-anno .
		"\n" => reduce 66
		$default => reduce 66

345:	comp-mem-seq => comp-mem . mem-sep comp-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 52
		";" => shift 53
		mem-sep => shift 352

346:	component-defn => comp-kind "component" ident "{" comp-mem-seq . "}"
		"}" => shift 351

347:	array-defn => "array" ident "=" index ident .
		"\n" => reduce 28
		$default => reduce 28

348:	index => "[" expr . "]"
		"]" => shift 350

349:	module-defn => "module" ident "{" module-mem-seq "}" .
		"\n" => reduce 25
		$default => reduce 25

350:	index => "[" expr "]" .
		$default => reduce 300

351:	component-defn => comp-kind "component" ident "{" comp-mem-seq "}" .
		"\n" => reduce 60
		$default => reduce 60

352:	mem-sep => mem-sep . "\n"
	comp-mem-seq => comp-mem mem-sep . comp-mem-seq
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem => . lone-anno
	comp-mem => . include-spec
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	include-spec => . "include" string
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 '$code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-0 => . "enum" ident
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 270
		event-spec-0 => shift 271
		"time" => shift 272
		"text" => shift 273
		"telemetry" => shift 274
		"param" => shift 275
		"event" => shift 276
		"command" => shift 277
		"output" => shift 278
		tlm-chan-1 => shift 279
		param-spec-0 => shift 280
		event-spec-1 => shift 281
		"sync" => shift 282
		"guarded" => shift 283
		"async" => shift 284
		cmd-spec-0 => shift 285
		"internal" => shift 286
		spc-port-kind => shift 287
		gen-port-inst-0 => shift 288
		"enum" => shift 6
		"product" => shift 289
		tlm-chan-2 => shift 290
		param-spec-1 => shift 291
		event-spec-2 => shift 292
		cmd-spec-1 => shift 293
		int-port-defn-0 => shift 294
		input-port-kind => shift 295
		spc-port-inst-0 => shift 296
		gen-port-inst-1 => shift 297
		enum-defn-0 => shift 9
		stmach-inst-0 => shift 298
		cont-spec-0 => shift 299
		record-spec-0 => shift 300
		tlm-chan-3 => shift 301
		param-spec-2 => shift 302
		event-spec-3 => shift 303
		cmd-spec-2 => shift 304
		int-port-defn-1 => shift 305
		spc-port-inst-1 => shift 306
		gen-port-inst-2 => shift 307
		"struct" => shift 12
		enum-defn-1 => shift 13
		stmach-inst-1 => shift 308
		cont-spec-1 => shift 309
		record-spec-1 => shift 310
		tlm-chan-4 => shift 311
		param-spec-3 => shift 312
		event-spec-4 => shift 313
		cmd-spec-3 => shift 314
		int-port-defn-2 => shift 315
		spc-port-inst-2 => shift 316
		gen-port-inst-3 => shift 317
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 318
		stmach-inst-2 => shift 319
		'$lone-anno => shift 22
		"match" => shift 320
		cont-spec-2 => shift 321
		record-spec-2 => shift 322
		tlm-chan-5 => shift 323
		param-spec-4 => shift 324
		event-spec-5 => shift 325
		cmd-spec-4 => shift 326
		int-port-defn-3 => shift 327
		spc-port-inst-3 => shift 328
		gen-port-inst-4 => shift 329
		struct-defn-1 => shift 28
		enum-defn-3 => shift 29
		"include" => shift 34
		stmach-inst => shift 330
		stmach-defn => shift 331
		tlm-chan-spec => shift 332
		prod-cont-spec => shift 333
		record-spec => shift 334
		param-spec => shift 335
		event-spec => shift 336
		command-spec => shift 337
		port-match-spec => shift 338
		port-inst => shift 339
		int-port-spec => shift 340
		struct-defn => shift 341
		enum-defn => shift 342
		include-spec => shift 343
		lone-anno => shift 344
		comp-mem => shift 345
		comp-mem-seq => shift 510
		"\n" => shift 153
		$default => reduce 64

353:	port-match-spec => "match" ident . "with" ident
		"with" => shift 509

354:	stmach-inst => stmach-inst-2 '$code-anno .
		"\n" => reduce 316
		$default => reduce 316

355:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
	stmach-inst-0 => "state" "machine" . "instance" ident ":" qual-ident
		"instance" => shift 508
		'$ident => shift 57
		ident => shift 139

356:	queue-full-beh-1 => "hook" .
		'$code-anno => reduce 262
		"\n" => reduce 262
		$default => reduce 262

357:	queue-full-beh-1 => "drop" .
		'$code-anno => reduce 261
		"\n" => reduce 261
		$default => reduce 261

358:	queue-full-beh-1 => "block" .
		'$code-anno => reduce 260
		"\n" => reduce 260
		$default => reduce 260

359:	queue-full-beh-1 => "assert" .
		'$code-anno => reduce 259
		"\n" => reduce 259
		$default => reduce 259

360:	queue-full-beh => queue-full-beh-1 .
		'$code-anno => reduce 258
		"\n" => reduce 258
		$default => reduce 258

361:	gen-port-inst-4 => gen-port-inst-3 queue-full-beh .
		"\n" => reduce 92
		$default => reduce 92

362:	spc-port-inst-3 => spc-port-inst-2 queue-full-beh .
		"\n" => reduce 99
		$default => reduce 99

363:	int-port-defn-3 => int-port-defn-2 queue-full-beh .
		"\n" => reduce 107
		$default => reduce 107

364:	cmd-spec-4 => cmd-spec-3 queue-full-beh .
		"\n" => reduce 117
		$default => reduce 117

365:	event-spec-5 => event-spec-4 "throttle" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 507

366:	param-spec-4 => param-spec-3 "save" . "opcode" expr
		"opcode" => shift 506

367:	tlm-chan-5 => tlm-chan-4 "high" . "{" tlm-lim-seq "}"
		"{" => shift 505

368:	record-spec-2 => record-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 504

369:	cont-spec-2 => cont-spec-1 "default" . "priority" expr
		"priority" => shift 503

370:	stmach-inst-2 => stmach-inst-1 queue-full-beh .
		'$code-anno => reduce 321
		"\n" => reduce 321
		$default => reduce 321

371:	gen-port-inst-3 => gen-port-inst-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 502

372:	spc-port-inst-2 => spc-port-inst-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 501

373:	int-port-defn-2 => int-port-defn-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 500

374:	cmd-spec-3 => cmd-spec-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 499

375:	event-spec-4 => event-spec-3 "format" . string
	string => . '$string
		'$string => shift 55
		string => shift 498

376:	param-spec-3 => param-spec-2 "set" . "opcode" expr
		"opcode" => shift 497

377:	tlm-chan-4 => tlm-chan-3 "low" . "{" tlm-lim-seq "}"
		"{" => shift 496

378:	record-spec-1 => record-spec-0 "array" .
		"\n" => reduce 183
		$default => reduce 183

379:	cont-spec-1 => cont-spec-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 495

380:	stmach-inst-1 => stmach-inst-0 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 494

381:	gen-port-inst-2 => gen-port-inst-1 qual-ident .
		"\n" => reduce 87
		$default => reduce 87

382:	gen-port-inst-2 => gen-port-inst-1 "serial" .
		"\n" => reduce 88
		$default => reduce 88

383:	spc-port-kind => "telemetry" .
		$default => reduce 128

384:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
		"get" => shift 397
		"recv" => shift 398
		"request" => shift 399
		"send" => shift 400

385:	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 413
		"set" => shift 414

386:	spc-port-kind => "event" .
		$default => reduce 121

387:	spc-port-inst-1 => input-port-kind spc-port-inst-0 .
		"\n" => reduce 95
		$default => reduce 95

388:	gen-port-inst-0 => input-port-kind "input" . "port" ident ":"
		"port" => shift 493

389:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
	cmd-spec-0 => input-port-kind "command" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 492
		"recv" => shift 409
		"reg" => shift 410
		"resp" => shift 411

390:	int-port-defn-1 => int-port-defn-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 '$code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		"ref" => shift 125
		ident => shift 126
		formal-param-1 => shift 127
		formal-param => shift 128
		param-list-1 => shift 129
		param-list => shift 491
		$default => reduce 252

391:	cmd-spec-2 => cmd-spec-1 "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 490

392:	event-spec-3 => event-spec-2 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 489

393:	param-spec-2 => param-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 488

394:	tlm-chan-3 => tlm-chan-2 "format" . string
	string => . '$string
		'$string => shift 55
		string => shift 487

395:	record-spec-0 => "product" "record" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		ident => shift 486

396:	cont-spec-0 => "product" "container" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 485

397:	spc-port-kind => "product" "get" .
		$default => reduce 124

398:	spc-port-kind => "product" "recv" .
		$default => reduce 125

399:	spc-port-kind => "product" "request" .
		$default => reduce 126

400:	spc-port-kind => "product" "send" .
		$default => reduce 127

401:	gen-port-inst-1 => gen-port-inst-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 484

402:	spc-port-inst-0 => spc-port-kind "port" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 483

403:	int-port-defn-0 => "internal" "port" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 482

404:	cmd-spec-1 => cmd-spec-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 '$code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		"ref" => shift 125
		ident => shift 126
		formal-param-1 => shift 127
		formal-param => shift 128
		param-list-1 => shift 129
		param-list => shift 481
		$default => reduce 252

405:	event-spec-2 => event-spec-1 "severity" . severity
	severity => . "activity" "high"
	severity => . "activity" "low"
	severity => . "command"
	severity => . "diagnostic"
	severity => . "fatal"
	severity => . "warning" "high"
	severity => . "warning" "low"
		"warning" => shift 475
		"fatal" => shift 476
		"diagnostic" => shift 477
		"command" => shift 478
		"activity" => shift 479
		severity => shift 480

406:	param-spec-1 => param-spec-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 474

407:	tlm-chan-2 => tlm-chan-1 "update" . tlm-update
	tlm-update => . "always"
	tlm-update => . "on" "change"
		"on" => shift 471
		"always" => shift 472
		tlm-update => shift 473

408:	gen-port-inst-0 => "output" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 470

409:	spc-port-kind => "command" "recv" .
		$default => reduce 118

410:	spc-port-kind => "command" "reg" .
		$default => reduce 119

411:	spc-port-kind => "command" "resp" .
		$default => reduce 120

412:	event-spec-0 => "event" ident .
		$default => reduce 135

413:	spc-port-kind => "param" "get" .
		$default => reduce 122

414:	spc-port-kind => "param" "set" .
		$default => reduce 123

415:	param-spec-0 => "param" ident . ":" type-name
		":" => shift 469

416:	tlm-chan-0 => "telemetry" ident . ":" type-name
		":" => shift 468

417:	spc-port-kind => "text" "event" .
		$default => reduce 129

418:	spc-port-kind => "time" "get" .
		$default => reduce 130

419:	event-spec-1 => event-spec-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 '$code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 57
		"ref" => shift 125
		ident => shift 126
		formal-param-1 => shift 127
		formal-param => shift 128
		param-list-1 => shift 129
		param-list => shift 467
		$default => reduce 252

420:	tlm-chan-1 => tlm-chan-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 466

421:	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}"
		"{" => shift 465

422:	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident "{" qual-ident-seq "}"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 464

423:	conn-graph-spec => "connections" ident "{" . conn-seq "}"
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 459
		"unmatched" => shift 460
		conn-from => shift 461
		connection => shift 462
		conn-seq => shift 463
		$default => reduce 229

424:	comp-inst-spec => "private" "instance" ident .
		"\n" => reduce 218
		$default => reduce 218

425:	topo-mem-seq => topo-mem mem-sep topo-mem-seq .
		$default => reduce 210

426:	loc-spec => "locate" "state" "machine" qual-ident "at" string .
		"\n" => reduce 267
		$default => reduce 267

427:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}" .
		"\n" => reduce 323
		$default => reduce 323

428:	mem-sep => mem-sep . "\n"
	stmach-mem-seq => stmach-mem mem-sep . stmach-mem-seq
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . lone-anno
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 244
		'$lone-anno => shift 22
		state-defn => shift 245
		"initial" => shift 246
		"signal" => shift 247
		"guard" => shift 248
		"action" => shift 249
		"choice" => shift 250
		lone-anno => shift 251
		stmach-mem => shift 252
		stmach-mem-seq => shift 458
		"\n" => shift 153
		$default => reduce 324

429:	stmach-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 457

430:	stmach-mem => "action" ident .
	stmach-mem => "action" ident . ":" type-name
		":" => shift 456
		"\n" => reduce 328
		$default => reduce 328

431:	stmach-mem => "guard" ident .
	stmach-mem => "guard" ident . ":" type-name
		":" => shift 455
		"\n" => reduce 330
		$default => reduce 330

432:	stmach-mem => "signal" ident .
	stmach-mem => "signal" ident . ":" type-name
		":" => shift 454
		"\n" => reduce 332
		$default => reduce 332

433:	do-expr => "do" . "{" action-seq "}"
		"{" => shift 453

434:	trans-expr-0 => "enter" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 452

435:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 434
		trans-expr-0 => shift 451

436:	trans-expr-1 => trans-expr-0 .
		"\n" => reduce 354
		$default => reduce 354

437:	trans-expr => trans-expr-1 .
		"\n" => reduce 352
		$default => reduce 352

438:	stmach-mem => "initial" trans-expr .
		"\n" => reduce 334
		$default => reduce 334

439:	state-defn => "state" ident .
	state-defn => "state" ident . "{" state-defn-mem-seq "}"
		"{" => shift 450
		"\n" => reduce 336
		$default => reduce 336

440:	struct-mem-1 => struct-mem-0 "[" expr . "]"
		"]" => shift 449

441:	struct-mem-3 => struct-mem-2 "format" string .
		'$code-anno => reduce 53
		"\n" => reduce 53
		$default => reduce 53

442:	struct-mem-seq => struct-mem mem-sep struct-mem-seq .
		$default => reduce 45

443:	formal-param-1 => "ref" ident ":" type-name .
		'$code-anno => reduce 257
		"\n" => reduce 257
		$default => reduce 257

444:	expr-seq => expr elt-sep expr-seq .
		$default => reduce 287

445:	struct-elt-seq => ident "=" expr . elt-sep struct-elt-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 448

446:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 447

447:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr .
		"\n" => reduce 193
		$default => reduce 193

448:	elt-sep => elt-sep . "\n"
	struct-elt-seq => ident "=" expr elt-sep . struct-elt-seq
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 57
		ident => shift 212
		struct-elt-seq => shift 566
		"\n" => shift 234
		$default => reduce 288

449:	struct-mem-1 => struct-mem-0 "[" expr "]" .
		$default => reduce 50

450:	state-defn => "state" ident "{" . state-defn-mem-seq "}"
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . lone-anno
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 553
		st-tran-spec-0 => shift 554
		st-tran-spec-1 => shift 555
		st-tran-spec-2 => shift 556
		"state" => shift 244
		'$lone-anno => shift 22
		"exit" => shift 557
		"entry" => shift 558
		state-trans-spec => shift 559
		state-defn => shift 560
		"choice" => shift 561
		"initial" => shift 562
		lone-anno => shift 563
		state-defn-mem => shift 564
		state-defn-mem-seq => shift 565
		$default => reduce 338

451:	trans-expr-1 => do-expr trans-expr-0 .
		"\n" => reduce 355
		$default => reduce 355

452:	trans-expr-0 => "enter" qual-ident .
		"\n" => reduce 353
		$default => reduce 353

453:	do-expr => "do" "{" . action-seq "}"
	action-seq => .
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 57
		ident => shift 551
		action-seq => shift 552
		$default => reduce 357

454:	stmach-mem => "signal" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 550

455:	stmach-mem => "guard" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 549

456:	stmach-mem => "action" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 548

457:	stmach-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 547

458:	stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq .
		$default => reduce 325

459:	conn-from => qual-ident . "[" expr "]"
	conn-from => qual-ident .
		"[" => shift 546
		$default => reduce 233

460:	connection => "unmatched" . conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 459
		conn-from => shift 545

461:	connection => conn-from . "->" conn-to
		"->" => shift 544

462:	conn-seq => connection . elt-sep conn-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 543

463:	conn-graph-spec => "connections" ident "{" conn-seq . "}"
		"}" => shift 542

464:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident .
	conn-graph-spec => pattern-kind "connections" "instance" qual-ident . "{" qual-ident-seq "}"
		"{" => shift 541
		"\n" => reduce 220
		$default => reduce 220

465:	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 536
		"include" => shift 34
		tlm-pkt-spec => shift 537
		include-spec => shift 538
		tlm-pktgrp-mem => shift 539
		tlm-pktgrp-mem-seq => shift 540
		$default => reduce 239

466:	tlm-chan-1 => tlm-chan-0 "id" expr .
		"\n" => reduce 164
		$default => reduce 164

467:	event-spec-1 => event-spec-0 "(" param-list . ")"
		")" => shift 535

468:	tlm-chan-0 => "telemetry" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 534

469:	param-spec-0 => "param" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 533

470:	gen-port-inst-0 => "output" "port" ident . ":"
		":" => shift 532

471:	tlm-update => "on" . "change"
		"change" => shift 531

472:	tlm-update => "always" .
		"\n" => reduce 173
		$default => reduce 173

473:	tlm-chan-2 => tlm-chan-1 "update" tlm-update .
		"\n" => reduce 166
		$default => reduce 166

474:	param-spec-1 => param-spec-0 "default" expr .
		"\n" => reduce 154
		$default => reduce 154

475:	severity => "warning" . "low"
	severity => "warning" . "high"
		"high" => shift 529
		"low" => shift 530

476:	severity => "fatal" .
		$default => reduce 148

477:	severity => "diagnostic" .
		$default => reduce 147

478:	severity => "command" .
		$default => reduce 146

479:	severity => "activity" . "low"
	severity => "activity" . "high"
		"high" => shift 527
		"low" => shift 528

480:	event-spec-2 => event-spec-1 "severity" severity .
		$default => reduce 138

481:	cmd-spec-1 => cmd-spec-0 "(" param-list . ")"
		")" => shift 526

482:	int-port-defn-0 => "internal" "port" ident .
		"\n" => reduce 101
		$default => reduce 101

483:	spc-port-inst-0 => spc-port-kind "port" ident .
		"\n" => reduce 93
		$default => reduce 93

484:	gen-port-inst-1 => gen-port-inst-0 "[" expr . "]"
		"]" => shift 525

485:	cont-spec-0 => "product" "container" ident .
		"\n" => reduce 187
		$default => reduce 187

486:	record-spec-0 => "product" "record" ident . ":" type-name
		":" => shift 524

487:	tlm-chan-3 => tlm-chan-2 "format" string .
		"\n" => reduce 168
		$default => reduce 168

488:	param-spec-2 => param-spec-1 "id" expr .
		"\n" => reduce 156
		$default => reduce 156

489:	event-spec-3 => event-spec-2 "id" expr .
		$default => reduce 140

490:	cmd-spec-2 => cmd-spec-1 "opcode" expr .
		"\n" => reduce 113
		$default => reduce 113

491:	int-port-defn-1 => int-port-defn-0 "(" param-list . ")"
		")" => shift 523

492:	cmd-spec-0 => input-port-kind "command" ident .
		"\n" => reduce 109
		$default => reduce 109

493:	gen-port-inst-0 => input-port-kind "input" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 522

494:	stmach-inst-1 => stmach-inst-0 "priority" expr .
		"\n" => reduce 319
		'$code-anno => reduce 319
		$default => reduce 319

495:	cont-spec-1 => cont-spec-0 "id" expr .
		"\n" => reduce 189
		$default => reduce 189

496:	tlm-chan-4 => tlm-chan-3 "low" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 514
		"orange" => shift 515
		"red" => shift 516
		tlm-lim => shift 517
		tlm-lim-seq => shift 521
		$default => reduce 175

497:	param-spec-3 => param-spec-2 "set" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 520

498:	event-spec-4 => event-spec-3 "format" string .
		"\n" => reduce 141
		$default => reduce 141

499:	cmd-spec-3 => cmd-spec-2 "priority" expr .
		"\n" => reduce 115
		$default => reduce 115

500:	int-port-defn-2 => int-port-defn-1 "priority" expr .
		"\n" => reduce 105
		$default => reduce 105

501:	spc-port-inst-2 => spc-port-inst-1 "priority" expr .
		"\n" => reduce 97
		$default => reduce 97

502:	gen-port-inst-3 => gen-port-inst-2 "priority" expr .
		"\n" => reduce 90
		$default => reduce 90

503:	cont-spec-2 => cont-spec-1 "default" "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 519

504:	record-spec-2 => record-spec-1 "id" expr .
		"\n" => reduce 185
		$default => reduce 185

505:	tlm-chan-5 => tlm-chan-4 "high" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 514
		"orange" => shift 515
		"red" => shift 516
		tlm-lim => shift 517
		tlm-lim-seq => shift 518
		$default => reduce 175

506:	param-spec-4 => param-spec-3 "save" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 513

507:	event-spec-5 => event-spec-4 "throttle" expr .
		"\n" => reduce 143
		$default => reduce 143

508:	stmach-inst-0 => "state" "machine" "instance" . ident ":" qual-ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 512

509:	port-match-spec => "match" ident "with" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 511

510:	comp-mem-seq => comp-mem mem-sep comp-mem-seq .
		$default => reduce 65

511:	port-match-spec => "match" ident "with" ident .
		"\n" => reduce 270
		$default => reduce 270

512:	stmach-inst-0 => "state" "machine" "instance" ident . ":" qual-ident
		":" => shift 599

513:	param-spec-4 => param-spec-3 "save" "opcode" expr .
		"\n" => reduce 160
		$default => reduce 160

514:	tlm-lim => "yellow" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 598

515:	tlm-lim => "orange" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 597

516:	tlm-lim => "red" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 596

517:	tlm-lim-seq => tlm-lim . elt-sep tlm-lim-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 595

518:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq . "}"
		"}" => shift 594

519:	cont-spec-2 => cont-spec-1 "default" "priority" expr .
		"\n" => reduce 191
		$default => reduce 191

520:	param-spec-3 => param-spec-2 "set" "opcode" expr .
		"\n" => reduce 158
		$default => reduce 158

521:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq . "}"
		"}" => shift 593

522:	gen-port-inst-0 => input-port-kind "input" "port" ident . ":"
		":" => shift 592

523:	int-port-defn-1 => int-port-defn-0 "(" param-list ")" .
		"\n" => reduce 103
		$default => reduce 103

524:	record-spec-0 => "product" "record" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"string" => shift 110
		"bool" => shift 111
		"F64" => shift 112
		"F32" => shift 113
		"U64" => shift 114
		"I64" => shift 115
		"U32" => shift 116
		"I32" => shift 117
		"U16" => shift 118
		"I16" => shift 119
		"U8" => shift 120
		"I8" => shift 121
		qual-ident => shift 122
		type-name => shift 591

525:	gen-port-inst-1 => gen-port-inst-0 "[" expr "]" .
		$default => reduce 86

526:	cmd-spec-1 => cmd-spec-0 "(" param-list ")" .
		"\n" => reduce 111
		$default => reduce 111

527:	severity => "activity" "high" .
		$default => reduce 144

528:	severity => "activity" "low" .
		$default => reduce 145

529:	severity => "warning" "high" .
		$default => reduce 149

530:	severity => "warning" "low" .
		$default => reduce 150

531:	tlm-update => "on" "change" .
		"\n" => reduce 174
		$default => reduce 174

532:	gen-port-inst-0 => "output" "port" ident ":" .
		$default => reduce 84

533:	param-spec-0 => "param" ident ":" type-name .
		"\n" => reduce 152
		$default => reduce 152

534:	tlm-chan-0 => "telemetry" ident ":" type-name .
		"\n" => reduce 162
		$default => reduce 162

535:	event-spec-1 => event-spec-0 "(" param-list ")" .
		$default => reduce 137

536:	tlm-pkt-spec => "packet" . ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
	tlm-pkt-spec => "packet" . ident "group" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 590

537:	tlm-pktgrp-mem => tlm-pkt-spec .
		"\n" => reduce 242
		$default => reduce 242

538:	tlm-pktgrp-mem => include-spec .
		"\n" => reduce 241
		$default => reduce 241

539:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 589

540:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}"
		"}" => shift 588

541:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" . qual-ident-seq "}"
	qual-ident-seq => .
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 586
		qual-ident-seq => shift 587
		$default => reduce 298

542:	conn-graph-spec => "connections" ident "{" conn-seq "}" .
		"\n" => reduce 219
		$default => reduce 219

543:	elt-sep => elt-sep . "\n"
	conn-seq => connection elt-sep . conn-seq
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 459
		"unmatched" => shift 460
		conn-from => shift 461
		connection => shift 462
		conn-seq => shift 585
		"\n" => shift 234
		$default => reduce 229

544:	connection => conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 583
		conn-to => shift 584

545:	connection => "unmatched" conn-from . "->" conn-to
		"->" => shift 582

546:	conn-from => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 581

547:	stmach-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 580

548:	stmach-mem => "action" ident ":" type-name .
		"\n" => reduce 329
		$default => reduce 329

549:	stmach-mem => "guard" ident ":" type-name .
		"\n" => reduce 331
		$default => reduce 331

550:	stmach-mem => "signal" ident ":" type-name .
		"\n" => reduce 333
		$default => reduce 333

551:	action-seq => ident . elt-sep action-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 579

552:	do-expr => "do" "{" action-seq . "}"
		"}" => shift 578

553:	st-tran-spec-0 => "on" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 577

554:	st-tran-spec-1 => st-tran-spec-0 . "if" ident
	st-tran-spec-1 => st-tran-spec-0 .
		"if" => shift 576
		$default => reduce 349

555:	st-tran-spec-2 => st-tran-spec-1 . trans-or-do
	trans-or-do => . trans-expr
	trans-or-do => . do-expr
	trans-expr => . trans-expr-1
	do-expr => . "do" "{" action-seq "}"
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 434
		trans-expr-0 => shift 436
		"do" => shift 433
		trans-expr-1 => shift 437
		do-expr => shift 573
		trans-expr => shift 574
		trans-or-do => shift 575

556:	state-trans-spec => st-tran-spec-2 .
		"\n" => reduce 347
		$default => reduce 347

557:	state-defn-mem => "exit" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		do-expr => shift 572

558:	state-defn-mem => "entry" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		do-expr => shift 571

559:	state-defn-mem => state-trans-spec .
		"\n" => reduce 344
		$default => reduce 344

560:	state-defn-mem => state-defn .
		"\n" => reduce 343
		$default => reduce 343

561:	state-defn-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 570

562:	state-defn-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		"enter" => shift 434
		do-expr => shift 435
		trans-expr-0 => shift 436
		trans-expr-1 => shift 437
		trans-expr => shift 569

563:	state-defn-mem => lone-anno .
		"\n" => reduce 340
		$default => reduce 340

564:	state-defn-mem-seq => state-defn-mem . mem-sep state-defn-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 52
		";" => shift 53
		mem-sep => shift 568

565:	state-defn => "state" ident "{" state-defn-mem-seq . "}"
		"}" => shift 567

566:	struct-elt-seq => ident "=" expr elt-sep struct-elt-seq .
		$default => reduce 289

567:	state-defn => "state" ident "{" state-defn-mem-seq "}" .
		"\n" => reduce 337
		$default => reduce 337

568:	mem-sep => mem-sep . "\n"
	state-defn-mem-seq => state-defn-mem mem-sep . state-defn-mem-seq
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . lone-anno
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 553
		st-tran-spec-0 => shift 554
		st-tran-spec-1 => shift 555
		st-tran-spec-2 => shift 556
		"state" => shift 244
		'$lone-anno => shift 22
		"exit" => shift 557
		"entry" => shift 558
		state-trans-spec => shift 559
		state-defn => shift 560
		"choice" => shift 561
		"initial" => shift 562
		lone-anno => shift 563
		state-defn-mem => shift 564
		state-defn-mem-seq => shift 614
		"\n" => shift 153
		$default => reduce 338

569:	state-defn-mem => "initial" trans-expr .
		"\n" => reduce 341
		$default => reduce 341

570:	state-defn-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 613

571:	state-defn-mem => "entry" do-expr .
		"\n" => reduce 345
		$default => reduce 345

572:	state-defn-mem => "exit" do-expr .
		"\n" => reduce 346
		$default => reduce 346

573:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	trans-or-do => do-expr .
		"enter" => shift 434
		trans-expr-0 => shift 451
		"\n" => reduce 360
		$default => reduce 360

574:	trans-or-do => trans-expr .
		"\n" => reduce 359
		$default => reduce 359

575:	st-tran-spec-2 => st-tran-spec-1 trans-or-do .
		"\n" => reduce 351
		$default => reduce 351

576:	st-tran-spec-1 => st-tran-spec-0 "if" . ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 612

577:	st-tran-spec-0 => "on" ident .
		$default => reduce 348

578:	do-expr => "do" "{" action-seq "}" .
		"\n" => reduce 356
		$default => reduce 356

579:	elt-sep => elt-sep . "\n"
	action-seq => ident elt-sep . action-seq
	action-seq => .
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 57
		ident => shift 551
		action-seq => shift 611
		"\n" => shift 234
		$default => reduce 357

580:	stmach-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		"enter" => shift 434
		do-expr => shift 435
		trans-expr-0 => shift 436
		trans-expr-1 => shift 437
		trans-expr => shift 610

581:	conn-from => qual-ident "[" expr . "]"
		"]" => shift 609

582:	connection => "unmatched" conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 583
		conn-to => shift 608

583:	conn-to => qual-ident . "[" expr "]"
	conn-to => qual-ident .
		"[" => shift 607
		"\n" => reduce 235
		$default => reduce 235

584:	connection => conn-from "->" conn-to .
		"\n" => reduce 231
		$default => reduce 231

585:	conn-seq => connection elt-sep conn-seq .
		$default => reduce 230

586:	qual-ident-seq => qual-ident . elt-sep qual-ident-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 606

587:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq . "}"
		"}" => shift 605

588:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" .
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" . "omit" "{" tlm-chan-id-seq "}"
		"omit" => shift 604
		"\n" => reduce 237
		$default => reduce 237

589:	elt-sep => elt-sep . "\n"
	tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 536
		"include" => shift 34
		tlm-pkt-spec => shift 537
		include-spec => shift 538
		tlm-pktgrp-mem => shift 539
		tlm-pktgrp-mem-seq => shift 603
		"\n" => shift 234
		$default => reduce 239

590:	tlm-pkt-spec => "packet" ident . "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident . "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"group" => shift 602

591:	record-spec-0 => "product" "record" ident ":" type-name .
		"\n" => reduce 181
		$default => reduce 181

592:	gen-port-inst-0 => input-port-kind "input" "port" ident ":" .
		$default => reduce 83

593:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}" .
		"\n" => reduce 170
		$default => reduce 170

594:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}" .
		"\n" => reduce 172
		$default => reduce 172

595:	elt-sep => elt-sep . "\n"
	tlm-lim-seq => tlm-lim elt-sep . tlm-lim-seq
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 514
		"orange" => shift 515
		"red" => shift 516
		tlm-lim => shift 517
		tlm-lim-seq => shift 601
		"\n" => shift 234
		$default => reduce 175

596:	tlm-lim => "red" expr .
		"\n" => reduce 177
		$default => reduce 177

597:	tlm-lim => "orange" expr .
		"\n" => reduce 178
		$default => reduce 178

598:	tlm-lim => "yellow" expr .
		"\n" => reduce 179
		$default => reduce 179

599:	stmach-inst-0 => "state" "machine" "instance" ident ":" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 600

600:	stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident .
		'$code-anno => reduce 317
		"\n" => reduce 317
		$default => reduce 317

601:	tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq .
		$default => reduce 176

602:	tlm-pkt-spec => "packet" ident "group" . expr "id" expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	tlm-pkt-spec => "packet" ident "group" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 620

603:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 240

604:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" . "{" tlm-chan-id-seq "}"
		"{" => shift 619

605:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}" .
		"\n" => reduce 221
		$default => reduce 221

606:	elt-sep => elt-sep . "\n"
	qual-ident-seq => qual-ident elt-sep . qual-ident-seq
	qual-ident-seq => .
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 586
		qual-ident-seq => shift 618
		"\n" => shift 234
		$default => reduce 298

607:	conn-to => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 617

608:	connection => "unmatched" conn-from "->" conn-to .
		"\n" => reduce 232
		$default => reduce 232

609:	conn-from => qual-ident "[" expr "]" .
		$default => reduce 234

610:	stmach-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 616

611:	action-seq => ident elt-sep action-seq .
		$default => reduce 358

612:	st-tran-spec-1 => st-tran-spec-0 "if" ident .
		$default => reduce 350

613:	state-defn-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 615

614:	state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq .
		$default => reduce 339

615:	state-defn-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 57
		ident => shift 626

616:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		"enter" => shift 434
		do-expr => shift 435
		trans-expr-0 => shift 436
		trans-expr-1 => shift 437
		trans-expr => shift 625

617:	conn-to => qual-ident "[" expr . "]"
		"]" => shift 624

618:	qual-ident-seq => qual-ident elt-sep qual-ident-seq .
		$default => reduce 299

619:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" . tlm-chan-id-seq "}"
	tlm-chan-id-seq => .
	tlm-chan-id-seq => . tlm-chan-id-seq elt-sep qual-ident
		tlm-chan-id-seq => shift 623
		"\n" => reduce 249
		$default => reduce 249

620:	tlm-pkt-spec => "packet" ident "group" expr . "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident "group" expr . "id" expr "{" tlm-pkt-mem-seq "}"
		"id" => shift 621
		"{" => shift 622

621:	tlm-pkt-spec => "packet" ident "group" expr "id" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		'$string => shift 55
		'$fixed => shift 96
		'$float => shift 97
		"(" => shift 98
		"{" => shift 99
		"[" => shift 100
		string => shift 101
		number => shift 102
		qual-ident => shift 103
		"-" => shift 104
		prim-expr => shift 105
		unary-expr => shift 106
		mul-expr => shift 107
		add-expr => shift 108
		expr => shift 635

622:	tlm-pkt-spec => "packet" ident "group" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"include" => shift 34
		qual-ident => shift 631
		include-spec => shift 632
		tlm-pkt-mem => shift 633
		tlm-pkt-mem-seq => shift 634
		$default => reduce 245

623:	tlm-chan-id-seq => tlm-chan-id-seq . elt-sep qual-ident
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq . "}"
		"}" => shift 629
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 630

624:	conn-to => qual-ident "[" expr "]" .
		"\n" => reduce 236
		$default => reduce 236

625:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 628

626:	state-defn-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		"enter" => shift 434
		do-expr => shift 435
		trans-expr-0 => shift 436
		trans-expr-1 => shift 437
		trans-expr => shift 627

627:	state-defn-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 640

628:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 327
		$default => reduce 327

629:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}" .
		"\n" => reduce 238
		$default => reduce 238

630:	elt-sep => elt-sep . "\n"
	tlm-chan-id-seq => tlm-chan-id-seq elt-sep . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		qual-ident => shift 639
		"\n" => shift 234

631:	tlm-pkt-mem => qual-ident .
		"\n" => reduce 248
		$default => reduce 248

632:	tlm-pkt-mem => include-spec .
		"\n" => reduce 247
		$default => reduce 247

633:	tlm-pkt-mem-seq => tlm-pkt-mem . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 188
		"," => shift 189
		elt-sep => shift 638

634:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 637

635:	tlm-pkt-spec => "packet" ident "group" expr "id" expr . "{" tlm-pkt-mem-seq "}"
		"{" => shift 636

636:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"include" => shift 34
		qual-ident => shift 631
		include-spec => shift 632
		tlm-pkt-mem => shift 633
		tlm-pkt-mem-seq => shift 643
		$default => reduce 245

637:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 243
		$default => reduce 243

638:	elt-sep => elt-sep . "\n"
	tlm-pkt-mem-seq => tlm-pkt-mem elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 57
		ident => shift 94
		qual-ident-1 => shift 95
		"include" => shift 34
		qual-ident => shift 631
		include-spec => shift 632
		tlm-pkt-mem => shift 633
		tlm-pkt-mem-seq => shift 642
		"\n" => shift 234
		$default => reduce 245

639:	tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident .
		"\n" => reduce 250
		$default => reduce 250

640:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 433
		"enter" => shift 434
		do-expr => shift 435
		trans-expr-0 => shift 436
		trans-expr-1 => shift 437
		trans-expr => shift 641

641:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 645

642:	tlm-pkt-mem-seq => tlm-pkt-mem elt-sep tlm-pkt-mem-seq .
		$default => reduce 246

643:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 644

644:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 244
		$default => reduce 244

645:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 342
		$default => reduce 342

