0 $start => translation-unit
1 elt-sep => ","
2 elt-sep => "\n"
3 elt-sep => elt-sep "\n"
4 mem-sep => ";"
5 mem-sep => "\n"
6 mem-sep => mem-sep "\n"
7 include-spec => "include" '$string
8 translation-unit => module-mem-seq
9 module-mem-seq =>
10 module-mem-seq => mod-mem
11 module-mem-seq => include-spec
12 module-mem-seq => mod-mem mem-sep module-mem-seq
13 module-mem-seq => include-spec mem-sep module-mem-seq
14 mod-mem => lone-anno
15 mod-mem => component-defn
16 mod-mem => comp-inst-defn
17 mod-mem => topology-defn
18 mod-mem => const-defn
19 mod-mem => module-defn
20 mod-mem => port-defn
21 mod-mem => struct-defn
22 mod-mem => loc-spec
23 mod-mem => abs-type-defn
24 mod-mem => array-defn
25 mod-mem => enum-defn
26 mod-mem => stmach-defn
27 module-defn => "module" ident "{" module-mem-seq "}"
28 const-defn => "constant" ident "=" expr
29 const-defn => "constant" ident "=" expr code-anno
30 abs-type-defn => "type" ident
31 abs-type-defn => "type" ident code-anno
32 array-defn => "array" ident "=" index ident
33 array-defn => "array" ident "=" index ident code-anno
34 enum-defn => enum-defn-4
35 enum-defn-0 => "enum" ident
36 enum-defn-1 => enum-defn-0
37 enum-defn-1 => enum-defn-0 ":" type-name
38 enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}"
39 enum-defn-3 => enum-defn-2
40 enum-defn-3 => enum-defn-2 "default" expr
41 enum-defn-4 => enum-defn-3
42 enum-defn-4 => enum-defn-3 code-anno
43 enum-mem-seq =>
44 enum-mem-seq => enum-mem
45 enum-mem-seq => enum-mem elt-sep enum-mem-seq
46 enum-mem => ident
47 enum-mem => ident code-anno
48 enum-mem => ident "=" expr
49 enum-mem => ident "=" expr code-anno
50 struct-defn => struct-defn-2
51 struct-defn-0 => "struct" ident "{" struct-mem-seq "}"
52 struct-defn-1 => struct-defn-0
53 struct-defn-1 => struct-defn-0 "default" expr
54 struct-defn-2 => struct-defn-1
55 struct-defn-2 => struct-defn-1 code-anno
56 struct-mem-seq =>
57 struct-mem-seq => struct-mem
58 struct-mem-seq => struct-mem mem-sep struct-mem-seq
59 struct-mem => struct-mem-3
60 struct-mem => struct-mem-3 code-anno
61 struct-mem-0 => ident ":"
62 struct-mem-1 => struct-mem-0
63 struct-mem-1 => struct-mem-0 "[" expr "]"
64 struct-mem-2 => struct-mem-1 type-name
65 struct-mem-3 => struct-mem-2
66 struct-mem-3 => struct-mem-2 "format" string
67 port-defn => port-defn-3
68 port-defn-0 => "port" ident
69 port-defn-1 => port-defn-0
70 port-defn-1 => port-defn-0 "(" param-list ")"
71 port-defn-2 => port-defn-1
72 port-defn-2 => port-defn-1 "->" type-name
73 port-defn-3 => port-defn-2
74 port-defn-3 => port-defn-2 code-anno
75 component-defn => comp-kind "component" ident "{" comp-mem-seq "}"
76 comp-kind => "active"
77 comp-kind => "passive"
78 comp-kind => "queued"
79 comp-mem-seq =>
80 comp-mem-seq => comp-mem mem-sep comp-mem-seq
81 comp-mem-seq => include-spec mem-sep comp-mem-seq
82 comp-mem => lone-anno
83 comp-mem => enum-defn
84 comp-mem => struct-defn
85 comp-mem => int-port-spec
86 comp-mem => port-inst
87 comp-mem => port-match-spec
88 comp-mem => command-spec
89 comp-mem => event-spec
90 comp-mem => param-spec
91 comp-mem => record-spec
92 comp-mem => prod-cont-spec
93 comp-mem => tlm-chan-spec
94 comp-mem => stmach-defn
95 comp-mem => stmach-inst
96 port-inst => gen-port-inst-4
97 port-inst => spc-port-inst-3
98 gen-port-inst-0 => input-port-kind "input" "port" ident ":"
99 gen-port-inst-0 => "output" "port" ident ":"
100 gen-port-inst-1 => gen-port-inst-0
101 gen-port-inst-1 => gen-port-inst-0 "[" expr "]"
102 gen-port-inst-2 => gen-port-inst-1 qual-ident
103 gen-port-inst-2 => gen-port-inst-1 "serial"
104 gen-port-inst-3 => gen-port-inst-2
105 gen-port-inst-3 => gen-port-inst-2 "priority" expr
106 gen-port-inst-4 => gen-port-inst-3
107 gen-port-inst-4 => gen-port-inst-3 queue-full-beh
108 spc-port-inst-0 => spc-iport-kind "port" ident
109 spc-port-inst-0 => spc-oport-kind "port" ident
110 spc-port-inst-1 => spc-port-inst-0
111 spc-port-inst-1 => input-port-kind spc-port-inst-0
112 spc-port-inst-2 => spc-port-inst-1
113 spc-port-inst-2 => spc-port-inst-1 "priority" expr
114 spc-port-inst-3 => spc-port-inst-2
115 spc-port-inst-3 => spc-port-inst-2 queue-full-beh
116 int-port-spec => int-port-defn-3
117 int-port-defn-0 => "internal" "port" ident
118 int-port-defn-1 => int-port-defn-0
119 int-port-defn-1 => int-port-defn-0 "(" param-list ")"
120 int-port-defn-2 => int-port-defn-1
121 int-port-defn-2 => int-port-defn-1 "priority" expr
122 int-port-defn-3 => int-port-defn-2
123 int-port-defn-3 => int-port-defn-2 queue-full-beh
124 command-spec => cmd-spec-4
125 cmd-spec-0 => input-port-kind "command" ident
126 cmd-spec-1 => cmd-spec-0
127 cmd-spec-1 => cmd-spec-0 "(" param-list ")"
128 cmd-spec-2 => cmd-spec-1
129 cmd-spec-2 => cmd-spec-1 "opcode" expr
130 cmd-spec-3 => cmd-spec-2
131 cmd-spec-3 => cmd-spec-2 "priority" expr
132 cmd-spec-4 => cmd-spec-3
133 cmd-spec-4 => cmd-spec-3 queue-full-beh
134 spc-iport-kind => "command" "reg"
135 spc-iport-kind => "command" "resp"
136 spc-iport-kind => "event"
137 spc-iport-kind => "param" "get"
138 spc-iport-kind => "param" "set"
139 spc-iport-kind => "product" "get"
140 spc-iport-kind => "product" "request"
141 spc-iport-kind => "product" "send"
142 spc-iport-kind => "telemetry"
143 spc-iport-kind => "text" "event"
144 spc-iport-kind => "time" "get"
145 spc-oport-kind => "command" "recv"
146 spc-oport-kind => "product" "recv"
147 input-port-kind => "async"
148 input-port-kind => "guarded"
149 input-port-kind => "sync"
150 event-spec => event-spec-5
151 event-spec-0 => "event" ident
152 event-spec-1 => event-spec-0
153 event-spec-1 => event-spec-0 "(" param-list ")"
154 event-spec-2 => event-spec-1 "severity" severity
155 event-spec-3 => event-spec-2
156 event-spec-3 => event-spec-2 "id" expr
157 event-spec-4 => event-spec-3 "format" string
158 event-spec-5 => event-spec-4
159 event-spec-5 => event-spec-4 "throttle" expr
160 severity => "activity" "high"
161 severity => "activity" "low"
162 severity => "command"
163 severity => "diagnostic"
164 severity => "fatal"
165 severity => "warning" "high"
166 severity => "warning" "low"
167 param-spec => param-spec-4
168 param-spec-0 => "param" ident ":" type-name
169 param-spec-1 => param-spec-0
170 param-spec-1 => param-spec-0 "default" expr
171 param-spec-2 => param-spec-1
172 param-spec-2 => param-spec-1 "id" expr
173 param-spec-3 => param-spec-2
174 param-spec-3 => param-spec-2 "set" "opcode" expr
175 param-spec-4 => param-spec-3
176 param-spec-4 => param-spec-3 "save" "opcode" expr
177 tlm-chan-spec => tlm-chan-5
178 tlm-chan-0 => "telemetry" ident ":" type-name
179 tlm-chan-1 => tlm-chan-0
180 tlm-chan-1 => tlm-chan-0 "id" expr
181 tlm-chan-2 => tlm-chan-1
182 tlm-chan-2 => tlm-chan-1 "update" tlm-update
183 tlm-chan-3 => tlm-chan-2
184 tlm-chan-3 => tlm-chan-2 "format" string
185 tlm-chan-4 => tlm-chan-3
186 tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}"
187 tlm-chan-5 => tlm-chan-4
188 tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}"
189 tlm-update => "always"
190 tlm-update => "on" "change"
191 tlm-lim-seq =>
192 tlm-lim-seq => tlm-lim
193 tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq
194 tlm-lim => "red" expr
195 tlm-lim => "orange" expr
196 tlm-lim => "yellow" expr
197 record-spec => record-spec-2
198 record-spec-0 => "product" "record" ident ":" type-name
199 record-spec-1 => record-spec-0
200 record-spec-1 => record-spec-0 "array"
201 record-spec-2 => record-spec-1
202 record-spec-2 => record-spec-1 "id" expr
203 prod-cont-spec => cont-spec-2
204 cont-spec-0 => "product" "container" ident
205 cont-spec-1 => cont-spec-0
206 cont-spec-1 => cont-spec-0 "id" expr
207 cont-spec-2 => cont-spec-1
208 cont-spec-2 => cont-spec-1 "default" "priority" expr
209 comp-inst-defn => comp-inst-7
210 comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr
211 comp-inst-1 => comp-inst-0
212 comp-inst-1 => comp-inst-0 "type" string
213 comp-inst-2 => comp-inst-1
214 comp-inst-2 => comp-inst-1 "at" string
215 comp-inst-3 => comp-inst-2
216 comp-inst-3 => comp-inst-2 "queue" "size" expr
217 comp-inst-4 => comp-inst-3
218 comp-inst-4 => comp-inst-3 "stack" "size" expr
219 comp-inst-5 => comp-inst-4
220 comp-inst-5 => comp-inst-4 "priority" expr
221 comp-inst-6 => comp-inst-5
222 comp-inst-6 => comp-inst-5 "cpu" expr
223 comp-inst-7 => comp-inst-6
224 comp-inst-7 => comp-inst-6 "{" string "}"
225 topology-defn => "topology" ident "{" topo-mem-seq "}"
226 topo-mem-seq =>
227 topo-mem-seq => topo-mem
228 topo-mem-seq => include-spec
229 topo-mem-seq => topo-mem mem-sep topo-mem-seq
230 topo-mem-seq => include-spec mem-sep topo-mem-seq
231 topo-mem => lone-anno
232 topo-mem => comp-inst-spec
233 topo-mem => conn-graph-spec
234 topo-mem => tlm-pktset-spec
235 topo-mem => "import" qual-ident
236 comp-inst-spec => "instance" ident
237 comp-inst-spec => "private" "instance" ident
238 conn-graph-spec => "connections" ident "{" conn-seq "}"
239 conn-graph-spec => pattern-kind "connections" "instance" qual-ident
240 conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
241 pattern-kind => "command"
242 pattern-kind => "event"
243 pattern-kind => "health"
244 pattern-kind => "param"
245 pattern-kind => "telemetry"
246 pattern-kind => "time"
247 pattern-kind => "text" "event"
248 conn-seq =>
249 conn-seq => connection
250 conn-seq => connection elt-sep conn-seq
251 connection => conn-from "->" conn-to
252 connection => "unmatched" conn-from "->" conn-to
253 conn-from => qual-ident
254 conn-from => qual-ident "[" expr "]"
255 conn-to => qual-ident
256 conn-to => qual-ident "[" expr "]"
257 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
258 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
259 tlm-pktgrp-mem-seq =>
260 tlm-pktgrp-mem-seq => tlm-pkt-spec
261 tlm-pktgrp-mem-seq => include-spec
262 tlm-pktgrp-mem-seq => tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
263 tlm-pktgrp-mem-seq => include-spec elt-sep tlm-pktgrp-mem-seq
264 tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
265 tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
266 tlm-pkt-mem-seq =>
267 tlm-pkt-mem-seq => qual-ident
268 tlm-pkt-mem-seq => include-spec
269 tlm-pkt-mem-seq => qual-ident elt-sep tlm-pkt-mem-seq
270 tlm-pkt-mem-seq => include-spec elt-sep tlm-pkt-mem-seq
271 tlm-chan-id-seq => qual-ident-seq
272 param-list => param-list-1
273 param-list-1 =>
274 param-list-1 => formal-param
275 param-list-1 => formal-param elt-sep param-list-1
276 formal-param => formal-param-1
277 formal-param => formal-param-1 code-anno
278 formal-param-1 => ident ":" type-name
279 formal-param-1 => "ref" ident ":" type-name
280 queue-full-beh => queue-full-beh-1
281 queue-full-beh-1 => "assert"
282 queue-full-beh-1 => "block"
283 queue-full-beh-1 => "drop"
284 queue-full-beh-1 => "hook"
285 loc-spec => "locate" "instance" qual-ident "at" string
286 loc-spec => "locate" "component" qual-ident "at" string
287 loc-spec => "locate" "constant" qual-ident "at" string
288 loc-spec => "locate" "port" qual-ident "at" string
289 loc-spec => "locate" "state" "machine" qual-ident "at" string
290 loc-spec => "locate" "topology" qual-ident "at" string
291 loc-spec => "locate" "type" qual-ident "at" string
292 port-match-spec => "match" ident "with" ident
293 expr => add-expr
294 add-expr => mul-expr
295 add-expr => add-expr "+" mul-expr
296 add-expr => add-expr "-" mul-expr
297 mul-expr => unary-expr
298 mul-expr => mul-expr "*" unary-expr
299 mul-expr => mul-expr "/" unary-expr
300 unary-expr => prim-expr
301 unary-expr => "-" unary-expr
302 prim-expr => qual-ident
303 prim-expr => number
304 prim-expr => string
305 prim-expr => "[" expr-seq "]"
306 prim-expr => "{" struct-elt-seq "}"
307 prim-expr => "(" expr ")"
308 expr-seq => expr
309 expr-seq => expr elt-sep expr-seq
310 struct-elt-seq =>
311 struct-elt-seq => struct-elt
312 struct-elt-seq => struct-elt elt-sep struct-elt-seq
313 struct-elt => ident "=" expr
314 number => '$float
315 number => '$fixed
316 ident => '$ident
317 string => '$string
318 lone-anno => '$lone-anno
319 code-anno => code-anno-list
320 code-anno-list => '$code-anno
321 qual-ident => qual-ident-1
322 qual-ident-1 => ident
323 qual-ident-1 => qual-ident-1 "." ident
324 qual-ident-seq =>
325 qual-ident-seq => qual-ident
326 qual-ident-seq => qual-ident elt-sep qual-ident-seq
327 index => "[" expr "]"
328 type-name => qual-ident
329 type-name => "I8"
330 type-name => "U8"
331 type-name => "I16"
332 type-name => "U16"
333 type-name => "I32"
334 type-name => "U32"
335 type-name => "I64"
336 type-name => "U64"
337 type-name => "F32"
338 type-name => "F64"
339 type-name => "bool"
340 type-name => "string"
341 type-name => "string" "size" expr
342 stmach-inst => stmach-inst-2
343 stmach-inst => stmach-inst-2 code-anno
344 stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident
345 stmach-inst-1 => stmach-inst-0
346 stmach-inst-1 => stmach-inst-0 "priority" expr
347 stmach-inst-2 => stmach-inst-1
348 stmach-inst-2 => stmach-inst-1 queue-full-beh
349 stmach-defn => "state" "machine" ident
350 stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}"
351 stmach-mem-seq =>
352 stmach-mem-seq => stmach-mem
353 stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq
354 stmach-mem => lone-anno
355 stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
356 stmach-mem => "action" ident
357 stmach-mem => "action" ident ":" type-name
358 stmach-mem => "guard" ident
359 stmach-mem => "guard" ident ":" type-name
360 stmach-mem => "signal" ident
361 stmach-mem => "signal" ident ":" type-name
362 stmach-mem => "initial" trans-expr
363 stmach-mem => state-defn
364 state-defn => "state" ident
365 state-defn => "state" ident "{" state-defn-mem-seq "}"
366 state-defn-mem-seq =>
367 state-defn-mem-seq => state-defn-mem
368 state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq
369 state-defn-mem => lone-anno
370 state-defn-mem => "initial" trans-expr
371 state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
372 state-defn-mem => state-defn
373 state-defn-mem => state-trans-spec
374 state-defn-mem => "entry" do-expr
375 state-defn-mem => "exit" do-expr
376 state-trans-spec => st-tran-spec-2
377 st-tran-spec-0 => "on" ident
378 st-tran-spec-1 => st-tran-spec-0
379 st-tran-spec-1 => st-tran-spec-0 "if" ident
380 st-tran-spec-2 => st-tran-spec-1 trans-or-do
381 trans-expr => trans-expr-1
382 trans-expr-0 => "enter" qual-ident
383 trans-expr-1 => trans-expr-0
384 trans-expr-1 => do-expr trans-expr-0
385 do-expr => "do" "{" action-seq "}"
386 action-seq =>
387 action-seq => ident
388 action-seq => ident elt-sep action-seq
389 trans-or-do => trans-expr
390 trans-or-do => do-expr

0:	$start => . translation-unit
	translation-unit => . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem
	module-mem-seq => . include-spec
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 53
		translation-unit => shift 54
		$default => reduce 9

1:	comp-inst-0 => "instance" . ident ":" qual-ident "base" "id" expr
	ident => . '$ident
		'$ident => shift 60
		ident => shift 96

2:	comp-inst-1 => comp-inst-0 . "type" string
	comp-inst-1 => comp-inst-0 .
		"type" => shift 95
		"\n" => reduce 211
		$default => reduce 211

3:	comp-inst-2 => comp-inst-1 . "at" string
	comp-inst-2 => comp-inst-1 .
		"at" => shift 94
		"\n" => reduce 213
		$default => reduce 213

4:	comp-inst-3 => comp-inst-2 . "queue" "size" expr
	comp-inst-3 => comp-inst-2 .
		"queue" => shift 93
		"\n" => reduce 215
		$default => reduce 215

5:	enum-defn-0 => "enum" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 92

6:	comp-inst-4 => comp-inst-3 . "stack" "size" expr
	comp-inst-4 => comp-inst-3 .
		"stack" => shift 91
		"\n" => reduce 217
		$default => reduce 217

7:	port-defn-0 => "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 90

8:	enum-defn-1 => enum-defn-0 . ":" type-name
	enum-defn-1 => enum-defn-0 .
		":" => shift 89
		$default => reduce 36

9:	comp-inst-5 => comp-inst-4 . "priority" expr
	comp-inst-5 => comp-inst-4 .
		"priority" => shift 88
		"\n" => reduce 219
		$default => reduce 219

10:	port-defn-1 => port-defn-0 . "(" param-list ")"
	port-defn-1 => port-defn-0 .
		"(" => shift 87
		"\n" => reduce 69
		'$code-anno => reduce 69
		$default => reduce 69

11:	struct-defn-0 => "struct" . ident "{" struct-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 86

12:	enum-defn-2 => enum-defn-1 . "{" enum-mem-seq "}"
		"{" => shift 85

13:	comp-inst-6 => comp-inst-5 . "cpu" expr
	comp-inst-6 => comp-inst-5 .
		"cpu" => shift 84
		"\n" => reduce 221
		$default => reduce 221

14:	port-defn-2 => port-defn-1 . "->" type-name
	port-defn-2 => port-defn-1 .
		"->" => shift 83
		'$code-anno => reduce 71
		"\n" => reduce 71
		$default => reduce 71

15:	struct-defn-1 => struct-defn-0 . "default" expr
	struct-defn-1 => struct-defn-0 .
		"default" => shift 82
		'$code-anno => reduce 52
		"\n" => reduce 52
		$default => reduce 52

16:	enum-defn-3 => enum-defn-2 . "default" expr
	enum-defn-3 => enum-defn-2 .
		"default" => shift 81
		'$code-anno => reduce 39
		"\n" => reduce 39
		$default => reduce 39

17:	comp-inst-7 => comp-inst-6 . "{" string "}"
	comp-inst-7 => comp-inst-6 .
		"{" => shift 80
		"\n" => reduce 223
		$default => reduce 223

18:	comp-kind => "queued" .
		$default => reduce 78

19:	comp-kind => "passive" .
		$default => reduce 77

20:	comp-kind => "active" .
		$default => reduce 76

21:	port-defn-3 => port-defn-2 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	port-defn-3 => port-defn-2 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 79
		"\n" => reduce 73
		$default => reduce 73

22:	struct-defn-2 => struct-defn-1 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	struct-defn-2 => struct-defn-1 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 78
		"\n" => reduce 54
		$default => reduce 54

23:	enum-defn-4 => enum-defn-3 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	enum-defn-4 => enum-defn-3 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 77
		"\n" => reduce 41
		$default => reduce 41

24:	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 74

25:	lone-anno => '$lone-anno .
		"\n" => reduce 318
		$default => reduce 318

26:	loc-spec => "locate" . "type" qual-ident "at" string
	loc-spec => "locate" . "topology" qual-ident "at" string
	loc-spec => "locate" . "state" "machine" qual-ident "at" string
	loc-spec => "locate" . "port" qual-ident "at" string
	loc-spec => "locate" . "constant" qual-ident "at" string
	loc-spec => "locate" . "component" qual-ident "at" string
	loc-spec => "locate" . "instance" qual-ident "at" string
		"instance" => shift 67
		"component" => shift 68
		"constant" => shift 69
		"port" => shift 70
		"state" => shift 71
		"topology" => shift 72
		"type" => shift 73

27:	topology-defn => "topology" . ident "{" topo-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 66

28:	comp-inst-defn => comp-inst-7 .
		"\n" => reduce 209
		$default => reduce 209

29:	component-defn => comp-kind . "component" ident "{" comp-mem-seq "}"
		"component" => shift 65

30:	port-defn => port-defn-3 .
		"\n" => reduce 67
		$default => reduce 67

31:	struct-defn => struct-defn-2 .
		"\n" => reduce 50
		$default => reduce 50

32:	enum-defn => enum-defn-4 .
		"\n" => reduce 34
		$default => reduce 34

33:	array-defn => "array" . ident "=" index ident code-anno
	ident => . '$ident
	array-defn => "array" . ident "=" index ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 64

34:	abs-type-defn => "type" . ident code-anno
	ident => . '$ident
	abs-type-defn => "type" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 63

35:	const-defn => "constant" . ident "=" expr code-anno
	ident => . '$ident
	const-defn => "constant" . ident "=" expr
	ident => . '$ident
		'$ident => shift 60
		ident => shift 62

36:	module-defn => "module" . ident "{" module-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 61

37:	mod-mem => stmach-defn .
		"\n" => reduce 26
		$default => reduce 26

38:	mod-mem => enum-defn .
		"\n" => reduce 25
		$default => reduce 25

39:	mod-mem => array-defn .
		"\n" => reduce 24
		$default => reduce 24

40:	mod-mem => abs-type-defn .
		"\n" => reduce 23
		$default => reduce 23

41:	mod-mem => loc-spec .
		"\n" => reduce 22
		$default => reduce 22

42:	mod-mem => struct-defn .
		"\n" => reduce 21
		$default => reduce 21

43:	mod-mem => port-defn .
		"\n" => reduce 20
		$default => reduce 20

44:	mod-mem => module-defn .
		"\n" => reduce 19
		$default => reduce 19

45:	mod-mem => const-defn .
		"\n" => reduce 18
		$default => reduce 18

46:	mod-mem => topology-defn .
		"\n" => reduce 17
		$default => reduce 17

47:	mod-mem => comp-inst-defn .
		"\n" => reduce 16
		$default => reduce 16

48:	mod-mem => component-defn .
		"\n" => reduce 15
		$default => reduce 15

49:	mod-mem => lone-anno .
		"\n" => reduce 14
		$default => reduce 14

50:	include-spec => "include" . '$string
		'$string => shift 59

51:	module-mem-seq => include-spec . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	module-mem-seq => include-spec .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 58
		$default => reduce 11

52:	module-mem-seq => mod-mem . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	module-mem-seq => mod-mem .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 57
		$default => reduce 10

53:	translation-unit => module-mem-seq .
		$default => reduce 8

54:	$start => translation-unit .
		'$end => accept 0

55:	mem-sep => "\n" .
		'$lone-anno => reduce 5
		"\n" => reduce 5
		$default => reduce 5

56:	mem-sep => ";" .
		'$lone-anno => reduce 4
		"\n" => reduce 4
		$default => reduce 4

57:	mem-sep => mem-sep . "\n"
	module-mem-seq => mod-mem mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem
	module-mem-seq => . include-spec
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 164
		"\n" => shift 163
		$default => reduce 9

58:	mem-sep => mem-sep . "\n"
	module-mem-seq => include-spec mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem
	module-mem-seq => . include-spec
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 162
		"\n" => shift 163
		$default => reduce 9

59:	include-spec => "include" '$string .
		"\n" => reduce 7
		$default => reduce 7

60:	ident => '$ident .
		'$code-anno => reduce 316
		"\n" => reduce 316
		$default => reduce 316

61:	module-defn => "module" ident . "{" module-mem-seq "}"
		"{" => shift 161

62:	const-defn => "constant" ident . "=" expr
	const-defn => "constant" ident . "=" expr code-anno
		"=" => shift 160

63:	abs-type-defn => "type" ident .
	abs-type-defn => "type" ident . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 159
		"\n" => reduce 30
		$default => reduce 30

64:	array-defn => "array" ident . "=" index ident
	array-defn => "array" ident . "=" index ident code-anno
		"=" => shift 158

65:	component-defn => comp-kind "component" . ident "{" comp-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 157

66:	topology-defn => "topology" ident . "{" topo-mem-seq "}"
		"{" => shift 156

67:	loc-spec => "locate" "instance" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 155

68:	loc-spec => "locate" "component" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 154

69:	loc-spec => "locate" "constant" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 153

70:	loc-spec => "locate" "port" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 152

71:	loc-spec => "locate" "state" . "machine" qual-ident "at" string
		"machine" => shift 151

72:	loc-spec => "locate" "topology" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 150

73:	loc-spec => "locate" "type" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 149

74:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 148

75:	code-anno-list => '$code-anno .
		"\n" => reduce 320
		$default => reduce 320

76:	code-anno => code-anno-list .
		"\n" => reduce 319
		$default => reduce 319

77:	enum-defn-4 => enum-defn-3 code-anno .
		"\n" => reduce 42
		$default => reduce 42

78:	struct-defn-2 => struct-defn-1 code-anno .
		"\n" => reduce 55
		$default => reduce 55

79:	port-defn-3 => port-defn-2 code-anno .
		"\n" => reduce 74
		$default => reduce 74

80:	comp-inst-7 => comp-inst-6 "{" . string "}"
	string => . '$string
		'$string => shift 98
		string => shift 147

81:	enum-defn-3 => enum-defn-2 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 146

82:	struct-defn-1 => struct-defn-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 145

83:	port-defn-2 => port-defn-1 "->" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 144

84:	comp-inst-6 => comp-inst-5 "cpu" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 143

85:	enum-defn-2 => enum-defn-1 "{" . enum-mem-seq "}"
	enum-mem-seq => .
	enum-mem-seq => . enum-mem
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident code-anno
	enum-mem => . ident "=" expr
	enum-mem => . ident "=" expr code-anno
	ident => . '$ident
		'$ident => shift 60
		ident => shift 140
		enum-mem => shift 141
		enum-mem-seq => shift 142
		$default => reduce 43

86:	struct-defn-0 => "struct" ident . "{" struct-mem-seq "}"
		"{" => shift 139

87:	port-defn-1 => port-defn-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 138
		$default => reduce 273

88:	comp-inst-5 => comp-inst-4 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 132

89:	enum-defn-1 => enum-defn-0 ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 118

90:	port-defn-0 => "port" ident .
		'$code-anno => reduce 68
		"\n" => reduce 68
		$default => reduce 68

91:	comp-inst-4 => comp-inst-3 "stack" . "size" expr
		"size" => shift 102

92:	enum-defn-0 => "enum" ident .
		$default => reduce 35

93:	comp-inst-3 => comp-inst-2 "queue" . "size" expr
		"size" => shift 101

94:	comp-inst-2 => comp-inst-1 "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 100

95:	comp-inst-1 => comp-inst-0 "type" . string
	string => . '$string
		'$string => shift 98
		string => shift 99

96:	comp-inst-0 => "instance" ident . ":" qual-ident "base" "id" expr
		":" => shift 97

97:	comp-inst-0 => "instance" ident ":" . qual-ident "base" "id" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 231

98:	string => '$string .
		"\n" => reduce 317
		'$code-anno => reduce 317
		$default => reduce 317

99:	comp-inst-1 => comp-inst-0 "type" string .
		"\n" => reduce 212
		$default => reduce 212

100:	comp-inst-2 => comp-inst-1 "at" string .
		"\n" => reduce 214
		$default => reduce 214

101:	comp-inst-3 => comp-inst-2 "queue" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 230

102:	comp-inst-4 => comp-inst-3 "stack" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 229

103:	qual-ident-1 => ident .
		"\n" => reduce 322
		'$code-anno => reduce 322
		$default => reduce 322

104:	qual-ident-1 => qual-ident-1 . "." ident
	qual-ident => qual-ident-1 .
		"." => shift 228
		"\n" => reduce 321
		'$code-anno => reduce 321
		$default => reduce 321

105:	type-name => "string" . "size" expr
	type-name => "string" .
		"size" => shift 227
		'$code-anno => reduce 340
		"\n" => reduce 340
		$default => reduce 340

106:	type-name => "bool" .
		'$code-anno => reduce 339
		"\n" => reduce 339
		$default => reduce 339

107:	type-name => "F64" .
		'$code-anno => reduce 338
		"\n" => reduce 338
		$default => reduce 338

108:	type-name => "F32" .
		'$code-anno => reduce 337
		"\n" => reduce 337
		$default => reduce 337

109:	type-name => "U64" .
		'$code-anno => reduce 336
		"\n" => reduce 336
		$default => reduce 336

110:	type-name => "I64" .
		'$code-anno => reduce 335
		"\n" => reduce 335
		$default => reduce 335

111:	type-name => "U32" .
		'$code-anno => reduce 334
		"\n" => reduce 334
		$default => reduce 334

112:	type-name => "I32" .
		'$code-anno => reduce 333
		"\n" => reduce 333
		$default => reduce 333

113:	type-name => "U16" .
		'$code-anno => reduce 332
		"\n" => reduce 332
		$default => reduce 332

114:	type-name => "I16" .
		'$code-anno => reduce 331
		"\n" => reduce 331
		$default => reduce 331

115:	type-name => "U8" .
		'$code-anno => reduce 330
		"\n" => reduce 330
		$default => reduce 330

116:	type-name => "I8" .
		'$code-anno => reduce 329
		"\n" => reduce 329
		$default => reduce 329

117:	type-name => qual-ident .
		'$code-anno => reduce 328
		"\n" => reduce 328
		$default => reduce 328

118:	enum-defn-1 => enum-defn-0 ":" type-name .
		$default => reduce 37

119:	number => '$fixed .
		"\n" => reduce 315
		'$code-anno => reduce 315
		$default => reduce 315

120:	number => '$float .
		"\n" => reduce 314
		'$code-anno => reduce 314
		$default => reduce 314

121:	prim-expr => "(" . expr ")"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 226

122:	prim-expr => "{" . struct-elt-seq "}"
	struct-elt-seq => .
	struct-elt-seq => . struct-elt
	struct-elt-seq => . struct-elt elt-sep struct-elt-seq
	struct-elt => . ident "=" expr
	ident => . '$ident
		'$ident => shift 60
		ident => shift 223
		struct-elt => shift 224
		struct-elt-seq => shift 225
		$default => reduce 310

123:	prim-expr => "[" . expr-seq "]"
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 221
		expr-seq => shift 222

124:	prim-expr => string .
		"\n" => reduce 304
		'$code-anno => reduce 304
		$default => reduce 304

125:	prim-expr => number .
		"\n" => reduce 303
		'$code-anno => reduce 303
		$default => reduce 303

126:	prim-expr => qual-ident .
		"\n" => reduce 302
		'$code-anno => reduce 302
		$default => reduce 302

127:	unary-expr => "-" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 220

128:	unary-expr => prim-expr .
		"\n" => reduce 300
		'$code-anno => reduce 300
		$default => reduce 300

129:	mul-expr => unary-expr .
		"\n" => reduce 297
		'$code-anno => reduce 297
		$default => reduce 297

130:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => mul-expr .
		"*" => shift 218
		"/" => shift 219
		"\n" => reduce 294
		'$code-anno => reduce 294
		$default => reduce 294

131:	add-expr => add-expr . "-" mul-expr
	add-expr => add-expr . "+" mul-expr
	expr => add-expr .
		"+" => shift 216
		"-" => shift 217
		"\n" => reduce 293
		'$code-anno => reduce 293
		$default => reduce 293

132:	comp-inst-5 => comp-inst-4 "priority" expr .
		"\n" => reduce 220
		$default => reduce 220

133:	formal-param-1 => "ref" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		ident => shift 215

134:	formal-param-1 => ident . ":" type-name
		":" => shift 214

135:	formal-param => formal-param-1 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	formal-param => formal-param-1 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 213
		"\n" => reduce 276
		$default => reduce 276

136:	param-list-1 => formal-param . elt-sep param-list-1
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	param-list-1 => formal-param .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 212
		$default => reduce 274

137:	param-list => param-list-1 .
		$default => reduce 272

138:	port-defn-1 => port-defn-0 "(" param-list . ")"
		")" => shift 211

139:	struct-defn-0 => "struct" ident "{" . struct-mem-seq "}"
	struct-mem-seq => .
	struct-mem-seq => . struct-mem
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem => . struct-mem-3 code-anno
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 204
		struct-mem-0 => shift 205
		struct-mem-1 => shift 206
		struct-mem-2 => shift 207
		struct-mem-3 => shift 208
		struct-mem => shift 209
		struct-mem-seq => shift 210
		$default => reduce 56

140:	enum-mem => ident . "=" expr code-anno
	enum-mem => ident . "=" expr
	enum-mem => ident . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	enum-mem => ident .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 202
		"=" => shift 203
		"\n" => reduce 46
		$default => reduce 46

141:	enum-mem-seq => enum-mem . elt-sep enum-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	enum-mem-seq => enum-mem .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 201
		$default => reduce 44

142:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq . "}"
		"}" => shift 198

143:	comp-inst-6 => comp-inst-5 "cpu" expr .
		"\n" => reduce 222
		$default => reduce 222

144:	port-defn-2 => port-defn-1 "->" type-name .
		'$code-anno => reduce 72
		"\n" => reduce 72
		$default => reduce 72

145:	struct-defn-1 => struct-defn-0 "default" expr .
		'$code-anno => reduce 53
		"\n" => reduce 53
		$default => reduce 53

146:	enum-defn-3 => enum-defn-2 "default" expr .
		'$code-anno => reduce 40
		"\n" => reduce 40
		$default => reduce 40

147:	comp-inst-7 => comp-inst-6 "{" string . "}"
		"}" => shift 197

148:	stmach-defn => "state" "machine" ident . "{" stmach-mem-seq "}"
	stmach-defn => "state" "machine" ident .
		"{" => shift 196
		"\n" => reduce 349
		$default => reduce 349

149:	loc-spec => "locate" "type" qual-ident . "at" string
		"at" => shift 195

150:	loc-spec => "locate" "topology" qual-ident . "at" string
		"at" => shift 194

151:	loc-spec => "locate" "state" "machine" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 193

152:	loc-spec => "locate" "port" qual-ident . "at" string
		"at" => shift 192

153:	loc-spec => "locate" "constant" qual-ident . "at" string
		"at" => shift 191

154:	loc-spec => "locate" "component" qual-ident . "at" string
		"at" => shift 190

155:	loc-spec => "locate" "instance" qual-ident . "at" string
		"at" => shift 189

156:	topology-defn => "topology" ident "{" . topo-mem-seq "}"
	topo-mem-seq => .
	topo-mem-seq => . topo-mem
	topo-mem-seq => . include-spec
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem-seq => . include-spec mem-sep topo-mem-seq
	include-spec => . "include" '$string
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 170
		"time" => shift 171
		"param" => shift 172
		"health" => shift 173
		"event" => shift 174
		"command" => shift 175
		'$lone-anno => shift 25
		"telemetry" => shift 176
		pattern-kind => shift 177
		"connections" => shift 178
		"private" => shift 179
		"instance" => shift 180
		"import" => shift 181
		tlm-pktset-spec => shift 182
		conn-graph-spec => shift 183
		comp-inst-spec => shift 184
		lone-anno => shift 185
		"include" => shift 50
		include-spec => shift 186
		topo-mem => shift 187
		topo-mem-seq => shift 188
		$default => reduce 226

157:	component-defn => comp-kind "component" ident . "{" comp-mem-seq "}"
		"{" => shift 169

158:	array-defn => "array" ident "=" . index ident code-anno
	index => . "[" expr "]"
	array-defn => "array" ident "=" . index ident
	index => . "[" expr "]"
		"[" => shift 167
		index => shift 168

159:	abs-type-defn => "type" ident code-anno .
		"\n" => reduce 31
		$default => reduce 31

160:	const-defn => "constant" ident "=" . expr code-anno
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	const-defn => "constant" ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 166

161:	module-defn => "module" ident "{" . module-mem-seq "}"
	module-mem-seq => .
	module-mem-seq => . mod-mem
	module-mem-seq => . include-spec
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 165
		$default => reduce 9

162:	module-mem-seq => include-spec mem-sep module-mem-seq .
		$default => reduce 13

163:	mem-sep => mem-sep "\n" .
		'$lone-anno => reduce 6
		"\n" => reduce 6
		$default => reduce 6

164:	module-mem-seq => mod-mem mem-sep module-mem-seq .
		$default => reduce 12

165:	module-defn => "module" ident "{" module-mem-seq . "}"
		"}" => shift 366

166:	const-defn => "constant" ident "=" expr .
	const-defn => "constant" ident "=" expr . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 365
		"\n" => reduce 28
		$default => reduce 28

167:	index => "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 364

168:	array-defn => "array" ident "=" index . ident
	ident => . '$ident
	array-defn => "array" ident "=" index . ident code-anno
	ident => . '$ident
		'$ident => shift 60
		ident => shift 363

169:	component-defn => comp-kind "component" ident "{" . comp-mem-seq "}"
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem-seq => . include-spec mem-sep comp-mem-seq
	include-spec => . "include" '$string
	comp-mem => . lone-anno
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-iport-kind "port" ident
	spc-port-inst-0 => . spc-oport-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	enum-defn-0 => . "enum" ident
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-iport-kind => . "command" "reg"
	spc-iport-kind => . "command" "resp"
	spc-iport-kind => . "event"
	spc-iport-kind => . "param" "get"
	spc-iport-kind => . "param" "set"
	spc-iport-kind => . "product" "get"
	spc-iport-kind => . "product" "request"
	spc-iport-kind => . "product" "send"
	spc-iport-kind => . "telemetry"
	spc-iport-kind => . "text" "event"
	spc-iport-kind => . "time" "get"
	spc-oport-kind => . "command" "recv"
	spc-oport-kind => . "product" "recv"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 285
		event-spec-0 => shift 286
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 289
		"param" => shift 290
		"event" => shift 291
		"command" => shift 292
		"output" => shift 293
		"enum" => shift 5
		tlm-chan-1 => shift 294
		param-spec-0 => shift 295
		event-spec-1 => shift 296
		"sync" => shift 297
		"guarded" => shift 298
		"async" => shift 299
		cmd-spec-0 => shift 300
		"internal" => shift 301
		spc-oport-kind => shift 302
		spc-iport-kind => shift 303
		gen-port-inst-0 => shift 304
		enum-defn-0 => shift 8
		"product" => shift 305
		tlm-chan-2 => shift 306
		param-spec-1 => shift 307
		event-spec-2 => shift 308
		cmd-spec-1 => shift 309
		int-port-defn-0 => shift 310
		input-port-kind => shift 311
		spc-port-inst-0 => shift 312
		gen-port-inst-1 => shift 313
		"struct" => shift 11
		enum-defn-1 => shift 12
		stmach-inst-0 => shift 314
		cont-spec-0 => shift 315
		record-spec-0 => shift 316
		tlm-chan-3 => shift 317
		param-spec-2 => shift 318
		event-spec-3 => shift 319
		cmd-spec-2 => shift 320
		int-port-defn-1 => shift 321
		spc-port-inst-1 => shift 322
		gen-port-inst-2 => shift 323
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		stmach-inst-1 => shift 324
		cont-spec-1 => shift 325
		record-spec-1 => shift 326
		tlm-chan-4 => shift 327
		param-spec-3 => shift 328
		event-spec-4 => shift 329
		cmd-spec-3 => shift 330
		int-port-defn-2 => shift 331
		spc-port-inst-2 => shift 332
		gen-port-inst-3 => shift 333
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 334
		stmach-inst-2 => shift 335
		'$lone-anno => shift 25
		"match" => shift 336
		cont-spec-2 => shift 337
		record-spec-2 => shift 338
		tlm-chan-5 => shift 339
		param-spec-4 => shift 340
		event-spec-5 => shift 341
		cmd-spec-4 => shift 342
		int-port-defn-3 => shift 343
		spc-port-inst-3 => shift 344
		gen-port-inst-4 => shift 345
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		stmach-inst => shift 346
		stmach-defn => shift 347
		tlm-chan-spec => shift 348
		prod-cont-spec => shift 349
		record-spec => shift 350
		param-spec => shift 351
		event-spec => shift 352
		command-spec => shift 353
		port-match-spec => shift 354
		port-inst => shift 355
		int-port-spec => shift 356
		struct-defn => shift 357
		enum-defn => shift 358
		lone-anno => shift 359
		"include" => shift 50
		include-spec => shift 360
		comp-mem => shift 361
		comp-mem-seq => shift 362
		$default => reduce 79

170:	pattern-kind => "text" . "event"
		"event" => shift 284

171:	pattern-kind => "time" .
		$default => reduce 246

172:	pattern-kind => "param" .
		$default => reduce 244

173:	pattern-kind => "health" .
		$default => reduce 243

174:	pattern-kind => "event" .
		$default => reduce 242

175:	pattern-kind => "command" .
		$default => reduce 241

176:	pattern-kind => "telemetry" .
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}"
		"packets" => shift 283
		$default => reduce 245

177:	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident "{" qual-ident-seq "}"
	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident
		"connections" => shift 282

178:	conn-graph-spec => "connections" . ident "{" conn-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 281

179:	comp-inst-spec => "private" . "instance" ident
		"instance" => shift 280

180:	comp-inst-spec => "instance" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 279

181:	topo-mem => "import" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 278

182:	topo-mem => tlm-pktset-spec .
		"\n" => reduce 234
		$default => reduce 234

183:	topo-mem => conn-graph-spec .
		"\n" => reduce 233
		$default => reduce 233

184:	topo-mem => comp-inst-spec .
		"\n" => reduce 232
		$default => reduce 232

185:	topo-mem => lone-anno .
		"\n" => reduce 231
		$default => reduce 231

186:	topo-mem-seq => include-spec . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	topo-mem-seq => include-spec .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 277
		$default => reduce 228

187:	topo-mem-seq => topo-mem . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	topo-mem-seq => topo-mem .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 276
		$default => reduce 227

188:	topology-defn => "topology" ident "{" topo-mem-seq . "}"
		"}" => shift 275

189:	loc-spec => "locate" "instance" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 274

190:	loc-spec => "locate" "component" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 273

191:	loc-spec => "locate" "constant" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 272

192:	loc-spec => "locate" "port" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 271

193:	loc-spec => "locate" "state" "machine" qual-ident . "at" string
		"at" => shift 270

194:	loc-spec => "locate" "topology" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 269

195:	loc-spec => "locate" "type" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 268

196:	stmach-defn => "state" "machine" ident "{" . stmach-mem-seq "}"
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . lone-anno
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 258
		'$lone-anno => shift 25
		state-defn => shift 259
		"initial" => shift 260
		"signal" => shift 261
		"guard" => shift 262
		"action" => shift 263
		"choice" => shift 264
		lone-anno => shift 265
		stmach-mem => shift 266
		stmach-mem-seq => shift 267
		$default => reduce 351

197:	comp-inst-7 => comp-inst-6 "{" string "}" .
		"\n" => reduce 224
		$default => reduce 224

198:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}" .
		"\n" => reduce 38
		'$code-anno => reduce 38
		$default => reduce 38

199:	elt-sep => "\n" .
		"\n" => reduce 2
		$default => reduce 2

200:	elt-sep => "," .
		"\n" => reduce 1
		$default => reduce 1

201:	elt-sep => elt-sep . "\n"
	enum-mem-seq => enum-mem elt-sep . enum-mem-seq
	enum-mem-seq => .
	enum-mem-seq => . enum-mem
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident code-anno
	enum-mem => . ident "=" expr
	enum-mem => . ident "=" expr code-anno
	ident => . '$ident
		'$ident => shift 60
		ident => shift 140
		enum-mem => shift 141
		enum-mem-seq => shift 257
		"\n" => shift 248
		$default => reduce 43

202:	enum-mem => ident code-anno .
		"\n" => reduce 47
		$default => reduce 47

203:	enum-mem => ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	enum-mem => ident "=" . expr code-anno
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 256

204:	struct-mem-0 => ident . ":"
		":" => shift 255

205:	struct-mem-1 => struct-mem-0 . "[" expr "]"
	struct-mem-1 => struct-mem-0 .
		"[" => shift 254
		$default => reduce 62

206:	struct-mem-2 => struct-mem-1 . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 253

207:	struct-mem-3 => struct-mem-2 . "format" string
	struct-mem-3 => struct-mem-2 .
		"format" => shift 252
		'$code-anno => reduce 65
		"\n" => reduce 65
		$default => reduce 65

208:	struct-mem => struct-mem-3 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	struct-mem => struct-mem-3 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 251
		"\n" => reduce 59
		$default => reduce 59

209:	struct-mem-seq => struct-mem . mem-sep struct-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	struct-mem-seq => struct-mem .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 250
		$default => reduce 57

210:	struct-defn-0 => "struct" ident "{" struct-mem-seq . "}"
		"}" => shift 249

211:	port-defn-1 => port-defn-0 "(" param-list ")" .
		"\n" => reduce 70
		'$code-anno => reduce 70
		$default => reduce 70

212:	elt-sep => elt-sep . "\n"
	param-list-1 => formal-param elt-sep . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 247
		"\n" => shift 248
		$default => reduce 273

213:	formal-param => formal-param-1 code-anno .
		"\n" => reduce 277
		$default => reduce 277

214:	formal-param-1 => ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 246

215:	formal-param-1 => "ref" ident . ":" type-name
		":" => shift 245

216:	add-expr => add-expr "+" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 244

217:	add-expr => add-expr "-" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 243

218:	mul-expr => mul-expr "*" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 242

219:	mul-expr => mul-expr "/" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 241

220:	unary-expr => "-" unary-expr .
		"\n" => reduce 301
		'$code-anno => reduce 301
		$default => reduce 301

221:	expr-seq => expr . elt-sep expr-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	expr-seq => expr .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 240
		$default => reduce 308

222:	prim-expr => "[" expr-seq . "]"
		"]" => shift 239

223:	struct-elt => ident . "=" expr
		"=" => shift 238

224:	struct-elt-seq => struct-elt . elt-sep struct-elt-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	struct-elt-seq => struct-elt .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 237
		$default => reduce 311

225:	prim-expr => "{" struct-elt-seq . "}"
		"}" => shift 236

226:	prim-expr => "(" expr . ")"
		")" => shift 235

227:	type-name => "string" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 234

228:	qual-ident-1 => qual-ident-1 "." . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 233

229:	comp-inst-4 => comp-inst-3 "stack" "size" expr .
		"\n" => reduce 218
		$default => reduce 218

230:	comp-inst-3 => comp-inst-2 "queue" "size" expr .
		"\n" => reduce 216
		$default => reduce 216

231:	comp-inst-0 => "instance" ident ":" qual-ident . "base" "id" expr
		"base" => shift 232

232:	comp-inst-0 => "instance" ident ":" qual-ident "base" . "id" expr
		"id" => shift 469

233:	qual-ident-1 => qual-ident-1 "." ident .
		"\n" => reduce 323
		'$code-anno => reduce 323
		$default => reduce 323

234:	type-name => "string" "size" expr .
		'$code-anno => reduce 341
		"\n" => reduce 341
		$default => reduce 341

235:	prim-expr => "(" expr ")" .
		"\n" => reduce 307
		'$code-anno => reduce 307
		$default => reduce 307

236:	prim-expr => "{" struct-elt-seq "}" .
		"\n" => reduce 306
		'$code-anno => reduce 306
		$default => reduce 306

237:	elt-sep => elt-sep . "\n"
	struct-elt-seq => struct-elt elt-sep . struct-elt-seq
	struct-elt-seq => .
	struct-elt-seq => . struct-elt
	struct-elt-seq => . struct-elt elt-sep struct-elt-seq
	struct-elt => . ident "=" expr
	ident => . '$ident
		'$ident => shift 60
		ident => shift 223
		struct-elt => shift 224
		struct-elt-seq => shift 468
		"\n" => shift 248
		$default => reduce 310

238:	struct-elt => ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 467

239:	prim-expr => "[" expr-seq "]" .
		"\n" => reduce 305
		'$code-anno => reduce 305
		$default => reduce 305

240:	elt-sep => elt-sep . "\n"
	expr-seq => expr elt-sep . expr-seq
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 221
		expr-seq => shift 466
		"\n" => shift 248

241:	mul-expr => mul-expr "/" unary-expr .
		"\n" => reduce 299
		'$code-anno => reduce 299
		$default => reduce 299

242:	mul-expr => mul-expr "*" unary-expr .
		"\n" => reduce 298
		'$code-anno => reduce 298
		$default => reduce 298

243:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "-" mul-expr .
		"*" => shift 218
		"/" => shift 219
		"\n" => reduce 296
		'$code-anno => reduce 296
		$default => reduce 296

244:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "+" mul-expr .
		"*" => shift 218
		"/" => shift 219
		"\n" => reduce 295
		'$code-anno => reduce 295
		$default => reduce 295

245:	formal-param-1 => "ref" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 465

246:	formal-param-1 => ident ":" type-name .
		'$code-anno => reduce 278
		"\n" => reduce 278
		$default => reduce 278

247:	param-list-1 => formal-param elt-sep param-list-1 .
		$default => reduce 275

248:	elt-sep => elt-sep "\n" .
		"\n" => reduce 3
		$default => reduce 3

249:	struct-defn-0 => "struct" ident "{" struct-mem-seq "}" .
		"\n" => reduce 51
		'$code-anno => reduce 51
		$default => reduce 51

250:	mem-sep => mem-sep . "\n"
	struct-mem-seq => struct-mem mem-sep . struct-mem-seq
	struct-mem-seq => .
	struct-mem-seq => . struct-mem
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem => . struct-mem-3 code-anno
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 204
		struct-mem-0 => shift 205
		struct-mem-1 => shift 206
		struct-mem-2 => shift 207
		struct-mem-3 => shift 208
		struct-mem => shift 209
		struct-mem-seq => shift 464
		"\n" => shift 163
		$default => reduce 56

251:	struct-mem => struct-mem-3 code-anno .
		"\n" => reduce 60
		$default => reduce 60

252:	struct-mem-3 => struct-mem-2 "format" . string
	string => . '$string
		'$string => shift 98
		string => shift 463

253:	struct-mem-2 => struct-mem-1 type-name .
		"\n" => reduce 64
		'$code-anno => reduce 64
		$default => reduce 64

254:	struct-mem-1 => struct-mem-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 462

255:	struct-mem-0 => ident ":" .
		$default => reduce 61

256:	enum-mem => ident "=" expr . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	enum-mem => ident "=" expr .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 461
		"\n" => reduce 48
		$default => reduce 48

257:	enum-mem-seq => enum-mem elt-sep enum-mem-seq .
		$default => reduce 45

258:	state-defn => "state" . ident "{" state-defn-mem-seq "}"
	ident => . '$ident
	state-defn => "state" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 460

259:	stmach-mem => state-defn .
		"\n" => reduce 363
		$default => reduce 363

260:	stmach-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		"enter" => shift 455
		do-expr => shift 456
		trans-expr-0 => shift 457
		trans-expr-1 => shift 458
		trans-expr => shift 459

261:	stmach-mem => "signal" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "signal" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 453

262:	stmach-mem => "guard" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "guard" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 452

263:	stmach-mem => "action" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "action" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 451

264:	stmach-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 450

265:	stmach-mem => lone-anno .
		"\n" => reduce 354
		$default => reduce 354

266:	stmach-mem-seq => stmach-mem . mem-sep stmach-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	stmach-mem-seq => stmach-mem .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 449
		$default => reduce 352

267:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq . "}"
		"}" => shift 448

268:	loc-spec => "locate" "type" qual-ident "at" string .
		"\n" => reduce 291
		$default => reduce 291

269:	loc-spec => "locate" "topology" qual-ident "at" string .
		"\n" => reduce 290
		$default => reduce 290

270:	loc-spec => "locate" "state" "machine" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 447

271:	loc-spec => "locate" "port" qual-ident "at" string .
		"\n" => reduce 288
		$default => reduce 288

272:	loc-spec => "locate" "constant" qual-ident "at" string .
		"\n" => reduce 287
		$default => reduce 287

273:	loc-spec => "locate" "component" qual-ident "at" string .
		"\n" => reduce 286
		$default => reduce 286

274:	loc-spec => "locate" "instance" qual-ident "at" string .
		"\n" => reduce 285
		$default => reduce 285

275:	topology-defn => "topology" ident "{" topo-mem-seq "}" .
		"\n" => reduce 225
		$default => reduce 225

276:	mem-sep => mem-sep . "\n"
	topo-mem-seq => topo-mem mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem
	topo-mem-seq => . include-spec
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem-seq => . include-spec mem-sep topo-mem-seq
	include-spec => . "include" '$string
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 170
		"time" => shift 171
		"param" => shift 172
		"health" => shift 173
		"event" => shift 174
		"command" => shift 175
		'$lone-anno => shift 25
		"telemetry" => shift 176
		pattern-kind => shift 177
		"connections" => shift 178
		"private" => shift 179
		"instance" => shift 180
		"import" => shift 181
		tlm-pktset-spec => shift 182
		conn-graph-spec => shift 183
		comp-inst-spec => shift 184
		lone-anno => shift 185
		"include" => shift 50
		include-spec => shift 186
		topo-mem => shift 187
		topo-mem-seq => shift 446
		"\n" => shift 163
		$default => reduce 226

277:	mem-sep => mem-sep . "\n"
	topo-mem-seq => include-spec mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem
	topo-mem-seq => . include-spec
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem-seq => . include-spec mem-sep topo-mem-seq
	include-spec => . "include" '$string
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 170
		"time" => shift 171
		"param" => shift 172
		"health" => shift 173
		"event" => shift 174
		"command" => shift 175
		'$lone-anno => shift 25
		"telemetry" => shift 176
		pattern-kind => shift 177
		"connections" => shift 178
		"private" => shift 179
		"instance" => shift 180
		"import" => shift 181
		tlm-pktset-spec => shift 182
		conn-graph-spec => shift 183
		comp-inst-spec => shift 184
		lone-anno => shift 185
		"include" => shift 50
		include-spec => shift 186
		topo-mem => shift 187
		topo-mem-seq => shift 445
		"\n" => shift 163
		$default => reduce 226

278:	topo-mem => "import" qual-ident .
		"\n" => reduce 235
		$default => reduce 235

279:	comp-inst-spec => "instance" ident .
		"\n" => reduce 236
		$default => reduce 236

280:	comp-inst-spec => "private" "instance" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 444

281:	conn-graph-spec => "connections" ident . "{" conn-seq "}"
		"{" => shift 443

282:	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident
	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident "{" qual-ident-seq "}"
		"instance" => shift 442

283:	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}"
	ident => . '$ident
	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 441

284:	pattern-kind => "text" "event" .
		$default => reduce 247

285:	tlm-chan-1 => tlm-chan-0 . "id" expr
	tlm-chan-1 => tlm-chan-0 .
		"id" => shift 440
		"\n" => reduce 179
		$default => reduce 179

286:	event-spec-1 => event-spec-0 . "(" param-list ")"
	event-spec-1 => event-spec-0 .
		"(" => shift 439
		$default => reduce 152

287:	spc-iport-kind => "time" . "get"
		"get" => shift 438

288:	spc-iport-kind => "text" . "event"
		"event" => shift 437

289:	tlm-chan-0 => "telemetry" . ident ":" type-name
	ident => . '$ident
	spc-iport-kind => "telemetry" .
		'$ident => shift 60
		ident => shift 436
		$default => reduce 142

290:	param-spec-0 => "param" . ident ":" type-name
	ident => . '$ident
	spc-iport-kind => "param" . "set"
	spc-iport-kind => "param" . "get"
		"get" => shift 433
		"set" => shift 434
		'$ident => shift 60
		ident => shift 435

291:	event-spec-0 => "event" . ident
	ident => . '$ident
	spc-iport-kind => "event" .
		'$ident => shift 60
		ident => shift 432
		$default => reduce 136

292:	spc-oport-kind => "command" . "recv"
	spc-iport-kind => "command" . "resp"
	spc-iport-kind => "command" . "reg"
		"reg" => shift 429
		"resp" => shift 430
		"recv" => shift 431

293:	gen-port-inst-0 => "output" . "port" ident ":"
		"port" => shift 428

294:	tlm-chan-2 => tlm-chan-1 . "update" tlm-update
	tlm-chan-2 => tlm-chan-1 .
		"update" => shift 427
		"\n" => reduce 181
		$default => reduce 181

295:	param-spec-1 => param-spec-0 . "default" expr
	param-spec-1 => param-spec-0 .
		"default" => shift 426
		"\n" => reduce 169
		$default => reduce 169

296:	event-spec-2 => event-spec-1 . "severity" severity
		"severity" => shift 425

297:	input-port-kind => "sync" .
		$default => reduce 149

298:	input-port-kind => "guarded" .
		$default => reduce 148

299:	input-port-kind => "async" .
		$default => reduce 147

300:	cmd-spec-1 => cmd-spec-0 . "(" param-list ")"
	cmd-spec-1 => cmd-spec-0 .
		"(" => shift 424
		"\n" => reduce 126
		$default => reduce 126

301:	int-port-defn-0 => "internal" . "port" ident
		"port" => shift 423

302:	spc-port-inst-0 => spc-oport-kind . "port" ident
		"port" => shift 422

303:	spc-port-inst-0 => spc-iport-kind . "port" ident
		"port" => shift 421

304:	gen-port-inst-1 => gen-port-inst-0 . "[" expr "]"
	gen-port-inst-1 => gen-port-inst-0 .
		"[" => shift 420
		$default => reduce 100

305:	spc-oport-kind => "product" . "recv"
	spc-iport-kind => "product" . "send"
	spc-iport-kind => "product" . "request"
	spc-iport-kind => "product" . "get"
	cont-spec-0 => "product" . "container" ident
	record-spec-0 => "product" . "record" ident ":" type-name
		"record" => shift 414
		"container" => shift 415
		"get" => shift 416
		"request" => shift 417
		"send" => shift 418
		"recv" => shift 419

306:	tlm-chan-3 => tlm-chan-2 . "format" string
	tlm-chan-3 => tlm-chan-2 .
		"format" => shift 413
		"\n" => reduce 183
		$default => reduce 183

307:	param-spec-2 => param-spec-1 . "id" expr
	param-spec-2 => param-spec-1 .
		"id" => shift 412
		"\n" => reduce 171
		$default => reduce 171

308:	event-spec-3 => event-spec-2 . "id" expr
	event-spec-3 => event-spec-2 .
		"id" => shift 411
		$default => reduce 155

309:	cmd-spec-2 => cmd-spec-1 . "opcode" expr
	cmd-spec-2 => cmd-spec-1 .
		"opcode" => shift 410
		"\n" => reduce 128
		$default => reduce 128

310:	int-port-defn-1 => int-port-defn-0 . "(" param-list ")"
	int-port-defn-1 => int-port-defn-0 .
		"(" => shift 409
		"\n" => reduce 118
		$default => reduce 118

311:	cmd-spec-0 => input-port-kind . "command" ident
	gen-port-inst-0 => input-port-kind . "input" "port" ident ":"
	spc-port-inst-1 => input-port-kind . spc-port-inst-0
	spc-port-inst-0 => . spc-iport-kind "port" ident
	spc-port-inst-0 => . spc-oport-kind "port" ident
	spc-iport-kind => . "command" "reg"
	spc-iport-kind => . "command" "resp"
	spc-iport-kind => . "event"
	spc-iport-kind => . "param" "get"
	spc-iport-kind => . "param" "set"
	spc-iport-kind => . "product" "get"
	spc-iport-kind => . "product" "request"
	spc-iport-kind => . "product" "send"
	spc-iport-kind => . "telemetry"
	spc-iport-kind => . "text" "event"
	spc-iport-kind => . "time" "get"
	spc-oport-kind => . "command" "recv"
	spc-oport-kind => . "product" "recv"
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 402
		"product" => shift 403
		"param" => shift 404
		"event" => shift 405
		spc-oport-kind => shift 302
		spc-iport-kind => shift 303
		spc-port-inst-0 => shift 406
		"input" => shift 407
		"command" => shift 408

312:	spc-port-inst-1 => spc-port-inst-0 .
		"\n" => reduce 110
		$default => reduce 110

313:	gen-port-inst-2 => gen-port-inst-1 . "serial"
	gen-port-inst-2 => gen-port-inst-1 . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 400
		"serial" => shift 401

314:	stmach-inst-1 => stmach-inst-0 . "priority" expr
	stmach-inst-1 => stmach-inst-0 .
		"priority" => shift 399
		"\n" => reduce 345
		'$code-anno => reduce 345
		$default => reduce 345

315:	cont-spec-1 => cont-spec-0 . "id" expr
	cont-spec-1 => cont-spec-0 .
		"id" => shift 398
		"\n" => reduce 205
		$default => reduce 205

316:	record-spec-1 => record-spec-0 . "array"
	record-spec-1 => record-spec-0 .
		"array" => shift 397
		"\n" => reduce 199
		$default => reduce 199

317:	tlm-chan-4 => tlm-chan-3 . "low" "{" tlm-lim-seq "}"
	tlm-chan-4 => tlm-chan-3 .
		"low" => shift 396
		"\n" => reduce 185
		$default => reduce 185

318:	param-spec-3 => param-spec-2 . "set" "opcode" expr
	param-spec-3 => param-spec-2 .
		"set" => shift 395
		"\n" => reduce 173
		$default => reduce 173

319:	event-spec-4 => event-spec-3 . "format" string
		"format" => shift 394

320:	cmd-spec-3 => cmd-spec-2 . "priority" expr
	cmd-spec-3 => cmd-spec-2 .
		"priority" => shift 393
		"\n" => reduce 130
		$default => reduce 130

321:	int-port-defn-2 => int-port-defn-1 . "priority" expr
	int-port-defn-2 => int-port-defn-1 .
		"priority" => shift 392
		"\n" => reduce 120
		$default => reduce 120

322:	spc-port-inst-2 => spc-port-inst-1 . "priority" expr
	spc-port-inst-2 => spc-port-inst-1 .
		"priority" => shift 391
		"\n" => reduce 112
		$default => reduce 112

323:	gen-port-inst-3 => gen-port-inst-2 . "priority" expr
	gen-port-inst-3 => gen-port-inst-2 .
		"priority" => shift 390
		"\n" => reduce 104
		$default => reduce 104

324:	stmach-inst-2 => stmach-inst-1 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	stmach-inst-2 => stmach-inst-1 .
		"hook" => shift 375
		"drop" => shift 376
		"block" => shift 377
		"assert" => shift 378
		queue-full-beh-1 => shift 379
		queue-full-beh => shift 389
		'$code-anno => reduce 347
		"\n" => reduce 347
		$default => reduce 347

325:	cont-spec-2 => cont-spec-1 . "default" "priority" expr
	cont-spec-2 => cont-spec-1 .
		"default" => shift 388
		"\n" => reduce 207
		$default => reduce 207

326:	record-spec-2 => record-spec-1 . "id" expr
	record-spec-2 => record-spec-1 .
		"id" => shift 387
		"\n" => reduce 201
		$default => reduce 201

327:	tlm-chan-5 => tlm-chan-4 . "high" "{" tlm-lim-seq "}"
	tlm-chan-5 => tlm-chan-4 .
		"high" => shift 386
		"\n" => reduce 187
		$default => reduce 187

328:	param-spec-4 => param-spec-3 . "save" "opcode" expr
	param-spec-4 => param-spec-3 .
		"save" => shift 385
		"\n" => reduce 175
		$default => reduce 175

329:	event-spec-5 => event-spec-4 . "throttle" expr
	event-spec-5 => event-spec-4 .
		"throttle" => shift 384
		"\n" => reduce 158
		$default => reduce 158

330:	cmd-spec-4 => cmd-spec-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	cmd-spec-4 => cmd-spec-3 .
		"hook" => shift 375
		"drop" => shift 376
		"block" => shift 377
		"assert" => shift 378
		queue-full-beh-1 => shift 379
		queue-full-beh => shift 383
		"\n" => reduce 132
		$default => reduce 132

331:	int-port-defn-3 => int-port-defn-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	int-port-defn-3 => int-port-defn-2 .
		"hook" => shift 375
		"drop" => shift 376
		"block" => shift 377
		"assert" => shift 378
		queue-full-beh-1 => shift 379
		queue-full-beh => shift 382
		"\n" => reduce 122
		$default => reduce 122

332:	spc-port-inst-3 => spc-port-inst-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	spc-port-inst-3 => spc-port-inst-2 .
		"hook" => shift 375
		"drop" => shift 376
		"block" => shift 377
		"assert" => shift 378
		queue-full-beh-1 => shift 379
		queue-full-beh => shift 381
		"\n" => reduce 114
		$default => reduce 114

333:	gen-port-inst-4 => gen-port-inst-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	gen-port-inst-4 => gen-port-inst-3 .
		"hook" => shift 375
		"drop" => shift 376
		"block" => shift 377
		"assert" => shift 378
		queue-full-beh-1 => shift 379
		queue-full-beh => shift 380
		"\n" => reduce 106
		$default => reduce 106

334:	stmach-inst-0 => "state" . "machine" "instance" ident ":" qual-ident
	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 374

335:	stmach-inst => stmach-inst-2 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	stmach-inst => stmach-inst-2 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 373
		"\n" => reduce 342
		$default => reduce 342

336:	port-match-spec => "match" . ident "with" ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 372

337:	prod-cont-spec => cont-spec-2 .
		"\n" => reduce 203
		$default => reduce 203

338:	record-spec => record-spec-2 .
		"\n" => reduce 197
		$default => reduce 197

339:	tlm-chan-spec => tlm-chan-5 .
		"\n" => reduce 177
		$default => reduce 177

340:	param-spec => param-spec-4 .
		"\n" => reduce 167
		$default => reduce 167

341:	event-spec => event-spec-5 .
		"\n" => reduce 150
		$default => reduce 150

342:	command-spec => cmd-spec-4 .
		"\n" => reduce 124
		$default => reduce 124

343:	int-port-spec => int-port-defn-3 .
		"\n" => reduce 116
		$default => reduce 116

344:	port-inst => spc-port-inst-3 .
		"\n" => reduce 97
		$default => reduce 97

345:	port-inst => gen-port-inst-4 .
		"\n" => reduce 96
		$default => reduce 96

346:	comp-mem => stmach-inst .
		"\n" => reduce 95
		$default => reduce 95

347:	comp-mem => stmach-defn .
		"\n" => reduce 94
		$default => reduce 94

348:	comp-mem => tlm-chan-spec .
		"\n" => reduce 93
		$default => reduce 93

349:	comp-mem => prod-cont-spec .
		"\n" => reduce 92
		$default => reduce 92

350:	comp-mem => record-spec .
		"\n" => reduce 91
		$default => reduce 91

351:	comp-mem => param-spec .
		"\n" => reduce 90
		$default => reduce 90

352:	comp-mem => event-spec .
		"\n" => reduce 89
		$default => reduce 89

353:	comp-mem => command-spec .
		"\n" => reduce 88
		$default => reduce 88

354:	comp-mem => port-match-spec .
		"\n" => reduce 87
		$default => reduce 87

355:	comp-mem => port-inst .
		"\n" => reduce 86
		$default => reduce 86

356:	comp-mem => int-port-spec .
		"\n" => reduce 85
		$default => reduce 85

357:	comp-mem => struct-defn .
		"\n" => reduce 84
		$default => reduce 84

358:	comp-mem => enum-defn .
		"\n" => reduce 83
		$default => reduce 83

359:	comp-mem => lone-anno .
		"\n" => reduce 82
		$default => reduce 82

360:	comp-mem-seq => include-spec . mem-sep comp-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 371

361:	comp-mem-seq => comp-mem . mem-sep comp-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 370

362:	component-defn => comp-kind "component" ident "{" comp-mem-seq . "}"
		"}" => shift 369

363:	array-defn => "array" ident "=" index ident . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	array-defn => "array" ident "=" index ident .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 368
		"\n" => reduce 32
		$default => reduce 32

364:	index => "[" expr . "]"
		"]" => shift 367

365:	const-defn => "constant" ident "=" expr code-anno .
		"\n" => reduce 29
		$default => reduce 29

366:	module-defn => "module" ident "{" module-mem-seq "}" .
		"\n" => reduce 27
		$default => reduce 27

367:	index => "[" expr "]" .
		$default => reduce 327

368:	array-defn => "array" ident "=" index ident code-anno .
		"\n" => reduce 33
		$default => reduce 33

369:	component-defn => comp-kind "component" ident "{" comp-mem-seq "}" .
		"\n" => reduce 75
		$default => reduce 75

370:	mem-sep => mem-sep . "\n"
	comp-mem-seq => comp-mem mem-sep . comp-mem-seq
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem-seq => . include-spec mem-sep comp-mem-seq
	include-spec => . "include" '$string
	comp-mem => . lone-anno
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-iport-kind "port" ident
	spc-port-inst-0 => . spc-oport-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	enum-defn-0 => . "enum" ident
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-iport-kind => . "command" "reg"
	spc-iport-kind => . "command" "resp"
	spc-iport-kind => . "event"
	spc-iport-kind => . "param" "get"
	spc-iport-kind => . "param" "set"
	spc-iport-kind => . "product" "get"
	spc-iport-kind => . "product" "request"
	spc-iport-kind => . "product" "send"
	spc-iport-kind => . "telemetry"
	spc-iport-kind => . "text" "event"
	spc-iport-kind => . "time" "get"
	spc-oport-kind => . "command" "recv"
	spc-oport-kind => . "product" "recv"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 285
		event-spec-0 => shift 286
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 289
		"param" => shift 290
		"event" => shift 291
		"command" => shift 292
		"output" => shift 293
		"enum" => shift 5
		tlm-chan-1 => shift 294
		param-spec-0 => shift 295
		event-spec-1 => shift 296
		"sync" => shift 297
		"guarded" => shift 298
		"async" => shift 299
		cmd-spec-0 => shift 300
		"internal" => shift 301
		spc-oport-kind => shift 302
		spc-iport-kind => shift 303
		gen-port-inst-0 => shift 304
		enum-defn-0 => shift 8
		"product" => shift 305
		tlm-chan-2 => shift 306
		param-spec-1 => shift 307
		event-spec-2 => shift 308
		cmd-spec-1 => shift 309
		int-port-defn-0 => shift 310
		input-port-kind => shift 311
		spc-port-inst-0 => shift 312
		gen-port-inst-1 => shift 313
		"struct" => shift 11
		enum-defn-1 => shift 12
		stmach-inst-0 => shift 314
		cont-spec-0 => shift 315
		record-spec-0 => shift 316
		tlm-chan-3 => shift 317
		param-spec-2 => shift 318
		event-spec-3 => shift 319
		cmd-spec-2 => shift 320
		int-port-defn-1 => shift 321
		spc-port-inst-1 => shift 322
		gen-port-inst-2 => shift 323
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		stmach-inst-1 => shift 324
		cont-spec-1 => shift 325
		record-spec-1 => shift 326
		tlm-chan-4 => shift 327
		param-spec-3 => shift 328
		event-spec-4 => shift 329
		cmd-spec-3 => shift 330
		int-port-defn-2 => shift 331
		spc-port-inst-2 => shift 332
		gen-port-inst-3 => shift 333
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 334
		stmach-inst-2 => shift 335
		'$lone-anno => shift 25
		"match" => shift 336
		cont-spec-2 => shift 337
		record-spec-2 => shift 338
		tlm-chan-5 => shift 339
		param-spec-4 => shift 340
		event-spec-5 => shift 341
		cmd-spec-4 => shift 342
		int-port-defn-3 => shift 343
		spc-port-inst-3 => shift 344
		gen-port-inst-4 => shift 345
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		stmach-inst => shift 346
		stmach-defn => shift 347
		tlm-chan-spec => shift 348
		prod-cont-spec => shift 349
		record-spec => shift 350
		param-spec => shift 351
		event-spec => shift 352
		command-spec => shift 353
		port-match-spec => shift 354
		port-inst => shift 355
		int-port-spec => shift 356
		struct-defn => shift 357
		enum-defn => shift 358
		lone-anno => shift 359
		"include" => shift 50
		include-spec => shift 360
		comp-mem => shift 361
		comp-mem-seq => shift 534
		"\n" => shift 163
		$default => reduce 79

371:	mem-sep => mem-sep . "\n"
	comp-mem-seq => include-spec mem-sep . comp-mem-seq
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem-seq => . include-spec mem-sep comp-mem-seq
	include-spec => . "include" '$string
	comp-mem => . lone-anno
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-iport-kind "port" ident
	spc-port-inst-0 => . spc-oport-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	enum-defn-0 => . "enum" ident
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-iport-kind => . "command" "reg"
	spc-iport-kind => . "command" "resp"
	spc-iport-kind => . "event"
	spc-iport-kind => . "param" "get"
	spc-iport-kind => . "param" "set"
	spc-iport-kind => . "product" "get"
	spc-iport-kind => . "product" "request"
	spc-iport-kind => . "product" "send"
	spc-iport-kind => . "telemetry"
	spc-iport-kind => . "text" "event"
	spc-iport-kind => . "time" "get"
	spc-oport-kind => . "command" "recv"
	spc-oport-kind => . "product" "recv"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 285
		event-spec-0 => shift 286
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 289
		"param" => shift 290
		"event" => shift 291
		"command" => shift 292
		"output" => shift 293
		"enum" => shift 5
		tlm-chan-1 => shift 294
		param-spec-0 => shift 295
		event-spec-1 => shift 296
		"sync" => shift 297
		"guarded" => shift 298
		"async" => shift 299
		cmd-spec-0 => shift 300
		"internal" => shift 301
		spc-oport-kind => shift 302
		spc-iport-kind => shift 303
		gen-port-inst-0 => shift 304
		enum-defn-0 => shift 8
		"product" => shift 305
		tlm-chan-2 => shift 306
		param-spec-1 => shift 307
		event-spec-2 => shift 308
		cmd-spec-1 => shift 309
		int-port-defn-0 => shift 310
		input-port-kind => shift 311
		spc-port-inst-0 => shift 312
		gen-port-inst-1 => shift 313
		"struct" => shift 11
		enum-defn-1 => shift 12
		stmach-inst-0 => shift 314
		cont-spec-0 => shift 315
		record-spec-0 => shift 316
		tlm-chan-3 => shift 317
		param-spec-2 => shift 318
		event-spec-3 => shift 319
		cmd-spec-2 => shift 320
		int-port-defn-1 => shift 321
		spc-port-inst-1 => shift 322
		gen-port-inst-2 => shift 323
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		stmach-inst-1 => shift 324
		cont-spec-1 => shift 325
		record-spec-1 => shift 326
		tlm-chan-4 => shift 327
		param-spec-3 => shift 328
		event-spec-4 => shift 329
		cmd-spec-3 => shift 330
		int-port-defn-2 => shift 331
		spc-port-inst-2 => shift 332
		gen-port-inst-3 => shift 333
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 334
		stmach-inst-2 => shift 335
		'$lone-anno => shift 25
		"match" => shift 336
		cont-spec-2 => shift 337
		record-spec-2 => shift 338
		tlm-chan-5 => shift 339
		param-spec-4 => shift 340
		event-spec-5 => shift 341
		cmd-spec-4 => shift 342
		int-port-defn-3 => shift 343
		spc-port-inst-3 => shift 344
		gen-port-inst-4 => shift 345
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		stmach-inst => shift 346
		stmach-defn => shift 347
		tlm-chan-spec => shift 348
		prod-cont-spec => shift 349
		record-spec => shift 350
		param-spec => shift 351
		event-spec => shift 352
		command-spec => shift 353
		port-match-spec => shift 354
		port-inst => shift 355
		int-port-spec => shift 356
		struct-defn => shift 357
		enum-defn => shift 358
		lone-anno => shift 359
		"include" => shift 50
		include-spec => shift 360
		comp-mem => shift 361
		comp-mem-seq => shift 533
		"\n" => shift 163
		$default => reduce 79

372:	port-match-spec => "match" ident . "with" ident
		"with" => shift 532

373:	stmach-inst => stmach-inst-2 code-anno .
		"\n" => reduce 343
		$default => reduce 343

374:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
	stmach-inst-0 => "state" "machine" . "instance" ident ":" qual-ident
		"instance" => shift 531
		'$ident => shift 60
		ident => shift 148

375:	queue-full-beh-1 => "hook" .
		'$code-anno => reduce 284
		"\n" => reduce 284
		$default => reduce 284

376:	queue-full-beh-1 => "drop" .
		'$code-anno => reduce 283
		"\n" => reduce 283
		$default => reduce 283

377:	queue-full-beh-1 => "block" .
		'$code-anno => reduce 282
		"\n" => reduce 282
		$default => reduce 282

378:	queue-full-beh-1 => "assert" .
		'$code-anno => reduce 281
		"\n" => reduce 281
		$default => reduce 281

379:	queue-full-beh => queue-full-beh-1 .
		'$code-anno => reduce 280
		"\n" => reduce 280
		$default => reduce 280

380:	gen-port-inst-4 => gen-port-inst-3 queue-full-beh .
		"\n" => reduce 107
		$default => reduce 107

381:	spc-port-inst-3 => spc-port-inst-2 queue-full-beh .
		"\n" => reduce 115
		$default => reduce 115

382:	int-port-defn-3 => int-port-defn-2 queue-full-beh .
		"\n" => reduce 123
		$default => reduce 123

383:	cmd-spec-4 => cmd-spec-3 queue-full-beh .
		"\n" => reduce 133
		$default => reduce 133

384:	event-spec-5 => event-spec-4 "throttle" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 530

385:	param-spec-4 => param-spec-3 "save" . "opcode" expr
		"opcode" => shift 529

386:	tlm-chan-5 => tlm-chan-4 "high" . "{" tlm-lim-seq "}"
		"{" => shift 528

387:	record-spec-2 => record-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 527

388:	cont-spec-2 => cont-spec-1 "default" . "priority" expr
		"priority" => shift 526

389:	stmach-inst-2 => stmach-inst-1 queue-full-beh .
		'$code-anno => reduce 348
		"\n" => reduce 348
		$default => reduce 348

390:	gen-port-inst-3 => gen-port-inst-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 525

391:	spc-port-inst-2 => spc-port-inst-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 524

392:	int-port-defn-2 => int-port-defn-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 523

393:	cmd-spec-3 => cmd-spec-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 522

394:	event-spec-4 => event-spec-3 "format" . string
	string => . '$string
		'$string => shift 98
		string => shift 521

395:	param-spec-3 => param-spec-2 "set" . "opcode" expr
		"opcode" => shift 520

396:	tlm-chan-4 => tlm-chan-3 "low" . "{" tlm-lim-seq "}"
		"{" => shift 519

397:	record-spec-1 => record-spec-0 "array" .
		"\n" => reduce 200
		$default => reduce 200

398:	cont-spec-1 => cont-spec-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 518

399:	stmach-inst-1 => stmach-inst-0 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 517

400:	gen-port-inst-2 => gen-port-inst-1 qual-ident .
		"\n" => reduce 102
		$default => reduce 102

401:	gen-port-inst-2 => gen-port-inst-1 "serial" .
		"\n" => reduce 103
		$default => reduce 103

402:	spc-iport-kind => "telemetry" .
		$default => reduce 142

403:	spc-oport-kind => "product" . "recv"
	spc-iport-kind => "product" . "send"
	spc-iport-kind => "product" . "request"
	spc-iport-kind => "product" . "get"
		"get" => shift 416
		"request" => shift 417
		"send" => shift 418
		"recv" => shift 419

404:	spc-iport-kind => "param" . "set"
	spc-iport-kind => "param" . "get"
		"get" => shift 433
		"set" => shift 434

405:	spc-iport-kind => "event" .
		$default => reduce 136

406:	spc-port-inst-1 => input-port-kind spc-port-inst-0 .
		"\n" => reduce 111
		$default => reduce 111

407:	gen-port-inst-0 => input-port-kind "input" . "port" ident ":"
		"port" => shift 516

408:	spc-oport-kind => "command" . "recv"
	spc-iport-kind => "command" . "resp"
	spc-iport-kind => "command" . "reg"
	cmd-spec-0 => input-port-kind "command" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 515
		"reg" => shift 429
		"resp" => shift 430
		"recv" => shift 431

409:	int-port-defn-1 => int-port-defn-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 514
		$default => reduce 273

410:	cmd-spec-2 => cmd-spec-1 "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 513

411:	event-spec-3 => event-spec-2 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 512

412:	param-spec-2 => param-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 511

413:	tlm-chan-3 => tlm-chan-2 "format" . string
	string => . '$string
		'$string => shift 98
		string => shift 510

414:	record-spec-0 => "product" "record" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		ident => shift 509

415:	cont-spec-0 => "product" "container" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 508

416:	spc-iport-kind => "product" "get" .
		$default => reduce 139

417:	spc-iport-kind => "product" "request" .
		$default => reduce 140

418:	spc-iport-kind => "product" "send" .
		$default => reduce 141

419:	spc-oport-kind => "product" "recv" .
		$default => reduce 146

420:	gen-port-inst-1 => gen-port-inst-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 507

421:	spc-port-inst-0 => spc-iport-kind "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 506

422:	spc-port-inst-0 => spc-oport-kind "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 505

423:	int-port-defn-0 => "internal" "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 504

424:	cmd-spec-1 => cmd-spec-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 503
		$default => reduce 273

425:	event-spec-2 => event-spec-1 "severity" . severity
	severity => . "activity" "high"
	severity => . "activity" "low"
	severity => . "command"
	severity => . "diagnostic"
	severity => . "fatal"
	severity => . "warning" "high"
	severity => . "warning" "low"
		"warning" => shift 497
		"fatal" => shift 498
		"diagnostic" => shift 499
		"command" => shift 500
		"activity" => shift 501
		severity => shift 502

426:	param-spec-1 => param-spec-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 496

427:	tlm-chan-2 => tlm-chan-1 "update" . tlm-update
	tlm-update => . "always"
	tlm-update => . "on" "change"
		"on" => shift 493
		"always" => shift 494
		tlm-update => shift 495

428:	gen-port-inst-0 => "output" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 492

429:	spc-iport-kind => "command" "reg" .
		$default => reduce 134

430:	spc-iport-kind => "command" "resp" .
		$default => reduce 135

431:	spc-oport-kind => "command" "recv" .
		$default => reduce 145

432:	event-spec-0 => "event" ident .
		$default => reduce 151

433:	spc-iport-kind => "param" "get" .
		$default => reduce 137

434:	spc-iport-kind => "param" "set" .
		$default => reduce 138

435:	param-spec-0 => "param" ident . ":" type-name
		":" => shift 491

436:	tlm-chan-0 => "telemetry" ident . ":" type-name
		":" => shift 490

437:	spc-iport-kind => "text" "event" .
		$default => reduce 143

438:	spc-iport-kind => "time" "get" .
		$default => reduce 144

439:	event-spec-1 => event-spec-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 489
		$default => reduce 273

440:	tlm-chan-1 => tlm-chan-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 488

441:	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}"
		"{" => shift 487

442:	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident "{" qual-ident-seq "}"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 486

443:	conn-graph-spec => "connections" ident "{" . conn-seq "}"
	conn-seq => .
	conn-seq => . connection
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 481
		"unmatched" => shift 482
		conn-from => shift 483
		connection => shift 484
		conn-seq => shift 485
		$default => reduce 248

444:	comp-inst-spec => "private" "instance" ident .
		"\n" => reduce 237
		$default => reduce 237

445:	topo-mem-seq => include-spec mem-sep topo-mem-seq .
		$default => reduce 230

446:	topo-mem-seq => topo-mem mem-sep topo-mem-seq .
		$default => reduce 229

447:	loc-spec => "locate" "state" "machine" qual-ident "at" string .
		"\n" => reduce 289
		$default => reduce 289

448:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}" .
		"\n" => reduce 350
		$default => reduce 350

449:	mem-sep => mem-sep . "\n"
	stmach-mem-seq => stmach-mem mem-sep . stmach-mem-seq
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . lone-anno
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 258
		'$lone-anno => shift 25
		state-defn => shift 259
		"initial" => shift 260
		"signal" => shift 261
		"guard" => shift 262
		"action" => shift 263
		"choice" => shift 264
		lone-anno => shift 265
		stmach-mem => shift 266
		stmach-mem-seq => shift 480
		"\n" => shift 163
		$default => reduce 351

450:	stmach-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 479

451:	stmach-mem => "action" ident .
	stmach-mem => "action" ident . ":" type-name
		":" => shift 478
		"\n" => reduce 356
		$default => reduce 356

452:	stmach-mem => "guard" ident .
	stmach-mem => "guard" ident . ":" type-name
		":" => shift 477
		"\n" => reduce 358
		$default => reduce 358

453:	stmach-mem => "signal" ident .
	stmach-mem => "signal" ident . ":" type-name
		":" => shift 476
		"\n" => reduce 360
		$default => reduce 360

454:	do-expr => "do" . "{" action-seq "}"
		"{" => shift 475

455:	trans-expr-0 => "enter" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 474

456:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 455
		trans-expr-0 => shift 473

457:	trans-expr-1 => trans-expr-0 .
		"\n" => reduce 383
		$default => reduce 383

458:	trans-expr => trans-expr-1 .
		"\n" => reduce 381
		$default => reduce 381

459:	stmach-mem => "initial" trans-expr .
		"\n" => reduce 362
		$default => reduce 362

460:	state-defn => "state" ident .
	state-defn => "state" ident . "{" state-defn-mem-seq "}"
		"{" => shift 472
		"\n" => reduce 364
		$default => reduce 364

461:	enum-mem => ident "=" expr code-anno .
		"\n" => reduce 49
		$default => reduce 49

462:	struct-mem-1 => struct-mem-0 "[" expr . "]"
		"]" => shift 471

463:	struct-mem-3 => struct-mem-2 "format" string .
		'$code-anno => reduce 66
		"\n" => reduce 66
		$default => reduce 66

464:	struct-mem-seq => struct-mem mem-sep struct-mem-seq .
		$default => reduce 58

465:	formal-param-1 => "ref" ident ":" type-name .
		'$code-anno => reduce 279
		"\n" => reduce 279
		$default => reduce 279

466:	expr-seq => expr elt-sep expr-seq .
		$default => reduce 309

467:	struct-elt => ident "=" expr .
		"\n" => reduce 313
		$default => reduce 313

468:	struct-elt-seq => struct-elt elt-sep struct-elt-seq .
		$default => reduce 312

469:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 470

470:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr .
		"\n" => reduce 210
		$default => reduce 210

471:	struct-mem-1 => struct-mem-0 "[" expr "]" .
		$default => reduce 63

472:	state-defn => "state" ident "{" . state-defn-mem-seq "}"
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . lone-anno
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 576
		st-tran-spec-0 => shift 577
		st-tran-spec-1 => shift 578
		st-tran-spec-2 => shift 579
		"state" => shift 258
		'$lone-anno => shift 25
		"exit" => shift 580
		"entry" => shift 581
		state-trans-spec => shift 582
		state-defn => shift 583
		"choice" => shift 584
		"initial" => shift 585
		lone-anno => shift 586
		state-defn-mem => shift 587
		state-defn-mem-seq => shift 588
		$default => reduce 366

473:	trans-expr-1 => do-expr trans-expr-0 .
		"\n" => reduce 384
		$default => reduce 384

474:	trans-expr-0 => "enter" qual-ident .
		"\n" => reduce 382
		$default => reduce 382

475:	do-expr => "do" "{" . action-seq "}"
	action-seq => .
	action-seq => . ident
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 60
		ident => shift 574
		action-seq => shift 575
		$default => reduce 386

476:	stmach-mem => "signal" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 573

477:	stmach-mem => "guard" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 572

478:	stmach-mem => "action" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 571

479:	stmach-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 570

480:	stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq .
		$default => reduce 353

481:	conn-from => qual-ident . "[" expr "]"
	conn-from => qual-ident .
		"[" => shift 569
		$default => reduce 253

482:	connection => "unmatched" . conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 481
		conn-from => shift 568

483:	connection => conn-from . "->" conn-to
		"->" => shift 567

484:	conn-seq => connection . elt-sep conn-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	conn-seq => connection .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 566
		$default => reduce 249

485:	conn-graph-spec => "connections" ident "{" conn-seq . "}"
		"}" => shift 565

486:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident .
	conn-graph-spec => pattern-kind "connections" "instance" qual-ident . "{" qual-ident-seq "}"
		"{" => shift 564
		"\n" => reduce 239
		$default => reduce 239

487:	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec
	tlm-pktgrp-mem-seq => . include-spec
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec
	tlm-pktgrp-mem-seq => . include-spec
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 560
		"include" => shift 50
		include-spec => shift 561
		tlm-pkt-spec => shift 562
		tlm-pktgrp-mem-seq => shift 563
		$default => reduce 259

488:	tlm-chan-1 => tlm-chan-0 "id" expr .
		"\n" => reduce 180
		$default => reduce 180

489:	event-spec-1 => event-spec-0 "(" param-list . ")"
		")" => shift 559

490:	tlm-chan-0 => "telemetry" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 558

491:	param-spec-0 => "param" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 557

492:	gen-port-inst-0 => "output" "port" ident . ":"
		":" => shift 556

493:	tlm-update => "on" . "change"
		"change" => shift 555

494:	tlm-update => "always" .
		"\n" => reduce 189
		$default => reduce 189

495:	tlm-chan-2 => tlm-chan-1 "update" tlm-update .
		"\n" => reduce 182
		$default => reduce 182

496:	param-spec-1 => param-spec-0 "default" expr .
		"\n" => reduce 170
		$default => reduce 170

497:	severity => "warning" . "low"
	severity => "warning" . "high"
		"high" => shift 553
		"low" => shift 554

498:	severity => "fatal" .
		$default => reduce 164

499:	severity => "diagnostic" .
		$default => reduce 163

500:	severity => "command" .
		$default => reduce 162

501:	severity => "activity" . "low"
	severity => "activity" . "high"
		"high" => shift 551
		"low" => shift 552

502:	event-spec-2 => event-spec-1 "severity" severity .
		$default => reduce 154

503:	cmd-spec-1 => cmd-spec-0 "(" param-list . ")"
		")" => shift 550

504:	int-port-defn-0 => "internal" "port" ident .
		"\n" => reduce 117
		$default => reduce 117

505:	spc-port-inst-0 => spc-oport-kind "port" ident .
		"\n" => reduce 109
		$default => reduce 109

506:	spc-port-inst-0 => spc-iport-kind "port" ident .
		"\n" => reduce 108
		$default => reduce 108

507:	gen-port-inst-1 => gen-port-inst-0 "[" expr . "]"
		"]" => shift 549

508:	cont-spec-0 => "product" "container" ident .
		"\n" => reduce 204
		$default => reduce 204

509:	record-spec-0 => "product" "record" ident . ":" type-name
		":" => shift 548

510:	tlm-chan-3 => tlm-chan-2 "format" string .
		"\n" => reduce 184
		$default => reduce 184

511:	param-spec-2 => param-spec-1 "id" expr .
		"\n" => reduce 172
		$default => reduce 172

512:	event-spec-3 => event-spec-2 "id" expr .
		$default => reduce 156

513:	cmd-spec-2 => cmd-spec-1 "opcode" expr .
		"\n" => reduce 129
		$default => reduce 129

514:	int-port-defn-1 => int-port-defn-0 "(" param-list . ")"
		")" => shift 547

515:	cmd-spec-0 => input-port-kind "command" ident .
		"\n" => reduce 125
		$default => reduce 125

516:	gen-port-inst-0 => input-port-kind "input" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 546

517:	stmach-inst-1 => stmach-inst-0 "priority" expr .
		"\n" => reduce 346
		'$code-anno => reduce 346
		$default => reduce 346

518:	cont-spec-1 => cont-spec-0 "id" expr .
		"\n" => reduce 206
		$default => reduce 206

519:	tlm-chan-4 => tlm-chan-3 "low" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 538
		"orange" => shift 539
		"red" => shift 540
		tlm-lim => shift 541
		tlm-lim-seq => shift 545
		$default => reduce 191

520:	param-spec-3 => param-spec-2 "set" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 544

521:	event-spec-4 => event-spec-3 "format" string .
		"\n" => reduce 157
		$default => reduce 157

522:	cmd-spec-3 => cmd-spec-2 "priority" expr .
		"\n" => reduce 131
		$default => reduce 131

523:	int-port-defn-2 => int-port-defn-1 "priority" expr .
		"\n" => reduce 121
		$default => reduce 121

524:	spc-port-inst-2 => spc-port-inst-1 "priority" expr .
		"\n" => reduce 113
		$default => reduce 113

525:	gen-port-inst-3 => gen-port-inst-2 "priority" expr .
		"\n" => reduce 105
		$default => reduce 105

526:	cont-spec-2 => cont-spec-1 "default" "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 543

527:	record-spec-2 => record-spec-1 "id" expr .
		"\n" => reduce 202
		$default => reduce 202

528:	tlm-chan-5 => tlm-chan-4 "high" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 538
		"orange" => shift 539
		"red" => shift 540
		tlm-lim => shift 541
		tlm-lim-seq => shift 542
		$default => reduce 191

529:	param-spec-4 => param-spec-3 "save" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 537

530:	event-spec-5 => event-spec-4 "throttle" expr .
		"\n" => reduce 159
		$default => reduce 159

531:	stmach-inst-0 => "state" "machine" "instance" . ident ":" qual-ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 536

532:	port-match-spec => "match" ident "with" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 535

533:	comp-mem-seq => include-spec mem-sep comp-mem-seq .
		$default => reduce 81

534:	comp-mem-seq => comp-mem mem-sep comp-mem-seq .
		$default => reduce 80

535:	port-match-spec => "match" ident "with" ident .
		"\n" => reduce 292
		$default => reduce 292

536:	stmach-inst-0 => "state" "machine" "instance" ident . ":" qual-ident
		":" => shift 622

537:	param-spec-4 => param-spec-3 "save" "opcode" expr .
		"\n" => reduce 176
		$default => reduce 176

538:	tlm-lim => "yellow" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 621

539:	tlm-lim => "orange" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 620

540:	tlm-lim => "red" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 619

541:	tlm-lim-seq => tlm-lim . elt-sep tlm-lim-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-lim-seq => tlm-lim .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 618
		$default => reduce 192

542:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq . "}"
		"}" => shift 617

543:	cont-spec-2 => cont-spec-1 "default" "priority" expr .
		"\n" => reduce 208
		$default => reduce 208

544:	param-spec-3 => param-spec-2 "set" "opcode" expr .
		"\n" => reduce 174
		$default => reduce 174

545:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq . "}"
		"}" => shift 616

546:	gen-port-inst-0 => input-port-kind "input" "port" ident . ":"
		":" => shift 615

547:	int-port-defn-1 => int-port-defn-0 "(" param-list ")" .
		"\n" => reduce 119
		$default => reduce 119

548:	record-spec-0 => "product" "record" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 614

549:	gen-port-inst-1 => gen-port-inst-0 "[" expr "]" .
		$default => reduce 101

550:	cmd-spec-1 => cmd-spec-0 "(" param-list ")" .
		"\n" => reduce 127
		$default => reduce 127

551:	severity => "activity" "high" .
		$default => reduce 160

552:	severity => "activity" "low" .
		$default => reduce 161

553:	severity => "warning" "high" .
		$default => reduce 165

554:	severity => "warning" "low" .
		$default => reduce 166

555:	tlm-update => "on" "change" .
		"\n" => reduce 190
		$default => reduce 190

556:	gen-port-inst-0 => "output" "port" ident ":" .
		$default => reduce 99

557:	param-spec-0 => "param" ident ":" type-name .
		"\n" => reduce 168
		$default => reduce 168

558:	tlm-chan-0 => "telemetry" ident ":" type-name .
		"\n" => reduce 178
		$default => reduce 178

559:	event-spec-1 => event-spec-0 "(" param-list ")" .
		$default => reduce 153

560:	tlm-pkt-spec => "packet" . ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
	tlm-pkt-spec => "packet" . ident "group" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 613

561:	tlm-pktgrp-mem-seq => include-spec . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pktgrp-mem-seq => include-spec .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 612
		$default => reduce 261

562:	tlm-pktgrp-mem-seq => tlm-pkt-spec . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pktgrp-mem-seq => tlm-pkt-spec .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 611
		$default => reduce 260

563:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}"
		"}" => shift 610

564:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" . qual-ident-seq "}"
	qual-ident-seq => .
	qual-ident-seq => . qual-ident
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 608
		qual-ident-seq => shift 609
		$default => reduce 324

565:	conn-graph-spec => "connections" ident "{" conn-seq "}" .
		"\n" => reduce 238
		$default => reduce 238

566:	elt-sep => elt-sep . "\n"
	conn-seq => connection elt-sep . conn-seq
	conn-seq => .
	conn-seq => . connection
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 481
		"unmatched" => shift 482
		conn-from => shift 483
		connection => shift 484
		conn-seq => shift 607
		"\n" => shift 248
		$default => reduce 248

567:	connection => conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 605
		conn-to => shift 606

568:	connection => "unmatched" conn-from . "->" conn-to
		"->" => shift 604

569:	conn-from => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 603

570:	stmach-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 602

571:	stmach-mem => "action" ident ":" type-name .
		"\n" => reduce 357
		$default => reduce 357

572:	stmach-mem => "guard" ident ":" type-name .
		"\n" => reduce 359
		$default => reduce 359

573:	stmach-mem => "signal" ident ":" type-name .
		"\n" => reduce 361
		$default => reduce 361

574:	action-seq => ident . elt-sep action-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	action-seq => ident .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 601
		$default => reduce 387

575:	do-expr => "do" "{" action-seq . "}"
		"}" => shift 600

576:	st-tran-spec-0 => "on" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 599

577:	st-tran-spec-1 => st-tran-spec-0 . "if" ident
	st-tran-spec-1 => st-tran-spec-0 .
		"if" => shift 598
		$default => reduce 378

578:	st-tran-spec-2 => st-tran-spec-1 . trans-or-do
	trans-or-do => . trans-expr
	trans-or-do => . do-expr
	trans-expr => . trans-expr-1
	do-expr => . "do" "{" action-seq "}"
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 455
		trans-expr-0 => shift 457
		"do" => shift 454
		trans-expr-1 => shift 458
		do-expr => shift 595
		trans-expr => shift 596
		trans-or-do => shift 597

579:	state-trans-spec => st-tran-spec-2 .
		"\n" => reduce 376
		$default => reduce 376

580:	state-defn-mem => "exit" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		do-expr => shift 594

581:	state-defn-mem => "entry" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		do-expr => shift 593

582:	state-defn-mem => state-trans-spec .
		"\n" => reduce 373
		$default => reduce 373

583:	state-defn-mem => state-defn .
		"\n" => reduce 372
		$default => reduce 372

584:	state-defn-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 592

585:	state-defn-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		"enter" => shift 455
		do-expr => shift 456
		trans-expr-0 => shift 457
		trans-expr-1 => shift 458
		trans-expr => shift 591

586:	state-defn-mem => lone-anno .
		"\n" => reduce 369
		$default => reduce 369

587:	state-defn-mem-seq => state-defn-mem . mem-sep state-defn-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
	state-defn-mem-seq => state-defn-mem .
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 590
		$default => reduce 367

588:	state-defn => "state" ident "{" state-defn-mem-seq . "}"
		"}" => shift 589

589:	state-defn => "state" ident "{" state-defn-mem-seq "}" .
		"\n" => reduce 365
		$default => reduce 365

590:	mem-sep => mem-sep . "\n"
	state-defn-mem-seq => state-defn-mem mem-sep . state-defn-mem-seq
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . lone-anno
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 576
		st-tran-spec-0 => shift 577
		st-tran-spec-1 => shift 578
		st-tran-spec-2 => shift 579
		"state" => shift 258
		'$lone-anno => shift 25
		"exit" => shift 580
		"entry" => shift 581
		state-trans-spec => shift 582
		state-defn => shift 583
		"choice" => shift 584
		"initial" => shift 585
		lone-anno => shift 586
		state-defn-mem => shift 587
		state-defn-mem-seq => shift 638
		"\n" => shift 163
		$default => reduce 366

591:	state-defn-mem => "initial" trans-expr .
		"\n" => reduce 370
		$default => reduce 370

592:	state-defn-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 637

593:	state-defn-mem => "entry" do-expr .
		"\n" => reduce 374
		$default => reduce 374

594:	state-defn-mem => "exit" do-expr .
		"\n" => reduce 375
		$default => reduce 375

595:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	trans-or-do => do-expr .
		"enter" => shift 455
		trans-expr-0 => shift 473
		"\n" => reduce 390
		$default => reduce 390

596:	trans-or-do => trans-expr .
		"\n" => reduce 389
		$default => reduce 389

597:	st-tran-spec-2 => st-tran-spec-1 trans-or-do .
		"\n" => reduce 380
		$default => reduce 380

598:	st-tran-spec-1 => st-tran-spec-0 "if" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 636

599:	st-tran-spec-0 => "on" ident .
		$default => reduce 377

600:	do-expr => "do" "{" action-seq "}" .
		"\n" => reduce 385
		$default => reduce 385

601:	elt-sep => elt-sep . "\n"
	action-seq => ident elt-sep . action-seq
	action-seq => .
	action-seq => . ident
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 60
		ident => shift 574
		action-seq => shift 635
		"\n" => shift 248
		$default => reduce 386

602:	stmach-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		"enter" => shift 455
		do-expr => shift 456
		trans-expr-0 => shift 457
		trans-expr-1 => shift 458
		trans-expr => shift 634

603:	conn-from => qual-ident "[" expr . "]"
		"]" => shift 633

604:	connection => "unmatched" conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 605
		conn-to => shift 632

605:	conn-to => qual-ident . "[" expr "]"
	conn-to => qual-ident .
		"[" => shift 631
		"\n" => reduce 255
		$default => reduce 255

606:	connection => conn-from "->" conn-to .
		"\n" => reduce 251
		$default => reduce 251

607:	conn-seq => connection elt-sep conn-seq .
		$default => reduce 250

608:	qual-ident-seq => qual-ident . elt-sep qual-ident-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	qual-ident-seq => qual-ident .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 630
		$default => reduce 325

609:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq . "}"
		"}" => shift 629

610:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" .
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" . "omit" "{" tlm-chan-id-seq "}"
		"omit" => shift 628
		"\n" => reduce 257
		$default => reduce 257

611:	elt-sep => elt-sep . "\n"
	tlm-pktgrp-mem-seq => tlm-pkt-spec elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec
	tlm-pktgrp-mem-seq => . include-spec
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 560
		"include" => shift 50
		include-spec => shift 561
		tlm-pkt-spec => shift 562
		tlm-pktgrp-mem-seq => shift 627
		"\n" => shift 248
		$default => reduce 259

612:	elt-sep => elt-sep . "\n"
	tlm-pktgrp-mem-seq => include-spec elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec
	tlm-pktgrp-mem-seq => . include-spec
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 560
		"include" => shift 50
		include-spec => shift 561
		tlm-pkt-spec => shift 562
		tlm-pktgrp-mem-seq => shift 626
		"\n" => shift 248
		$default => reduce 259

613:	tlm-pkt-spec => "packet" ident . "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident . "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"group" => shift 625

614:	record-spec-0 => "product" "record" ident ":" type-name .
		"\n" => reduce 198
		$default => reduce 198

615:	gen-port-inst-0 => input-port-kind "input" "port" ident ":" .
		$default => reduce 98

616:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}" .
		"\n" => reduce 186
		$default => reduce 186

617:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}" .
		"\n" => reduce 188
		$default => reduce 188

618:	elt-sep => elt-sep . "\n"
	tlm-lim-seq => tlm-lim elt-sep . tlm-lim-seq
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 538
		"orange" => shift 539
		"red" => shift 540
		tlm-lim => shift 541
		tlm-lim-seq => shift 624
		"\n" => shift 248
		$default => reduce 191

619:	tlm-lim => "red" expr .
		"\n" => reduce 194
		$default => reduce 194

620:	tlm-lim => "orange" expr .
		"\n" => reduce 195
		$default => reduce 195

621:	tlm-lim => "yellow" expr .
		"\n" => reduce 196
		$default => reduce 196

622:	stmach-inst-0 => "state" "machine" "instance" ident ":" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 623

623:	stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident .
		'$code-anno => reduce 344
		"\n" => reduce 344
		$default => reduce 344

624:	tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq .
		$default => reduce 193

625:	tlm-pkt-spec => "packet" ident "group" . expr "id" expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	tlm-pkt-spec => "packet" ident "group" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 644

626:	tlm-pktgrp-mem-seq => include-spec elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 263

627:	tlm-pktgrp-mem-seq => tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 262

628:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" . "{" tlm-chan-id-seq "}"
		"{" => shift 643

629:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}" .
		"\n" => reduce 240
		$default => reduce 240

630:	elt-sep => elt-sep . "\n"
	qual-ident-seq => qual-ident elt-sep . qual-ident-seq
	qual-ident-seq => .
	qual-ident-seq => . qual-ident
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 608
		qual-ident-seq => shift 642
		"\n" => shift 248
		$default => reduce 324

631:	conn-to => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 641

632:	connection => "unmatched" conn-from "->" conn-to .
		"\n" => reduce 252
		$default => reduce 252

633:	conn-from => qual-ident "[" expr "]" .
		$default => reduce 254

634:	stmach-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 640

635:	action-seq => ident elt-sep action-seq .
		$default => reduce 388

636:	st-tran-spec-1 => st-tran-spec-0 "if" ident .
		$default => reduce 379

637:	state-defn-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 639

638:	state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq .
		$default => reduce 368

639:	state-defn-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 651

640:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		"enter" => shift 455
		do-expr => shift 456
		trans-expr-0 => shift 457
		trans-expr-1 => shift 458
		trans-expr => shift 650

641:	conn-to => qual-ident "[" expr . "]"
		"]" => shift 649

642:	qual-ident-seq => qual-ident elt-sep qual-ident-seq .
		$default => reduce 326

643:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" . tlm-chan-id-seq "}"
	tlm-chan-id-seq => . qual-ident-seq
	qual-ident-seq => .
	qual-ident-seq => . qual-ident
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 608
		qual-ident-seq => shift 647
		tlm-chan-id-seq => shift 648
		$default => reduce 324

644:	tlm-pkt-spec => "packet" ident "group" expr . "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident "group" expr . "id" expr "{" tlm-pkt-mem-seq "}"
		"id" => shift 645
		"{" => shift 646

645:	tlm-pkt-spec => "packet" ident "group" expr "id" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 658

646:	tlm-pkt-spec => "packet" ident "group" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident
	tlm-pkt-mem-seq => . include-spec
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 655
		qual-ident => shift 656
		tlm-pkt-mem-seq => shift 657
		$default => reduce 266

647:	tlm-chan-id-seq => qual-ident-seq .
		$default => reduce 271

648:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq . "}"
		"}" => shift 654

649:	conn-to => qual-ident "[" expr "]" .
		"\n" => reduce 256
		$default => reduce 256

650:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 653

651:	state-defn-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		"enter" => shift 455
		do-expr => shift 456
		trans-expr-0 => shift 457
		trans-expr-1 => shift 458
		trans-expr => shift 652

652:	state-defn-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 663

653:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 355
		$default => reduce 355

654:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}" .
		"\n" => reduce 258
		$default => reduce 258

655:	tlm-pkt-mem-seq => include-spec . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pkt-mem-seq => include-spec .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 662
		$default => reduce 268

656:	tlm-pkt-mem-seq => qual-ident . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pkt-mem-seq => qual-ident .
		"\n" => shift 199
		"," => shift 200
		elt-sep => shift 661
		$default => reduce 267

657:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 660

658:	tlm-pkt-spec => "packet" ident "group" expr "id" expr . "{" tlm-pkt-mem-seq "}"
		"{" => shift 659

659:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident
	tlm-pkt-mem-seq => . include-spec
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 655
		qual-ident => shift 656
		tlm-pkt-mem-seq => shift 667
		$default => reduce 266

660:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 264
		$default => reduce 264

661:	elt-sep => elt-sep . "\n"
	tlm-pkt-mem-seq => qual-ident elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident
	tlm-pkt-mem-seq => . include-spec
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 655
		qual-ident => shift 656
		tlm-pkt-mem-seq => shift 666
		"\n" => shift 248
		$default => reduce 266

662:	elt-sep => elt-sep . "\n"
	tlm-pkt-mem-seq => include-spec elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident
	tlm-pkt-mem-seq => . include-spec
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 655
		qual-ident => shift 656
		tlm-pkt-mem-seq => shift 665
		"\n" => shift 248
		$default => reduce 266

663:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 454
		"enter" => shift 455
		do-expr => shift 456
		trans-expr-0 => shift 457
		trans-expr-1 => shift 458
		trans-expr => shift 664

664:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 669

665:	tlm-pkt-mem-seq => include-spec elt-sep tlm-pkt-mem-seq .
		$default => reduce 270

666:	tlm-pkt-mem-seq => qual-ident elt-sep tlm-pkt-mem-seq .
		$default => reduce 269

667:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 668

668:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 265
		$default => reduce 265

669:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 371
		$default => reduce 371

