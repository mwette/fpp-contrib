0 $start => translation-unit
1 elt-sep => ","
2 elt-sep => "\n"
3 elt-sep => elt-sep "\n"
4 mem-sep => ";"
5 mem-sep => "\n"
6 mem-sep => mem-sep "\n"
7 include-spec => "include" string
8 translation-unit => module-mem-seq
9 module-mem-seq =>
10 module-mem-seq => mod-mem mem-sep module-mem-seq
11 mod-mem => include-spec
12 mod-mem => component-defn
13 mod-mem => comp-inst-defn
14 mod-mem => topology-defn
15 mod-mem => const-defn
16 mod-mem => module-defn
17 mod-mem => port-defn
18 mod-mem => struct-defn
19 mod-mem => loc-spec
20 mod-mem => abs-type-defn
21 mod-mem => array-defn
22 mod-mem => enum-defn
23 mod-mem => stmach-defn
24 module-defn => "module" ident "{" module-mem-seq "}"
25 const-defn => "constant" ident "=" expr
26 abs-type-defn => "type" ident
27 array-defn => "array" ident "=" index ident
28 enum-defn => enum-defn-3
29 enum-defn-0 => "enum" ident
30 enum-defn-1 => enum-defn-0
31 enum-defn-1 => enum-defn-0 ":" type-name
32 enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}"
33 enum-defn-3 => enum-defn-2
34 enum-defn-3 => enum-defn-2 "default" expr
35 enum-mem-seq =>
36 enum-mem-seq => enum-mem elt-sep enum-mem-seq
37 enum-mem => ident
38 enum-mem => ident "=" expr
39 struct-defn => struct-defn-1
40 struct-defn-0 => "struct" ident "{" struct-mem-seq "}"
41 struct-defn-1 => struct-defn-0
42 struct-defn-1 => struct-defn-0 "default" expr
43 struct-mem-seq =>
44 struct-mem-seq => struct-mem mem-sep struct-mem-seq
45 struct-mem => struct-mem-3
46 struct-mem-0 => ident ":"
47 struct-mem-1 => struct-mem-0
48 struct-mem-1 => struct-mem-0 "[" expr "]"
49 struct-mem-2 => struct-mem-1 type-name
50 struct-mem-3 => struct-mem-2
51 struct-mem-3 => struct-mem-2 "format" string
52 port-defn => port-defn-2
53 port-defn-0 => "port" ident
54 port-defn-1 => port-defn-0
55 port-defn-1 => port-defn-0 "(" param-list ")"
56 port-defn-2 => port-defn-1
57 port-defn-2 => port-defn-1 "->" type-name
58 component-defn => comp-kind "component" ident "{" comp-mem-seq "}"
59 comp-kind => "active"
60 comp-kind => "passive"
61 comp-kind => "queued"
62 comp-mem-seq =>
63 comp-mem-seq => comp-mem mem-sep comp-mem-seq
64 comp-mem => include-spec
65 comp-mem => enum-defn
66 comp-mem => struct-defn
67 comp-mem => int-port-spec
68 comp-mem => port-inst
69 comp-mem => port-match-spec
70 comp-mem => command-spec
71 comp-mem => event-spec
72 comp-mem => param-spec
73 comp-mem => record-spec
74 comp-mem => prod-cont-spec
75 comp-mem => tlm-chan-spec
76 comp-mem => stmach-defn
77 comp-mem => stmach-inst
78 port-inst => gen-port-inst-4
79 port-inst => spc-port-inst-3
80 gen-port-inst-0 => input-port-kind "input" "port" ident ":"
81 gen-port-inst-0 => "output" "port" ident ":"
82 gen-port-inst-1 => gen-port-inst-0
83 gen-port-inst-1 => gen-port-inst-0 "[" expr "]"
84 gen-port-inst-2 => gen-port-inst-1 qual-ident
85 gen-port-inst-2 => gen-port-inst-1 "serial"
86 gen-port-inst-3 => gen-port-inst-2
87 gen-port-inst-3 => gen-port-inst-2 "priority" expr
88 gen-port-inst-4 => gen-port-inst-3
89 gen-port-inst-4 => gen-port-inst-3 queue-full-beh
90 spc-port-inst-0 => spc-port-kind "port" ident
91 spc-port-inst-1 => spc-port-inst-0
92 spc-port-inst-1 => input-port-kind spc-port-inst-0
93 spc-port-inst-2 => spc-port-inst-1
94 spc-port-inst-2 => spc-port-inst-1 "priority" expr
95 spc-port-inst-3 => spc-port-inst-2
96 spc-port-inst-3 => spc-port-inst-2 queue-full-beh
97 int-port-spec => int-port-defn-3
98 int-port-defn-0 => "internal" "port" ident
99 int-port-defn-1 => int-port-defn-0
100 int-port-defn-1 => int-port-defn-0 "(" param-list ")"
101 int-port-defn-2 => int-port-defn-1
102 int-port-defn-2 => int-port-defn-1 "priority" expr
103 int-port-defn-3 => int-port-defn-2
104 int-port-defn-3 => int-port-defn-2 queue-full-beh
105 command-spec => cmd-spec-4
106 cmd-spec-0 => input-port-kind "command" ident
107 cmd-spec-1 => cmd-spec-0
108 cmd-spec-1 => cmd-spec-0 "(" param-list ")"
109 cmd-spec-2 => cmd-spec-1
110 cmd-spec-2 => cmd-spec-1 "opcode" expr
111 cmd-spec-3 => cmd-spec-2
112 cmd-spec-3 => cmd-spec-2 "priority" expr
113 cmd-spec-4 => cmd-spec-3
114 cmd-spec-4 => cmd-spec-3 queue-full-beh
115 spc-port-kind => "command" "recv"
116 spc-port-kind => "command" "reg"
117 spc-port-kind => "command" "resp"
118 spc-port-kind => "event"
119 spc-port-kind => "param" "get"
120 spc-port-kind => "param" "set"
121 spc-port-kind => "product" "get"
122 spc-port-kind => "product" "recv"
123 spc-port-kind => "product" "request"
124 spc-port-kind => "product" "send"
125 spc-port-kind => "telemetry"
126 spc-port-kind => "text" "event"
127 spc-port-kind => "time" "get"
128 input-port-kind => "async"
129 input-port-kind => "guarded"
130 input-port-kind => "sync"
131 event-spec => event-spec-5
132 event-spec-0 => "event" ident
133 event-spec-1 => event-spec-0
134 event-spec-1 => event-spec-0 "(" param-list ")"
135 event-spec-2 => event-spec-1 "severity" severity
136 event-spec-3 => event-spec-2
137 event-spec-3 => event-spec-2 "id" expr
138 event-spec-4 => event-spec-3 "format" string
139 event-spec-5 => event-spec-4
140 event-spec-5 => event-spec-4 "throttle" expr
141 severity => "activity" "high"
142 severity => "activity" "low"
143 severity => "command"
144 severity => "diagnostic"
145 severity => "fatal"
146 severity => "warning" "high"
147 severity => "warning" "low"
148 param-spec => param-spec-4
149 param-spec-0 => "param" ident ":" type-name
150 param-spec-1 => param-spec-0
151 param-spec-1 => param-spec-0 "default" expr
152 param-spec-2 => param-spec-1
153 param-spec-2 => param-spec-1 "id" expr
154 param-spec-3 => param-spec-2
155 param-spec-3 => param-spec-2 "set" "opcode" expr
156 param-spec-4 => param-spec-3
157 param-spec-4 => param-spec-3 "save" "opcode" expr
158 tlm-chan-spec => tlm-chan-5
159 tlm-chan-0 => "telemetry" ident ":" type-name
160 tlm-chan-1 => tlm-chan-0
161 tlm-chan-1 => tlm-chan-0 "id" expr
162 tlm-chan-2 => tlm-chan-1
163 tlm-chan-2 => tlm-chan-1 "update" tlm-update
164 tlm-chan-3 => tlm-chan-2
165 tlm-chan-3 => tlm-chan-2 "format" string
166 tlm-chan-4 => tlm-chan-3
167 tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}"
168 tlm-chan-5 => tlm-chan-4
169 tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}"
170 tlm-update => "always"
171 tlm-update => "on" "change"
172 tlm-lim-seq =>
173 tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq
174 tlm-lim => "red" expr
175 tlm-lim => "orange" expr
176 tlm-lim => "yellow" expr
177 record-spec => record-spec-2
178 record-spec-0 => "product" "record" ident ":" type-name
179 record-spec-1 => record-spec-0
180 record-spec-1 => record-spec-0 "array"
181 record-spec-2 => record-spec-1
182 record-spec-2 => record-spec-1 "id" expr
183 prod-cont-spec => cont-spec-2
184 cont-spec-0 => "product" "container" ident
185 cont-spec-1 => cont-spec-0
186 cont-spec-1 => cont-spec-0 "id" expr
187 cont-spec-2 => cont-spec-1
188 cont-spec-2 => cont-spec-1 "default" "priority" expr
189 comp-inst-defn => comp-inst-7
190 comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr
191 comp-inst-1 => comp-inst-0
192 comp-inst-1 => comp-inst-0 "type" string
193 comp-inst-2 => comp-inst-1
194 comp-inst-2 => comp-inst-1 "at" string
195 comp-inst-3 => comp-inst-2
196 comp-inst-3 => comp-inst-2 "queue" "size" expr
197 comp-inst-4 => comp-inst-3
198 comp-inst-4 => comp-inst-3 "stack" "size" expr
199 comp-inst-5 => comp-inst-4
200 comp-inst-5 => comp-inst-4 "priority" expr
201 comp-inst-6 => comp-inst-5
202 comp-inst-6 => comp-inst-5 "cpu" expr
203 comp-inst-7 => comp-inst-6
204 comp-inst-7 => comp-inst-6 "{" string "}"
205 topology-defn => "topology" ident "{" topo-mem-seq "}"
206 topo-mem-seq =>
207 topo-mem-seq => topo-mem mem-sep topo-mem-seq
208 topo-mem => comp-inst-spec
209 topo-mem => conn-graph-spec
210 topo-mem => tlm-pktset-spec
211 topo-mem => "import" qual-ident
212 topo-mem => include-spec
213 comp-inst-spec => "instance" ident
214 comp-inst-spec => "private" "instance" ident
215 conn-graph-spec => "connections" ident "{" conn-seq "}"
216 conn-graph-spec => pattern-kind "connections" "instance" qual-ident
217 conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
218 pattern-kind => "command"
219 pattern-kind => "event"
220 pattern-kind => "health"
221 pattern-kind => "param"
222 pattern-kind => "telemetry"
223 pattern-kind => "time"
224 pattern-kind => "text" "event"
225 conn-seq =>
226 conn-seq => connection elt-sep conn-seq
227 connection => conn-from "->" conn-to
228 connection => "unmatched" conn-from "->" conn-to
229 conn-from => qual-ident
230 conn-from => qual-ident "[" expr "]"
231 conn-to => qual-ident
232 conn-to => qual-ident "[" expr "]"
233 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
234 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
235 tlm-pktgrp-mem-seq =>
236 tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
237 tlm-pktgrp-mem => include-spec
238 tlm-pktgrp-mem => tlm-pkt-spec
239 tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
240 tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
241 tlm-pkt-mem-seq =>
242 tlm-pkt-mem-seq => tlm-pkt-mem elt-sep tlm-pkt-mem-seq
243 tlm-pkt-mem => include-spec
244 tlm-pkt-mem => qual-ident
245 tlm-chan-id-seq =>
246 tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident
247 param-list =>
248 param-list => formal-param elt-sep param-list
249 formal-param => ident ":" type-name
250 formal-param => "ref" ident ":" type-name
251 queue-full-beh => queue-full-beh-1
252 queue-full-beh-1 => "assert"
253 queue-full-beh-1 => "block"
254 queue-full-beh-1 => "drop"
255 queue-full-beh-1 => "hook"
256 loc-spec => "locate" "instance" qual-ident "at" string
257 loc-spec => "locate" "component" qual-ident "at" string
258 loc-spec => "locate" "cnstant" qual-ident "at" string
259 loc-spec => "locate" "port" qual-ident "at" string
260 loc-spec => "locate" "state" "machine" qual-ident "at" string
261 loc-spec => "locate" "topology" qual-ident "at" string
262 loc-spec => "locate" "type" qual-ident "at" string
263 port-match-spec => "match" ident "with" ident
264 expr => add-expr
265 add-expr => mul-expr
266 add-expr => add-expr "+" mul-expr
267 add-expr => add-expr "-" mul-expr
268 mul-expr => unary-expr
269 mul-expr => mul-expr "*" unary-expr
270 mul-expr => mul-expr "/" unary-expr
271 unary-expr => prim-expr
272 unary-expr => "-" unary-expr
273 prim-expr => qual-ident
274 prim-expr => number
275 prim-expr => string
276 prim-expr => "[" expr-seq "]"
277 prim-expr => "{" struct-elt-seq "}"
278 prim-expr => "(" expr ")"
279 expr-seq => expr
280 expr-seq => expr elt-sep expr-seq
281 struct-elt-seq =>
282 struct-elt-seq => ident "=" expr elt-sep struct-elt-seq
283 number => '$float
284 number => '$fixed
285 ident => '$ident
286 string => '$string
287 qual-ident => qual-ident-1
288 qual-ident-1 => ident
289 qual-ident-1 => qual-ident-1 "." ident
290 qual-ident-seq =>
291 qual-ident-seq => qual-ident elt-sep qual-ident-seq
292 index => "[" expr "]"
293 type-name => ident
294 type-name => "I8"
295 type-name => "U8"
296 type-name => "I16"
297 type-name => "U16"
298 type-name => "I32"
299 type-name => "U32"
300 type-name => "I64"
301 type-name => "U64"
302 type-name => "F32"
303 type-name => "F64"
304 type-name => "bool"
305 type-name => "string"
306 type-name => "string" "size" expr
307 stmach-inst => stmach-inst-2
308 stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident
309 stmach-inst-1 => stmach-inst-0
310 stmach-inst-1 => stmach-inst-0 "priority" expr
311 stmach-inst-2 => stmach-inst-1
312 stmach-inst-2 => stmach-inst-1 queue-full-beh
313 stmach-defn => "state" "machine" ident
314 stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}"
315 stmach-mem-seq =>
316 stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq
317 stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
318 stmach-mem => "action" ident
319 stmach-mem => "action" ident ":" type-name
320 stmach-mem => "guard" ident
321 stmach-mem => "guard" ident ":" type-name
322 stmach-mem => "signal" ident
323 stmach-mem => "signal" ident ":" type-name
324 stmach-mem => "initial" trans-expr
325 stmach-mem => state-defn
326 state-defn => "state" ident
327 state-defn => "state" ident "{" state-defn-mem-seq "}"
328 state-defn-mem-seq =>
329 state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq
330 state-defn-mem => "initial" trans-expr
331 state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
332 state-defn-mem => state-defn
333 state-defn-mem => state-trans-spec
334 state-defn-mem => "entry" do-expr
335 state-defn-mem => "exit" do-expr
336 state-trans-spec => st-tran-spec-2
337 st-tran-spec-0 => "on" ident
338 st-tran-spec-1 => st-tran-spec-0
339 st-tran-spec-1 => st-tran-spec-0 "if" ident
340 st-tran-spec-2 => st-tran-spec-1 trans-or-do
341 trans-expr => trans-expr-1
342 trans-expr-0 => "enter" qual-ident
343 trans-expr-1 => trans-expr-0
344 trans-expr-1 => do-expr trans-expr-0
345 do-expr => "do" "{" action-seq "}"
346 action-seq =>
347 action-seq => ident elt-sep action-seq
348 trans-or-do => trans-expr
349 trans-or-do => do-expr

0:	$start => . translation-unit
	translation-unit => . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index ident
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-defn => . port-defn-2
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "cnstant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		"port" => shift 8
		enum-defn-0 => shift 9
		comp-inst-5 => shift 10
		port-defn-0 => shift 11
		"struct" => shift 12
		enum-defn-1 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		port-defn-1 => shift 18
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 21
		"locate" => shift 22
		"topology" => shift 23
		comp-inst-7 => shift 24
		comp-kind => shift 25
		port-defn-2 => shift 26
		struct-defn-1 => shift 27
		enum-defn-3 => shift 28
		"array" => shift 29
		"type" => shift 30
		"constant" => shift 31
		"module" => shift 32
		"include" => shift 33
		stmach-defn => shift 34
		enum-defn => shift 35
		array-defn => shift 36
		abs-type-defn => shift 37
		loc-spec => shift 38
		struct-defn => shift 39
		port-defn => shift 40
		module-defn => shift 41
		const-defn => shift 42
		topology-defn => shift 43
		comp-inst-defn => shift 44
		component-defn => shift 45
		include-spec => shift 46
		mod-mem => shift 47
		module-mem-seq => shift 48
		translation-unit => shift 49
		$default => reduce 9

1:	comp-inst-0 => "instance" . ident ":" qual-ident "base" "id" expr
	ident => . '$ident
		'$ident => shift 55
		ident => shift 86

2:	comp-inst-1 => comp-inst-0 . "type" string
	comp-inst-1 => comp-inst-0 .
		"type" => shift 85
		"\n" => reduce 191
		$default => reduce 191

3:	comp-inst-2 => comp-inst-1 . "at" string
	comp-inst-2 => comp-inst-1 .
		"at" => shift 84
		"\n" => reduce 193
		$default => reduce 193

4:	comp-inst-3 => comp-inst-2 . "queue" "size" expr
	comp-inst-3 => comp-inst-2 .
		"queue" => shift 83
		"\n" => reduce 195
		$default => reduce 195

5:	comp-inst-4 => comp-inst-3 . "stack" "size" expr
	comp-inst-4 => comp-inst-3 .
		"stack" => shift 82
		"\n" => reduce 197
		$default => reduce 197

6:	enum-defn-0 => "enum" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 81

7:	comp-inst-5 => comp-inst-4 . "priority" expr
	comp-inst-5 => comp-inst-4 .
		"priority" => shift 80
		"\n" => reduce 199
		$default => reduce 199

8:	port-defn-0 => "port" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 79

9:	enum-defn-1 => enum-defn-0 . ":" type-name
	enum-defn-1 => enum-defn-0 .
		":" => shift 78
		$default => reduce 30

10:	comp-inst-6 => comp-inst-5 . "cpu" expr
	comp-inst-6 => comp-inst-5 .
		"cpu" => shift 77
		"\n" => reduce 201
		$default => reduce 201

11:	port-defn-1 => port-defn-0 . "(" param-list ")"
	port-defn-1 => port-defn-0 .
		"(" => shift 76
		"\n" => reduce 54
		$default => reduce 54

12:	struct-defn-0 => "struct" . ident "{" struct-mem-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 75

13:	enum-defn-2 => enum-defn-1 . "{" enum-mem-seq "}"
		"{" => shift 74

14:	comp-inst-7 => comp-inst-6 . "{" string "}"
	comp-inst-7 => comp-inst-6 .
		"{" => shift 73
		"\n" => reduce 203
		$default => reduce 203

15:	comp-kind => "queued" .
		$default => reduce 61

16:	comp-kind => "passive" .
		$default => reduce 60

17:	comp-kind => "active" .
		$default => reduce 59

18:	port-defn-2 => port-defn-1 . "->" type-name
	port-defn-2 => port-defn-1 .
		"->" => shift 72
		"\n" => reduce 56
		$default => reduce 56

19:	struct-defn-1 => struct-defn-0 . "default" expr
	struct-defn-1 => struct-defn-0 .
		"default" => shift 71
		"\n" => reduce 41
		$default => reduce 41

20:	enum-defn-3 => enum-defn-2 . "default" expr
	enum-defn-3 => enum-defn-2 .
		"default" => shift 70
		"\n" => reduce 33
		$default => reduce 33

21:	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 69

22:	loc-spec => "locate" . "type" qual-ident "at" string
	loc-spec => "locate" . "topology" qual-ident "at" string
	loc-spec => "locate" . "state" "machine" qual-ident "at" string
	loc-spec => "locate" . "port" qual-ident "at" string
	loc-spec => "locate" . "cnstant" qual-ident "at" string
	loc-spec => "locate" . "component" qual-ident "at" string
	loc-spec => "locate" . "instance" qual-ident "at" string
		"instance" => shift 62
		"component" => shift 63
		"cnstant" => shift 64
		"port" => shift 65
		"state" => shift 66
		"topology" => shift 67
		"type" => shift 68

23:	topology-defn => "topology" . ident "{" topo-mem-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 61

24:	comp-inst-defn => comp-inst-7 .
		"\n" => reduce 189
		$default => reduce 189

25:	component-defn => comp-kind . "component" ident "{" comp-mem-seq "}"
		"component" => shift 60

26:	port-defn => port-defn-2 .
		"\n" => reduce 52
		$default => reduce 52

27:	struct-defn => struct-defn-1 .
		"\n" => reduce 39
		$default => reduce 39

28:	enum-defn => enum-defn-3 .
		"\n" => reduce 28
		$default => reduce 28

29:	array-defn => "array" . ident "=" index ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 59

30:	abs-type-defn => "type" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 58

31:	const-defn => "constant" . ident "=" expr
	ident => . '$ident
		'$ident => shift 55
		ident => shift 57

32:	module-defn => "module" . ident "{" module-mem-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 56

33:	include-spec => "include" . string
	string => . '$string
		'$string => shift 53
		string => shift 54

34:	mod-mem => stmach-defn .
		"\n" => reduce 23
		$default => reduce 23

35:	mod-mem => enum-defn .
		"\n" => reduce 22
		$default => reduce 22

36:	mod-mem => array-defn .
		"\n" => reduce 21
		$default => reduce 21

37:	mod-mem => abs-type-defn .
		"\n" => reduce 20
		$default => reduce 20

38:	mod-mem => loc-spec .
		"\n" => reduce 19
		$default => reduce 19

39:	mod-mem => struct-defn .
		"\n" => reduce 18
		$default => reduce 18

40:	mod-mem => port-defn .
		"\n" => reduce 17
		$default => reduce 17

41:	mod-mem => module-defn .
		"\n" => reduce 16
		$default => reduce 16

42:	mod-mem => const-defn .
		"\n" => reduce 15
		$default => reduce 15

43:	mod-mem => topology-defn .
		"\n" => reduce 14
		$default => reduce 14

44:	mod-mem => comp-inst-defn .
		"\n" => reduce 13
		$default => reduce 13

45:	mod-mem => component-defn .
		"\n" => reduce 12
		$default => reduce 12

46:	mod-mem => include-spec .
		"\n" => reduce 11
		$default => reduce 11

47:	module-mem-seq => mod-mem . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 50
		";" => shift 51
		mem-sep => shift 52

48:	translation-unit => module-mem-seq .
		$default => reduce 8

49:	$start => translation-unit .
		'$end => accept 0

50:	mem-sep => "\n" .
		"\n" => reduce 5
		$default => reduce 5

51:	mem-sep => ";" .
		"\n" => reduce 4
		$default => reduce 4

52:	mem-sep => mem-sep . "\n"
	module-mem-seq => mod-mem mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index ident
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-defn => . port-defn-2
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "cnstant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		"port" => shift 8
		enum-defn-0 => shift 9
		comp-inst-5 => shift 10
		port-defn-0 => shift 11
		"struct" => shift 12
		enum-defn-1 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		port-defn-1 => shift 18
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 21
		"locate" => shift 22
		"topology" => shift 23
		comp-inst-7 => shift 24
		comp-kind => shift 25
		port-defn-2 => shift 26
		struct-defn-1 => shift 27
		enum-defn-3 => shift 28
		"array" => shift 29
		"type" => shift 30
		"constant" => shift 31
		"module" => shift 32
		"include" => shift 33
		stmach-defn => shift 34
		enum-defn => shift 35
		array-defn => shift 36
		abs-type-defn => shift 37
		loc-spec => shift 38
		struct-defn => shift 39
		port-defn => shift 40
		module-defn => shift 41
		const-defn => shift 42
		topology-defn => shift 43
		comp-inst-defn => shift 44
		component-defn => shift 45
		include-spec => shift 46
		mod-mem => shift 47
		module-mem-seq => shift 148
		"\n" => shift 149
		$default => reduce 9

53:	string => '$string .
		"\n" => reduce 286
		$default => reduce 286

54:	include-spec => "include" string .
		"\n" => reduce 7
		$default => reduce 7

55:	ident => '$ident .
		"\n" => reduce 285
		$default => reduce 285

56:	module-defn => "module" ident . "{" module-mem-seq "}"
		"{" => shift 147

57:	const-defn => "constant" ident . "=" expr
		"=" => shift 146

58:	abs-type-defn => "type" ident .
		"\n" => reduce 26
		$default => reduce 26

59:	array-defn => "array" ident . "=" index ident
		"=" => shift 145

60:	component-defn => comp-kind "component" . ident "{" comp-mem-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 144

61:	topology-defn => "topology" ident . "{" topo-mem-seq "}"
		"{" => shift 143

62:	loc-spec => "locate" "instance" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 142

63:	loc-spec => "locate" "component" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 141

64:	loc-spec => "locate" "cnstant" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 140

65:	loc-spec => "locate" "port" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 139

66:	loc-spec => "locate" "state" . "machine" qual-ident "at" string
		"machine" => shift 138

67:	loc-spec => "locate" "topology" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 137

68:	loc-spec => "locate" "type" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 136

69:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 135

70:	enum-defn-3 => enum-defn-2 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 134

71:	struct-defn-1 => struct-defn-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 133

72:	port-defn-2 => port-defn-1 "->" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 132

73:	comp-inst-7 => comp-inst-6 "{" . string "}"
	string => . '$string
		'$string => shift 53
		string => shift 131

74:	enum-defn-2 => enum-defn-1 "{" . enum-mem-seq "}"
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident "=" expr
	ident => . '$ident
		'$ident => shift 55
		ident => shift 128
		enum-mem => shift 129
		enum-mem-seq => shift 130
		$default => reduce 35

75:	struct-defn-0 => "struct" ident . "{" struct-mem-seq "}"
		"{" => shift 127

76:	port-defn-1 => port-defn-0 "(" . param-list ")"
	param-list => .
	param-list => . formal-param elt-sep param-list
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 126
		$default => reduce 247

77:	comp-inst-6 => comp-inst-5 "cpu" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 122

78:	enum-defn-1 => enum-defn-0 ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 121

79:	port-defn-0 => "port" ident .
		"\n" => reduce 53
		$default => reduce 53

80:	comp-inst-5 => comp-inst-4 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 107

81:	enum-defn-0 => "enum" ident .
		$default => reduce 29

82:	comp-inst-4 => comp-inst-3 "stack" . "size" expr
		"size" => shift 91

83:	comp-inst-3 => comp-inst-2 "queue" . "size" expr
		"size" => shift 90

84:	comp-inst-2 => comp-inst-1 "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 89

85:	comp-inst-1 => comp-inst-0 "type" . string
	string => . '$string
		'$string => shift 53
		string => shift 88

86:	comp-inst-0 => "instance" ident . ":" qual-ident "base" "id" expr
		":" => shift 87

87:	comp-inst-0 => "instance" ident ":" . qual-ident "base" "id" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 212

88:	comp-inst-1 => comp-inst-0 "type" string .
		"\n" => reduce 192
		$default => reduce 192

89:	comp-inst-2 => comp-inst-1 "at" string .
		"\n" => reduce 194
		$default => reduce 194

90:	comp-inst-3 => comp-inst-2 "queue" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 211

91:	comp-inst-4 => comp-inst-3 "stack" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 210

92:	qual-ident-1 => ident .
		"\n" => reduce 288
		$default => reduce 288

93:	qual-ident-1 => qual-ident-1 . "." ident
	qual-ident => qual-ident-1 .
		"." => shift 209
		"\n" => reduce 287
		$default => reduce 287

94:	number => '$fixed .
		"\n" => reduce 284
		$default => reduce 284

95:	number => '$float .
		"\n" => reduce 283
		$default => reduce 283

96:	prim-expr => "(" . expr ")"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 208

97:	prim-expr => "{" . struct-elt-seq "}"
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 55
		ident => shift 206
		struct-elt-seq => shift 207
		$default => reduce 281

98:	prim-expr => "[" . expr-seq "]"
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 204
		expr-seq => shift 205

99:	prim-expr => string .
		"\n" => reduce 275
		$default => reduce 275

100:	prim-expr => number .
		"\n" => reduce 274
		$default => reduce 274

101:	prim-expr => qual-ident .
		"\n" => reduce 273
		$default => reduce 273

102:	unary-expr => "-" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 203

103:	unary-expr => prim-expr .
		"\n" => reduce 271
		$default => reduce 271

104:	mul-expr => unary-expr .
		"\n" => reduce 268
		$default => reduce 268

105:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => mul-expr .
		"*" => shift 201
		"/" => shift 202
		"\n" => reduce 265
		$default => reduce 265

106:	add-expr => add-expr . "-" mul-expr
	add-expr => add-expr . "+" mul-expr
	expr => add-expr .
		"+" => shift 199
		"-" => shift 200
		"\n" => reduce 264
		$default => reduce 264

107:	comp-inst-5 => comp-inst-4 "priority" expr .
		"\n" => reduce 200
		$default => reduce 200

108:	type-name => "string" . "size" expr
	type-name => "string" .
		"size" => shift 198
		"\n" => reduce 305
		$default => reduce 305

109:	type-name => "bool" .
		"\n" => reduce 304
		$default => reduce 304

110:	type-name => "F64" .
		"\n" => reduce 303
		$default => reduce 303

111:	type-name => "F32" .
		"\n" => reduce 302
		$default => reduce 302

112:	type-name => "U64" .
		"\n" => reduce 301
		$default => reduce 301

113:	type-name => "I64" .
		"\n" => reduce 300
		$default => reduce 300

114:	type-name => "U32" .
		"\n" => reduce 299
		$default => reduce 299

115:	type-name => "I32" .
		"\n" => reduce 298
		$default => reduce 298

116:	type-name => "U16" .
		"\n" => reduce 297
		$default => reduce 297

117:	type-name => "I16" .
		"\n" => reduce 296
		$default => reduce 296

118:	type-name => "U8" .
		"\n" => reduce 295
		$default => reduce 295

119:	type-name => "I8" .
		"\n" => reduce 294
		$default => reduce 294

120:	type-name => ident .
		"\n" => reduce 293
		$default => reduce 293

121:	enum-defn-1 => enum-defn-0 ":" type-name .
		$default => reduce 31

122:	comp-inst-6 => comp-inst-5 "cpu" expr .
		"\n" => reduce 202
		$default => reduce 202

123:	formal-param => "ref" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		ident => shift 197

124:	formal-param => ident . ":" type-name
		":" => shift 196

125:	param-list => formal-param . elt-sep param-list
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 195

126:	port-defn-1 => port-defn-0 "(" param-list . ")"
		")" => shift 194

127:	struct-defn-0 => "struct" ident "{" . struct-mem-seq "}"
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 187
		struct-mem-0 => shift 188
		struct-mem-1 => shift 189
		struct-mem-2 => shift 190
		struct-mem-3 => shift 191
		struct-mem => shift 192
		struct-mem-seq => shift 193
		$default => reduce 43

128:	enum-mem => ident . "=" expr
	enum-mem => ident .
		"=" => shift 186
		"\n" => reduce 37
		$default => reduce 37

129:	enum-mem-seq => enum-mem . elt-sep enum-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 185

130:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq . "}"
		"}" => shift 182

131:	comp-inst-7 => comp-inst-6 "{" string . "}"
		"}" => shift 181

132:	port-defn-2 => port-defn-1 "->" type-name .
		"\n" => reduce 57
		$default => reduce 57

133:	struct-defn-1 => struct-defn-0 "default" expr .
		"\n" => reduce 42
		$default => reduce 42

134:	enum-defn-3 => enum-defn-2 "default" expr .
		"\n" => reduce 34
		$default => reduce 34

135:	stmach-defn => "state" "machine" ident . "{" stmach-mem-seq "}"
	stmach-defn => "state" "machine" ident .
		"{" => shift 180
		"\n" => reduce 313
		$default => reduce 313

136:	loc-spec => "locate" "type" qual-ident . "at" string
		"at" => shift 179

137:	loc-spec => "locate" "topology" qual-ident . "at" string
		"at" => shift 178

138:	loc-spec => "locate" "state" "machine" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 177

139:	loc-spec => "locate" "port" qual-ident . "at" string
		"at" => shift 176

140:	loc-spec => "locate" "cnstant" qual-ident . "at" string
		"at" => shift 175

141:	loc-spec => "locate" "component" qual-ident . "at" string
		"at" => shift 174

142:	loc-spec => "locate" "instance" qual-ident . "at" string
		"at" => shift 173

143:	topology-defn => "topology" ident "{" . topo-mem-seq "}"
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	topo-mem => . include-spec
	include-spec => . "include" string
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 155
		"time" => shift 156
		"param" => shift 157
		"health" => shift 158
		"event" => shift 159
		"command" => shift 160
		"telemetry" => shift 161
		pattern-kind => shift 162
		"connections" => shift 163
		"private" => shift 164
		"instance" => shift 165
		"include" => shift 33
		include-spec => shift 166
		"import" => shift 167
		tlm-pktset-spec => shift 168
		conn-graph-spec => shift 169
		comp-inst-spec => shift 170
		topo-mem => shift 171
		topo-mem-seq => shift 172
		$default => reduce 206

144:	component-defn => comp-kind "component" ident . "{" comp-mem-seq "}"
		"{" => shift 154

145:	array-defn => "array" ident "=" . index ident
	index => . "[" expr "]"
		"[" => shift 152
		index => shift 153

146:	const-defn => "constant" ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 151

147:	module-defn => "module" ident "{" . module-mem-seq "}"
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	mod-mem => . include-spec
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	include-spec => . "include" string
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	abs-type-defn => . "type" ident
	array-defn => . "array" ident "=" index ident
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-defn => . port-defn-2
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "cnstant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-0 => . "enum" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		comp-inst-3 => shift 5
		"enum" => shift 6
		comp-inst-4 => shift 7
		"port" => shift 8
		enum-defn-0 => shift 9
		comp-inst-5 => shift 10
		port-defn-0 => shift 11
		"struct" => shift 12
		enum-defn-1 => shift 13
		comp-inst-6 => shift 14
		"queued" => shift 15
		"passive" => shift 16
		"active" => shift 17
		port-defn-1 => shift 18
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 21
		"locate" => shift 22
		"topology" => shift 23
		comp-inst-7 => shift 24
		comp-kind => shift 25
		port-defn-2 => shift 26
		struct-defn-1 => shift 27
		enum-defn-3 => shift 28
		"array" => shift 29
		"type" => shift 30
		"constant" => shift 31
		"module" => shift 32
		"include" => shift 33
		stmach-defn => shift 34
		enum-defn => shift 35
		array-defn => shift 36
		abs-type-defn => shift 37
		loc-spec => shift 38
		struct-defn => shift 39
		port-defn => shift 40
		module-defn => shift 41
		const-defn => shift 42
		topology-defn => shift 43
		comp-inst-defn => shift 44
		component-defn => shift 45
		include-spec => shift 46
		mod-mem => shift 47
		module-mem-seq => shift 150
		$default => reduce 9

148:	module-mem-seq => mod-mem mem-sep module-mem-seq .
		$default => reduce 10

149:	mem-sep => mem-sep "\n" .
		"\n" => reduce 6
		$default => reduce 6

150:	module-defn => "module" ident "{" module-mem-seq . "}"
		"}" => shift 340

151:	const-defn => "constant" ident "=" expr .
		"\n" => reduce 25
		$default => reduce 25

152:	index => "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 339

153:	array-defn => "array" ident "=" index . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 338

154:	component-defn => comp-kind "component" ident "{" . comp-mem-seq "}"
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem => . include-spec
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	include-spec => . "include" string
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	stmach-inst => . stmach-inst-2
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-0 => . "enum" ident
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 262
		event-spec-0 => shift 263
		"time" => shift 264
		"text" => shift 265
		"telemetry" => shift 266
		"param" => shift 267
		"event" => shift 268
		"command" => shift 269
		"output" => shift 270
		tlm-chan-1 => shift 271
		param-spec-0 => shift 272
		event-spec-1 => shift 273
		"sync" => shift 274
		"guarded" => shift 275
		"async" => shift 276
		cmd-spec-0 => shift 277
		"internal" => shift 278
		spc-port-kind => shift 279
		gen-port-inst-0 => shift 280
		"enum" => shift 6
		"product" => shift 281
		tlm-chan-2 => shift 282
		param-spec-1 => shift 283
		event-spec-2 => shift 284
		cmd-spec-1 => shift 285
		int-port-defn-0 => shift 286
		input-port-kind => shift 287
		spc-port-inst-0 => shift 288
		gen-port-inst-1 => shift 289
		enum-defn-0 => shift 9
		stmach-inst-0 => shift 290
		cont-spec-0 => shift 291
		record-spec-0 => shift 292
		tlm-chan-3 => shift 293
		param-spec-2 => shift 294
		event-spec-3 => shift 295
		cmd-spec-2 => shift 296
		int-port-defn-1 => shift 297
		spc-port-inst-1 => shift 298
		gen-port-inst-2 => shift 299
		"struct" => shift 12
		enum-defn-1 => shift 13
		stmach-inst-1 => shift 300
		cont-spec-1 => shift 301
		record-spec-1 => shift 302
		tlm-chan-4 => shift 303
		param-spec-3 => shift 304
		event-spec-4 => shift 305
		cmd-spec-3 => shift 306
		int-port-defn-2 => shift 307
		spc-port-inst-2 => shift 308
		gen-port-inst-3 => shift 309
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 310
		stmach-inst-2 => shift 311
		"match" => shift 312
		cont-spec-2 => shift 313
		record-spec-2 => shift 314
		tlm-chan-5 => shift 315
		param-spec-4 => shift 316
		event-spec-5 => shift 317
		cmd-spec-4 => shift 318
		int-port-defn-3 => shift 319
		spc-port-inst-3 => shift 320
		gen-port-inst-4 => shift 321
		struct-defn-1 => shift 27
		enum-defn-3 => shift 28
		"include" => shift 33
		stmach-inst => shift 322
		stmach-defn => shift 323
		tlm-chan-spec => shift 324
		prod-cont-spec => shift 325
		record-spec => shift 326
		param-spec => shift 327
		event-spec => shift 328
		command-spec => shift 329
		port-match-spec => shift 330
		port-inst => shift 331
		int-port-spec => shift 332
		struct-defn => shift 333
		enum-defn => shift 334
		include-spec => shift 335
		comp-mem => shift 336
		comp-mem-seq => shift 337
		$default => reduce 62

155:	pattern-kind => "text" . "event"
		"event" => shift 261

156:	pattern-kind => "time" .
		$default => reduce 223

157:	pattern-kind => "param" .
		$default => reduce 221

158:	pattern-kind => "health" .
		$default => reduce 220

159:	pattern-kind => "event" .
		$default => reduce 219

160:	pattern-kind => "command" .
		$default => reduce 218

161:	pattern-kind => "telemetry" .
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}"
		"packets" => shift 260
		$default => reduce 222

162:	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident "{" qual-ident-seq "}"
	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident
		"connections" => shift 259

163:	conn-graph-spec => "connections" . ident "{" conn-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 258

164:	comp-inst-spec => "private" . "instance" ident
		"instance" => shift 257

165:	comp-inst-spec => "instance" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 256

166:	topo-mem => include-spec .
		"\n" => reduce 212
		$default => reduce 212

167:	topo-mem => "import" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 255

168:	topo-mem => tlm-pktset-spec .
		"\n" => reduce 210
		$default => reduce 210

169:	topo-mem => conn-graph-spec .
		"\n" => reduce 209
		$default => reduce 209

170:	topo-mem => comp-inst-spec .
		"\n" => reduce 208
		$default => reduce 208

171:	topo-mem-seq => topo-mem . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 50
		";" => shift 51
		mem-sep => shift 254

172:	topology-defn => "topology" ident "{" topo-mem-seq . "}"
		"}" => shift 253

173:	loc-spec => "locate" "instance" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 252

174:	loc-spec => "locate" "component" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 251

175:	loc-spec => "locate" "cnstant" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 250

176:	loc-spec => "locate" "port" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 249

177:	loc-spec => "locate" "state" "machine" qual-ident . "at" string
		"at" => shift 248

178:	loc-spec => "locate" "topology" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 247

179:	loc-spec => "locate" "type" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 246

180:	stmach-defn => "state" "machine" ident "{" . stmach-mem-seq "}"
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 237
		state-defn => shift 238
		"initial" => shift 239
		"signal" => shift 240
		"guard" => shift 241
		"action" => shift 242
		"choice" => shift 243
		stmach-mem => shift 244
		stmach-mem-seq => shift 245
		$default => reduce 315

181:	comp-inst-7 => comp-inst-6 "{" string "}" .
		"\n" => reduce 204
		$default => reduce 204

182:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}" .
		"\n" => reduce 32
		$default => reduce 32

183:	elt-sep => "\n" .
		"\n" => reduce 2
		$default => reduce 2

184:	elt-sep => "," .
		"\n" => reduce 1
		$default => reduce 1

185:	elt-sep => elt-sep . "\n"
	enum-mem-seq => enum-mem elt-sep . enum-mem-seq
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident "=" expr
	ident => . '$ident
		'$ident => shift 55
		ident => shift 128
		enum-mem => shift 129
		enum-mem-seq => shift 236
		"\n" => shift 228
		$default => reduce 35

186:	enum-mem => ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 235

187:	struct-mem-0 => ident . ":"
		":" => shift 234

188:	struct-mem-1 => struct-mem-0 . "[" expr "]"
	struct-mem-1 => struct-mem-0 .
		"[" => shift 233
		$default => reduce 47

189:	struct-mem-2 => struct-mem-1 . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 232

190:	struct-mem-3 => struct-mem-2 . "format" string
	struct-mem-3 => struct-mem-2 .
		"format" => shift 231
		"\n" => reduce 50
		$default => reduce 50

191:	struct-mem => struct-mem-3 .
		"\n" => reduce 45
		$default => reduce 45

192:	struct-mem-seq => struct-mem . mem-sep struct-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 50
		";" => shift 51
		mem-sep => shift 230

193:	struct-defn-0 => "struct" ident "{" struct-mem-seq . "}"
		"}" => shift 229

194:	port-defn-1 => port-defn-0 "(" param-list ")" .
		"\n" => reduce 55
		$default => reduce 55

195:	elt-sep => elt-sep . "\n"
	param-list => formal-param elt-sep . param-list
	param-list => .
	param-list => . formal-param elt-sep param-list
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 227
		"\n" => shift 228
		$default => reduce 247

196:	formal-param => ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 226

197:	formal-param => "ref" ident . ":" type-name
		":" => shift 225

198:	type-name => "string" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 224

199:	add-expr => add-expr "+" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 223

200:	add-expr => add-expr "-" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 222

201:	mul-expr => mul-expr "*" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 221

202:	mul-expr => mul-expr "/" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 220

203:	unary-expr => "-" unary-expr .
		"\n" => reduce 272
		$default => reduce 272

204:	expr-seq => expr . elt-sep expr-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	expr-seq => expr .
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 219
		$default => reduce 279

205:	prim-expr => "[" expr-seq . "]"
		"]" => shift 218

206:	struct-elt-seq => ident . "=" expr elt-sep struct-elt-seq
		"=" => shift 217

207:	prim-expr => "{" struct-elt-seq . "}"
		"}" => shift 216

208:	prim-expr => "(" expr . ")"
		")" => shift 215

209:	qual-ident-1 => qual-ident-1 "." . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 214

210:	comp-inst-4 => comp-inst-3 "stack" "size" expr .
		"\n" => reduce 198
		$default => reduce 198

211:	comp-inst-3 => comp-inst-2 "queue" "size" expr .
		"\n" => reduce 196
		$default => reduce 196

212:	comp-inst-0 => "instance" ident ":" qual-ident . "base" "id" expr
		"base" => shift 213

213:	comp-inst-0 => "instance" ident ":" qual-ident "base" . "id" expr
		"id" => shift 436

214:	qual-ident-1 => qual-ident-1 "." ident .
		"\n" => reduce 289
		$default => reduce 289

215:	prim-expr => "(" expr ")" .
		"\n" => reduce 278
		$default => reduce 278

216:	prim-expr => "{" struct-elt-seq "}" .
		"\n" => reduce 277
		$default => reduce 277

217:	struct-elt-seq => ident "=" . expr elt-sep struct-elt-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 435

218:	prim-expr => "[" expr-seq "]" .
		"\n" => reduce 276
		$default => reduce 276

219:	elt-sep => elt-sep . "\n"
	expr-seq => expr elt-sep . expr-seq
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 204
		expr-seq => shift 434
		"\n" => shift 228

220:	mul-expr => mul-expr "/" unary-expr .
		"\n" => reduce 270
		$default => reduce 270

221:	mul-expr => mul-expr "*" unary-expr .
		"\n" => reduce 269
		$default => reduce 269

222:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "-" mul-expr .
		"*" => shift 201
		"/" => shift 202
		"\n" => reduce 267
		$default => reduce 267

223:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "+" mul-expr .
		"*" => shift 201
		"/" => shift 202
		"\n" => reduce 266
		$default => reduce 266

224:	type-name => "string" "size" expr .
		"\n" => reduce 306
		$default => reduce 306

225:	formal-param => "ref" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 433

226:	formal-param => ident ":" type-name .
		"\n" => reduce 249
		$default => reduce 249

227:	param-list => formal-param elt-sep param-list .
		$default => reduce 248

228:	elt-sep => elt-sep "\n" .
		"\n" => reduce 3
		$default => reduce 3

229:	struct-defn-0 => "struct" ident "{" struct-mem-seq "}" .
		"\n" => reduce 40
		$default => reduce 40

230:	mem-sep => mem-sep . "\n"
	struct-mem-seq => struct-mem mem-sep . struct-mem-seq
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 187
		struct-mem-0 => shift 188
		struct-mem-1 => shift 189
		struct-mem-2 => shift 190
		struct-mem-3 => shift 191
		struct-mem => shift 192
		struct-mem-seq => shift 432
		"\n" => shift 149
		$default => reduce 43

231:	struct-mem-3 => struct-mem-2 "format" . string
	string => . '$string
		'$string => shift 53
		string => shift 431

232:	struct-mem-2 => struct-mem-1 type-name .
		"\n" => reduce 49
		$default => reduce 49

233:	struct-mem-1 => struct-mem-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 430

234:	struct-mem-0 => ident ":" .
		$default => reduce 46

235:	enum-mem => ident "=" expr .
		"\n" => reduce 38
		$default => reduce 38

236:	enum-mem-seq => enum-mem elt-sep enum-mem-seq .
		$default => reduce 36

237:	state-defn => "state" . ident "{" state-defn-mem-seq "}"
	ident => . '$ident
	state-defn => "state" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 429

238:	stmach-mem => state-defn .
		"\n" => reduce 325
		$default => reduce 325

239:	stmach-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		"enter" => shift 424
		do-expr => shift 425
		trans-expr-0 => shift 426
		trans-expr-1 => shift 427
		trans-expr => shift 428

240:	stmach-mem => "signal" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "signal" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 422

241:	stmach-mem => "guard" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "guard" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 421

242:	stmach-mem => "action" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "action" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 420

243:	stmach-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 419

244:	stmach-mem-seq => stmach-mem . mem-sep stmach-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 50
		";" => shift 51
		mem-sep => shift 418

245:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq . "}"
		"}" => shift 417

246:	loc-spec => "locate" "type" qual-ident "at" string .
		"\n" => reduce 262
		$default => reduce 262

247:	loc-spec => "locate" "topology" qual-ident "at" string .
		"\n" => reduce 261
		$default => reduce 261

248:	loc-spec => "locate" "state" "machine" qual-ident "at" . string
	string => . '$string
		'$string => shift 53
		string => shift 416

249:	loc-spec => "locate" "port" qual-ident "at" string .
		"\n" => reduce 259
		$default => reduce 259

250:	loc-spec => "locate" "cnstant" qual-ident "at" string .
		"\n" => reduce 258
		$default => reduce 258

251:	loc-spec => "locate" "component" qual-ident "at" string .
		"\n" => reduce 257
		$default => reduce 257

252:	loc-spec => "locate" "instance" qual-ident "at" string .
		"\n" => reduce 256
		$default => reduce 256

253:	topology-defn => "topology" ident "{" topo-mem-seq "}" .
		"\n" => reduce 205
		$default => reduce 205

254:	mem-sep => mem-sep . "\n"
	topo-mem-seq => topo-mem mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	topo-mem => . include-spec
	include-spec => . "include" string
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 155
		"time" => shift 156
		"param" => shift 157
		"health" => shift 158
		"event" => shift 159
		"command" => shift 160
		"telemetry" => shift 161
		pattern-kind => shift 162
		"connections" => shift 163
		"private" => shift 164
		"instance" => shift 165
		"include" => shift 33
		include-spec => shift 166
		"import" => shift 167
		tlm-pktset-spec => shift 168
		conn-graph-spec => shift 169
		comp-inst-spec => shift 170
		topo-mem => shift 171
		topo-mem-seq => shift 415
		"\n" => shift 149
		$default => reduce 206

255:	topo-mem => "import" qual-ident .
		"\n" => reduce 211
		$default => reduce 211

256:	comp-inst-spec => "instance" ident .
		"\n" => reduce 213
		$default => reduce 213

257:	comp-inst-spec => "private" "instance" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 414

258:	conn-graph-spec => "connections" ident . "{" conn-seq "}"
		"{" => shift 413

259:	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident
	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident "{" qual-ident-seq "}"
		"instance" => shift 412

260:	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}"
	ident => . '$ident
	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 411

261:	pattern-kind => "text" "event" .
		$default => reduce 224

262:	tlm-chan-1 => tlm-chan-0 . "id" expr
	tlm-chan-1 => tlm-chan-0 .
		"id" => shift 410
		"\n" => reduce 160
		$default => reduce 160

263:	event-spec-1 => event-spec-0 . "(" param-list ")"
	event-spec-1 => event-spec-0 .
		"(" => shift 409
		$default => reduce 133

264:	spc-port-kind => "time" . "get"
		"get" => shift 408

265:	spc-port-kind => "text" . "event"
		"event" => shift 407

266:	tlm-chan-0 => "telemetry" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "telemetry" .
		'$ident => shift 55
		ident => shift 406
		$default => reduce 125

267:	param-spec-0 => "param" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 403
		"set" => shift 404
		'$ident => shift 55
		ident => shift 405

268:	event-spec-0 => "event" . ident
	ident => . '$ident
	spc-port-kind => "event" .
		'$ident => shift 55
		ident => shift 402
		$default => reduce 118

269:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
		"recv" => shift 399
		"reg" => shift 400
		"resp" => shift 401

270:	gen-port-inst-0 => "output" . "port" ident ":"
		"port" => shift 398

271:	tlm-chan-2 => tlm-chan-1 . "update" tlm-update
	tlm-chan-2 => tlm-chan-1 .
		"update" => shift 397
		"\n" => reduce 162
		$default => reduce 162

272:	param-spec-1 => param-spec-0 . "default" expr
	param-spec-1 => param-spec-0 .
		"default" => shift 396
		"\n" => reduce 150
		$default => reduce 150

273:	event-spec-2 => event-spec-1 . "severity" severity
		"severity" => shift 395

274:	input-port-kind => "sync" .
		$default => reduce 130

275:	input-port-kind => "guarded" .
		$default => reduce 129

276:	input-port-kind => "async" .
		$default => reduce 128

277:	cmd-spec-1 => cmd-spec-0 . "(" param-list ")"
	cmd-spec-1 => cmd-spec-0 .
		"(" => shift 394
		"\n" => reduce 107
		$default => reduce 107

278:	int-port-defn-0 => "internal" . "port" ident
		"port" => shift 393

279:	spc-port-inst-0 => spc-port-kind . "port" ident
		"port" => shift 392

280:	gen-port-inst-1 => gen-port-inst-0 . "[" expr "]"
	gen-port-inst-1 => gen-port-inst-0 .
		"[" => shift 391
		$default => reduce 82

281:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
	cont-spec-0 => "product" . "container" ident
	record-spec-0 => "product" . "record" ident ":" type-name
		"record" => shift 385
		"container" => shift 386
		"get" => shift 387
		"recv" => shift 388
		"request" => shift 389
		"send" => shift 390

282:	tlm-chan-3 => tlm-chan-2 . "format" string
	tlm-chan-3 => tlm-chan-2 .
		"format" => shift 384
		"\n" => reduce 164
		$default => reduce 164

283:	param-spec-2 => param-spec-1 . "id" expr
	param-spec-2 => param-spec-1 .
		"id" => shift 383
		"\n" => reduce 152
		$default => reduce 152

284:	event-spec-3 => event-spec-2 . "id" expr
	event-spec-3 => event-spec-2 .
		"id" => shift 382
		$default => reduce 136

285:	cmd-spec-2 => cmd-spec-1 . "opcode" expr
	cmd-spec-2 => cmd-spec-1 .
		"opcode" => shift 381
		"\n" => reduce 109
		$default => reduce 109

286:	int-port-defn-1 => int-port-defn-0 . "(" param-list ")"
	int-port-defn-1 => int-port-defn-0 .
		"(" => shift 380
		"\n" => reduce 99
		$default => reduce 99

287:	cmd-spec-0 => input-port-kind . "command" ident
	gen-port-inst-0 => input-port-kind . "input" "port" ident ":"
	spc-port-inst-1 => input-port-kind . spc-port-inst-0
	spc-port-inst-0 => . spc-port-kind "port" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
		"time" => shift 264
		"text" => shift 265
		"telemetry" => shift 373
		"product" => shift 374
		"param" => shift 375
		"event" => shift 376
		spc-port-kind => shift 279
		spc-port-inst-0 => shift 377
		"input" => shift 378
		"command" => shift 379

288:	spc-port-inst-1 => spc-port-inst-0 .
		"\n" => reduce 91
		$default => reduce 91

289:	gen-port-inst-2 => gen-port-inst-1 . "serial"
	gen-port-inst-2 => gen-port-inst-1 . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 371
		"serial" => shift 372

290:	stmach-inst-1 => stmach-inst-0 . "priority" expr
	stmach-inst-1 => stmach-inst-0 .
		"priority" => shift 370
		"\n" => reduce 309
		$default => reduce 309

291:	cont-spec-1 => cont-spec-0 . "id" expr
	cont-spec-1 => cont-spec-0 .
		"id" => shift 369
		"\n" => reduce 185
		$default => reduce 185

292:	record-spec-1 => record-spec-0 . "array"
	record-spec-1 => record-spec-0 .
		"array" => shift 368
		"\n" => reduce 179
		$default => reduce 179

293:	tlm-chan-4 => tlm-chan-3 . "low" "{" tlm-lim-seq "}"
	tlm-chan-4 => tlm-chan-3 .
		"low" => shift 367
		"\n" => reduce 166
		$default => reduce 166

294:	param-spec-3 => param-spec-2 . "set" "opcode" expr
	param-spec-3 => param-spec-2 .
		"set" => shift 366
		"\n" => reduce 154
		$default => reduce 154

295:	event-spec-4 => event-spec-3 . "format" string
		"format" => shift 365

296:	cmd-spec-3 => cmd-spec-2 . "priority" expr
	cmd-spec-3 => cmd-spec-2 .
		"priority" => shift 364
		"\n" => reduce 111
		$default => reduce 111

297:	int-port-defn-2 => int-port-defn-1 . "priority" expr
	int-port-defn-2 => int-port-defn-1 .
		"priority" => shift 363
		"\n" => reduce 101
		$default => reduce 101

298:	spc-port-inst-2 => spc-port-inst-1 . "priority" expr
	spc-port-inst-2 => spc-port-inst-1 .
		"priority" => shift 362
		"\n" => reduce 93
		$default => reduce 93

299:	gen-port-inst-3 => gen-port-inst-2 . "priority" expr
	gen-port-inst-3 => gen-port-inst-2 .
		"priority" => shift 361
		"\n" => reduce 86
		$default => reduce 86

300:	stmach-inst-2 => stmach-inst-1 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	stmach-inst-2 => stmach-inst-1 .
		"hook" => shift 346
		"drop" => shift 347
		"block" => shift 348
		"assert" => shift 349
		queue-full-beh-1 => shift 350
		queue-full-beh => shift 360
		"\n" => reduce 311
		$default => reduce 311

301:	cont-spec-2 => cont-spec-1 . "default" "priority" expr
	cont-spec-2 => cont-spec-1 .
		"default" => shift 359
		"\n" => reduce 187
		$default => reduce 187

302:	record-spec-2 => record-spec-1 . "id" expr
	record-spec-2 => record-spec-1 .
		"id" => shift 358
		"\n" => reduce 181
		$default => reduce 181

303:	tlm-chan-5 => tlm-chan-4 . "high" "{" tlm-lim-seq "}"
	tlm-chan-5 => tlm-chan-4 .
		"high" => shift 357
		"\n" => reduce 168
		$default => reduce 168

304:	param-spec-4 => param-spec-3 . "save" "opcode" expr
	param-spec-4 => param-spec-3 .
		"save" => shift 356
		"\n" => reduce 156
		$default => reduce 156

305:	event-spec-5 => event-spec-4 . "throttle" expr
	event-spec-5 => event-spec-4 .
		"throttle" => shift 355
		"\n" => reduce 139
		$default => reduce 139

306:	cmd-spec-4 => cmd-spec-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	cmd-spec-4 => cmd-spec-3 .
		"hook" => shift 346
		"drop" => shift 347
		"block" => shift 348
		"assert" => shift 349
		queue-full-beh-1 => shift 350
		queue-full-beh => shift 354
		"\n" => reduce 113
		$default => reduce 113

307:	int-port-defn-3 => int-port-defn-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	int-port-defn-3 => int-port-defn-2 .
		"hook" => shift 346
		"drop" => shift 347
		"block" => shift 348
		"assert" => shift 349
		queue-full-beh-1 => shift 350
		queue-full-beh => shift 353
		"\n" => reduce 103
		$default => reduce 103

308:	spc-port-inst-3 => spc-port-inst-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	spc-port-inst-3 => spc-port-inst-2 .
		"hook" => shift 346
		"drop" => shift 347
		"block" => shift 348
		"assert" => shift 349
		queue-full-beh-1 => shift 350
		queue-full-beh => shift 352
		"\n" => reduce 95
		$default => reduce 95

309:	gen-port-inst-4 => gen-port-inst-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	gen-port-inst-4 => gen-port-inst-3 .
		"hook" => shift 346
		"drop" => shift 347
		"block" => shift 348
		"assert" => shift 349
		queue-full-beh-1 => shift 350
		queue-full-beh => shift 351
		"\n" => reduce 88
		$default => reduce 88

310:	stmach-inst-0 => "state" . "machine" "instance" ident ":" qual-ident
	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 345

311:	stmach-inst => stmach-inst-2 .
		"\n" => reduce 307
		$default => reduce 307

312:	port-match-spec => "match" . ident "with" ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 344

313:	prod-cont-spec => cont-spec-2 .
		"\n" => reduce 183
		$default => reduce 183

314:	record-spec => record-spec-2 .
		"\n" => reduce 177
		$default => reduce 177

315:	tlm-chan-spec => tlm-chan-5 .
		"\n" => reduce 158
		$default => reduce 158

316:	param-spec => param-spec-4 .
		"\n" => reduce 148
		$default => reduce 148

317:	event-spec => event-spec-5 .
		"\n" => reduce 131
		$default => reduce 131

318:	command-spec => cmd-spec-4 .
		"\n" => reduce 105
		$default => reduce 105

319:	int-port-spec => int-port-defn-3 .
		"\n" => reduce 97
		$default => reduce 97

320:	port-inst => spc-port-inst-3 .
		"\n" => reduce 79
		$default => reduce 79

321:	port-inst => gen-port-inst-4 .
		"\n" => reduce 78
		$default => reduce 78

322:	comp-mem => stmach-inst .
		"\n" => reduce 77
		$default => reduce 77

323:	comp-mem => stmach-defn .
		"\n" => reduce 76
		$default => reduce 76

324:	comp-mem => tlm-chan-spec .
		"\n" => reduce 75
		$default => reduce 75

325:	comp-mem => prod-cont-spec .
		"\n" => reduce 74
		$default => reduce 74

326:	comp-mem => record-spec .
		"\n" => reduce 73
		$default => reduce 73

327:	comp-mem => param-spec .
		"\n" => reduce 72
		$default => reduce 72

328:	comp-mem => event-spec .
		"\n" => reduce 71
		$default => reduce 71

329:	comp-mem => command-spec .
		"\n" => reduce 70
		$default => reduce 70

330:	comp-mem => port-match-spec .
		"\n" => reduce 69
		$default => reduce 69

331:	comp-mem => port-inst .
		"\n" => reduce 68
		$default => reduce 68

332:	comp-mem => int-port-spec .
		"\n" => reduce 67
		$default => reduce 67

333:	comp-mem => struct-defn .
		"\n" => reduce 66
		$default => reduce 66

334:	comp-mem => enum-defn .
		"\n" => reduce 65
		$default => reduce 65

335:	comp-mem => include-spec .
		"\n" => reduce 64
		$default => reduce 64

336:	comp-mem-seq => comp-mem . mem-sep comp-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 50
		";" => shift 51
		mem-sep => shift 343

337:	component-defn => comp-kind "component" ident "{" comp-mem-seq . "}"
		"}" => shift 342

338:	array-defn => "array" ident "=" index ident .
		"\n" => reduce 27
		$default => reduce 27

339:	index => "[" expr . "]"
		"]" => shift 341

340:	module-defn => "module" ident "{" module-mem-seq "}" .
		"\n" => reduce 24
		$default => reduce 24

341:	index => "[" expr "]" .
		$default => reduce 292

342:	component-defn => comp-kind "component" ident "{" comp-mem-seq "}" .
		"\n" => reduce 58
		$default => reduce 58

343:	mem-sep => mem-sep . "\n"
	comp-mem-seq => comp-mem mem-sep . comp-mem-seq
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem => . include-spec
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	include-spec => . "include" string
	enum-defn => . enum-defn-3
	struct-defn => . struct-defn-1
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	stmach-inst => . stmach-inst-2
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-0 => . "enum" ident
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 262
		event-spec-0 => shift 263
		"time" => shift 264
		"text" => shift 265
		"telemetry" => shift 266
		"param" => shift 267
		"event" => shift 268
		"command" => shift 269
		"output" => shift 270
		tlm-chan-1 => shift 271
		param-spec-0 => shift 272
		event-spec-1 => shift 273
		"sync" => shift 274
		"guarded" => shift 275
		"async" => shift 276
		cmd-spec-0 => shift 277
		"internal" => shift 278
		spc-port-kind => shift 279
		gen-port-inst-0 => shift 280
		"enum" => shift 6
		"product" => shift 281
		tlm-chan-2 => shift 282
		param-spec-1 => shift 283
		event-spec-2 => shift 284
		cmd-spec-1 => shift 285
		int-port-defn-0 => shift 286
		input-port-kind => shift 287
		spc-port-inst-0 => shift 288
		gen-port-inst-1 => shift 289
		enum-defn-0 => shift 9
		stmach-inst-0 => shift 290
		cont-spec-0 => shift 291
		record-spec-0 => shift 292
		tlm-chan-3 => shift 293
		param-spec-2 => shift 294
		event-spec-3 => shift 295
		cmd-spec-2 => shift 296
		int-port-defn-1 => shift 297
		spc-port-inst-1 => shift 298
		gen-port-inst-2 => shift 299
		"struct" => shift 12
		enum-defn-1 => shift 13
		stmach-inst-1 => shift 300
		cont-spec-1 => shift 301
		record-spec-1 => shift 302
		tlm-chan-4 => shift 303
		param-spec-3 => shift 304
		event-spec-4 => shift 305
		cmd-spec-3 => shift 306
		int-port-defn-2 => shift 307
		spc-port-inst-2 => shift 308
		gen-port-inst-3 => shift 309
		struct-defn-0 => shift 19
		enum-defn-2 => shift 20
		"state" => shift 310
		stmach-inst-2 => shift 311
		"match" => shift 312
		cont-spec-2 => shift 313
		record-spec-2 => shift 314
		tlm-chan-5 => shift 315
		param-spec-4 => shift 316
		event-spec-5 => shift 317
		cmd-spec-4 => shift 318
		int-port-defn-3 => shift 319
		spc-port-inst-3 => shift 320
		gen-port-inst-4 => shift 321
		struct-defn-1 => shift 27
		enum-defn-3 => shift 28
		"include" => shift 33
		stmach-inst => shift 322
		stmach-defn => shift 323
		tlm-chan-spec => shift 324
		prod-cont-spec => shift 325
		record-spec => shift 326
		param-spec => shift 327
		event-spec => shift 328
		command-spec => shift 329
		port-match-spec => shift 330
		port-inst => shift 331
		int-port-spec => shift 332
		struct-defn => shift 333
		enum-defn => shift 334
		include-spec => shift 335
		comp-mem => shift 336
		comp-mem-seq => shift 500
		"\n" => shift 149
		$default => reduce 62

344:	port-match-spec => "match" ident . "with" ident
		"with" => shift 499

345:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
	stmach-inst-0 => "state" "machine" . "instance" ident ":" qual-ident
		"instance" => shift 498
		'$ident => shift 55
		ident => shift 135

346:	queue-full-beh-1 => "hook" .
		"\n" => reduce 255
		$default => reduce 255

347:	queue-full-beh-1 => "drop" .
		"\n" => reduce 254
		$default => reduce 254

348:	queue-full-beh-1 => "block" .
		"\n" => reduce 253
		$default => reduce 253

349:	queue-full-beh-1 => "assert" .
		"\n" => reduce 252
		$default => reduce 252

350:	queue-full-beh => queue-full-beh-1 .
		"\n" => reduce 251
		$default => reduce 251

351:	gen-port-inst-4 => gen-port-inst-3 queue-full-beh .
		"\n" => reduce 89
		$default => reduce 89

352:	spc-port-inst-3 => spc-port-inst-2 queue-full-beh .
		"\n" => reduce 96
		$default => reduce 96

353:	int-port-defn-3 => int-port-defn-2 queue-full-beh .
		"\n" => reduce 104
		$default => reduce 104

354:	cmd-spec-4 => cmd-spec-3 queue-full-beh .
		"\n" => reduce 114
		$default => reduce 114

355:	event-spec-5 => event-spec-4 "throttle" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 497

356:	param-spec-4 => param-spec-3 "save" . "opcode" expr
		"opcode" => shift 496

357:	tlm-chan-5 => tlm-chan-4 "high" . "{" tlm-lim-seq "}"
		"{" => shift 495

358:	record-spec-2 => record-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 494

359:	cont-spec-2 => cont-spec-1 "default" . "priority" expr
		"priority" => shift 493

360:	stmach-inst-2 => stmach-inst-1 queue-full-beh .
		"\n" => reduce 312
		$default => reduce 312

361:	gen-port-inst-3 => gen-port-inst-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 492

362:	spc-port-inst-2 => spc-port-inst-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 491

363:	int-port-defn-2 => int-port-defn-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 490

364:	cmd-spec-3 => cmd-spec-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 489

365:	event-spec-4 => event-spec-3 "format" . string
	string => . '$string
		'$string => shift 53
		string => shift 488

366:	param-spec-3 => param-spec-2 "set" . "opcode" expr
		"opcode" => shift 487

367:	tlm-chan-4 => tlm-chan-3 "low" . "{" tlm-lim-seq "}"
		"{" => shift 486

368:	record-spec-1 => record-spec-0 "array" .
		"\n" => reduce 180
		$default => reduce 180

369:	cont-spec-1 => cont-spec-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 485

370:	stmach-inst-1 => stmach-inst-0 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 484

371:	gen-port-inst-2 => gen-port-inst-1 qual-ident .
		"\n" => reduce 84
		$default => reduce 84

372:	gen-port-inst-2 => gen-port-inst-1 "serial" .
		"\n" => reduce 85
		$default => reduce 85

373:	spc-port-kind => "telemetry" .
		$default => reduce 125

374:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
		"get" => shift 387
		"recv" => shift 388
		"request" => shift 389
		"send" => shift 390

375:	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 403
		"set" => shift 404

376:	spc-port-kind => "event" .
		$default => reduce 118

377:	spc-port-inst-1 => input-port-kind spc-port-inst-0 .
		"\n" => reduce 92
		$default => reduce 92

378:	gen-port-inst-0 => input-port-kind "input" . "port" ident ":"
		"port" => shift 483

379:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
	cmd-spec-0 => input-port-kind "command" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 482
		"recv" => shift 399
		"reg" => shift 400
		"resp" => shift 401

380:	int-port-defn-1 => int-port-defn-0 "(" . param-list ")"
	param-list => .
	param-list => . formal-param elt-sep param-list
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 481
		$default => reduce 247

381:	cmd-spec-2 => cmd-spec-1 "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 480

382:	event-spec-3 => event-spec-2 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 479

383:	param-spec-2 => param-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 478

384:	tlm-chan-3 => tlm-chan-2 "format" . string
	string => . '$string
		'$string => shift 53
		string => shift 477

385:	record-spec-0 => "product" "record" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		ident => shift 476

386:	cont-spec-0 => "product" "container" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 475

387:	spc-port-kind => "product" "get" .
		$default => reduce 121

388:	spc-port-kind => "product" "recv" .
		$default => reduce 122

389:	spc-port-kind => "product" "request" .
		$default => reduce 123

390:	spc-port-kind => "product" "send" .
		$default => reduce 124

391:	gen-port-inst-1 => gen-port-inst-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 474

392:	spc-port-inst-0 => spc-port-kind "port" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 473

393:	int-port-defn-0 => "internal" "port" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 472

394:	cmd-spec-1 => cmd-spec-0 "(" . param-list ")"
	param-list => .
	param-list => . formal-param elt-sep param-list
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 471
		$default => reduce 247

395:	event-spec-2 => event-spec-1 "severity" . severity
	severity => . "activity" "high"
	severity => . "activity" "low"
	severity => . "command"
	severity => . "diagnostic"
	severity => . "fatal"
	severity => . "warning" "high"
	severity => . "warning" "low"
		"warning" => shift 465
		"fatal" => shift 466
		"diagnostic" => shift 467
		"command" => shift 468
		"activity" => shift 469
		severity => shift 470

396:	param-spec-1 => param-spec-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 464

397:	tlm-chan-2 => tlm-chan-1 "update" . tlm-update
	tlm-update => . "always"
	tlm-update => . "on" "change"
		"on" => shift 461
		"always" => shift 462
		tlm-update => shift 463

398:	gen-port-inst-0 => "output" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 460

399:	spc-port-kind => "command" "recv" .
		$default => reduce 115

400:	spc-port-kind => "command" "reg" .
		$default => reduce 116

401:	spc-port-kind => "command" "resp" .
		$default => reduce 117

402:	event-spec-0 => "event" ident .
		$default => reduce 132

403:	spc-port-kind => "param" "get" .
		$default => reduce 119

404:	spc-port-kind => "param" "set" .
		$default => reduce 120

405:	param-spec-0 => "param" ident . ":" type-name
		":" => shift 459

406:	tlm-chan-0 => "telemetry" ident . ":" type-name
		":" => shift 458

407:	spc-port-kind => "text" "event" .
		$default => reduce 126

408:	spc-port-kind => "time" "get" .
		$default => reduce 127

409:	event-spec-1 => event-spec-0 "(" . param-list ")"
	param-list => .
	param-list => . formal-param elt-sep param-list
	formal-param => . ident ":" type-name
	formal-param => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 55
		"ref" => shift 123
		ident => shift 124
		formal-param => shift 125
		param-list => shift 457
		$default => reduce 247

410:	tlm-chan-1 => tlm-chan-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 456

411:	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}"
		"{" => shift 455

412:	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident "{" qual-ident-seq "}"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 454

413:	conn-graph-spec => "connections" ident "{" . conn-seq "}"
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 449
		"unmatched" => shift 450
		conn-from => shift 451
		connection => shift 452
		conn-seq => shift 453
		$default => reduce 225

414:	comp-inst-spec => "private" "instance" ident .
		"\n" => reduce 214
		$default => reduce 214

415:	topo-mem-seq => topo-mem mem-sep topo-mem-seq .
		$default => reduce 207

416:	loc-spec => "locate" "state" "machine" qual-ident "at" string .
		"\n" => reduce 260
		$default => reduce 260

417:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}" .
		"\n" => reduce 314
		$default => reduce 314

418:	mem-sep => mem-sep . "\n"
	stmach-mem-seq => stmach-mem mem-sep . stmach-mem-seq
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 237
		state-defn => shift 238
		"initial" => shift 239
		"signal" => shift 240
		"guard" => shift 241
		"action" => shift 242
		"choice" => shift 243
		stmach-mem => shift 244
		stmach-mem-seq => shift 448
		"\n" => shift 149
		$default => reduce 315

419:	stmach-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 447

420:	stmach-mem => "action" ident .
	stmach-mem => "action" ident . ":" type-name
		":" => shift 446
		"\n" => reduce 318
		$default => reduce 318

421:	stmach-mem => "guard" ident .
	stmach-mem => "guard" ident . ":" type-name
		":" => shift 445
		"\n" => reduce 320
		$default => reduce 320

422:	stmach-mem => "signal" ident .
	stmach-mem => "signal" ident . ":" type-name
		":" => shift 444
		"\n" => reduce 322
		$default => reduce 322

423:	do-expr => "do" . "{" action-seq "}"
		"{" => shift 443

424:	trans-expr-0 => "enter" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 442

425:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 424
		trans-expr-0 => shift 441

426:	trans-expr-1 => trans-expr-0 .
		"\n" => reduce 343
		$default => reduce 343

427:	trans-expr => trans-expr-1 .
		"\n" => reduce 341
		$default => reduce 341

428:	stmach-mem => "initial" trans-expr .
		"\n" => reduce 324
		$default => reduce 324

429:	state-defn => "state" ident .
	state-defn => "state" ident . "{" state-defn-mem-seq "}"
		"{" => shift 440
		"\n" => reduce 326
		$default => reduce 326

430:	struct-mem-1 => struct-mem-0 "[" expr . "]"
		"]" => shift 439

431:	struct-mem-3 => struct-mem-2 "format" string .
		"\n" => reduce 51
		$default => reduce 51

432:	struct-mem-seq => struct-mem mem-sep struct-mem-seq .
		$default => reduce 44

433:	formal-param => "ref" ident ":" type-name .
		"\n" => reduce 250
		$default => reduce 250

434:	expr-seq => expr elt-sep expr-seq .
		$default => reduce 280

435:	struct-elt-seq => ident "=" expr . elt-sep struct-elt-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 438

436:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 437

437:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr .
		"\n" => reduce 190
		$default => reduce 190

438:	elt-sep => elt-sep . "\n"
	struct-elt-seq => ident "=" expr elt-sep . struct-elt-seq
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 55
		ident => shift 206
		struct-elt-seq => shift 555
		"\n" => shift 228
		$default => reduce 281

439:	struct-mem-1 => struct-mem-0 "[" expr "]" .
		$default => reduce 48

440:	state-defn => "state" ident "{" . state-defn-mem-seq "}"
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 543
		st-tran-spec-0 => shift 544
		st-tran-spec-1 => shift 545
		st-tran-spec-2 => shift 546
		"state" => shift 237
		"exit" => shift 547
		"entry" => shift 548
		state-trans-spec => shift 549
		state-defn => shift 550
		"choice" => shift 551
		"initial" => shift 552
		state-defn-mem => shift 553
		state-defn-mem-seq => shift 554
		$default => reduce 328

441:	trans-expr-1 => do-expr trans-expr-0 .
		"\n" => reduce 344
		$default => reduce 344

442:	trans-expr-0 => "enter" qual-ident .
		"\n" => reduce 342
		$default => reduce 342

443:	do-expr => "do" "{" . action-seq "}"
	action-seq => .
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 55
		ident => shift 541
		action-seq => shift 542
		$default => reduce 346

444:	stmach-mem => "signal" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 540

445:	stmach-mem => "guard" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 539

446:	stmach-mem => "action" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 538

447:	stmach-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 537

448:	stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq .
		$default => reduce 316

449:	conn-from => qual-ident . "[" expr "]"
	conn-from => qual-ident .
		"[" => shift 536
		$default => reduce 229

450:	connection => "unmatched" . conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 449
		conn-from => shift 535

451:	connection => conn-from . "->" conn-to
		"->" => shift 534

452:	conn-seq => connection . elt-sep conn-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 533

453:	conn-graph-spec => "connections" ident "{" conn-seq . "}"
		"}" => shift 532

454:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident .
	conn-graph-spec => pattern-kind "connections" "instance" qual-ident . "{" qual-ident-seq "}"
		"{" => shift 531
		"\n" => reduce 216
		$default => reduce 216

455:	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 526
		"include" => shift 33
		tlm-pkt-spec => shift 527
		include-spec => shift 528
		tlm-pktgrp-mem => shift 529
		tlm-pktgrp-mem-seq => shift 530
		$default => reduce 235

456:	tlm-chan-1 => tlm-chan-0 "id" expr .
		"\n" => reduce 161
		$default => reduce 161

457:	event-spec-1 => event-spec-0 "(" param-list . ")"
		")" => shift 525

458:	tlm-chan-0 => "telemetry" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 524

459:	param-spec-0 => "param" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 523

460:	gen-port-inst-0 => "output" "port" ident . ":"
		":" => shift 522

461:	tlm-update => "on" . "change"
		"change" => shift 521

462:	tlm-update => "always" .
		"\n" => reduce 170
		$default => reduce 170

463:	tlm-chan-2 => tlm-chan-1 "update" tlm-update .
		"\n" => reduce 163
		$default => reduce 163

464:	param-spec-1 => param-spec-0 "default" expr .
		"\n" => reduce 151
		$default => reduce 151

465:	severity => "warning" . "low"
	severity => "warning" . "high"
		"high" => shift 519
		"low" => shift 520

466:	severity => "fatal" .
		$default => reduce 145

467:	severity => "diagnostic" .
		$default => reduce 144

468:	severity => "command" .
		$default => reduce 143

469:	severity => "activity" . "low"
	severity => "activity" . "high"
		"high" => shift 517
		"low" => shift 518

470:	event-spec-2 => event-spec-1 "severity" severity .
		$default => reduce 135

471:	cmd-spec-1 => cmd-spec-0 "(" param-list . ")"
		")" => shift 516

472:	int-port-defn-0 => "internal" "port" ident .
		"\n" => reduce 98
		$default => reduce 98

473:	spc-port-inst-0 => spc-port-kind "port" ident .
		"\n" => reduce 90
		$default => reduce 90

474:	gen-port-inst-1 => gen-port-inst-0 "[" expr . "]"
		"]" => shift 515

475:	cont-spec-0 => "product" "container" ident .
		"\n" => reduce 184
		$default => reduce 184

476:	record-spec-0 => "product" "record" ident . ":" type-name
		":" => shift 514

477:	tlm-chan-3 => tlm-chan-2 "format" string .
		"\n" => reduce 165
		$default => reduce 165

478:	param-spec-2 => param-spec-1 "id" expr .
		"\n" => reduce 153
		$default => reduce 153

479:	event-spec-3 => event-spec-2 "id" expr .
		$default => reduce 137

480:	cmd-spec-2 => cmd-spec-1 "opcode" expr .
		"\n" => reduce 110
		$default => reduce 110

481:	int-port-defn-1 => int-port-defn-0 "(" param-list . ")"
		")" => shift 513

482:	cmd-spec-0 => input-port-kind "command" ident .
		"\n" => reduce 106
		$default => reduce 106

483:	gen-port-inst-0 => input-port-kind "input" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 512

484:	stmach-inst-1 => stmach-inst-0 "priority" expr .
		"\n" => reduce 310
		$default => reduce 310

485:	cont-spec-1 => cont-spec-0 "id" expr .
		"\n" => reduce 186
		$default => reduce 186

486:	tlm-chan-4 => tlm-chan-3 "low" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 504
		"orange" => shift 505
		"red" => shift 506
		tlm-lim => shift 507
		tlm-lim-seq => shift 511
		$default => reduce 172

487:	param-spec-3 => param-spec-2 "set" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 510

488:	event-spec-4 => event-spec-3 "format" string .
		"\n" => reduce 138
		$default => reduce 138

489:	cmd-spec-3 => cmd-spec-2 "priority" expr .
		"\n" => reduce 112
		$default => reduce 112

490:	int-port-defn-2 => int-port-defn-1 "priority" expr .
		"\n" => reduce 102
		$default => reduce 102

491:	spc-port-inst-2 => spc-port-inst-1 "priority" expr .
		"\n" => reduce 94
		$default => reduce 94

492:	gen-port-inst-3 => gen-port-inst-2 "priority" expr .
		"\n" => reduce 87
		$default => reduce 87

493:	cont-spec-2 => cont-spec-1 "default" "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 509

494:	record-spec-2 => record-spec-1 "id" expr .
		"\n" => reduce 182
		$default => reduce 182

495:	tlm-chan-5 => tlm-chan-4 "high" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 504
		"orange" => shift 505
		"red" => shift 506
		tlm-lim => shift 507
		tlm-lim-seq => shift 508
		$default => reduce 172

496:	param-spec-4 => param-spec-3 "save" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 503

497:	event-spec-5 => event-spec-4 "throttle" expr .
		"\n" => reduce 140
		$default => reduce 140

498:	stmach-inst-0 => "state" "machine" "instance" . ident ":" qual-ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 502

499:	port-match-spec => "match" ident "with" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 501

500:	comp-mem-seq => comp-mem mem-sep comp-mem-seq .
		$default => reduce 63

501:	port-match-spec => "match" ident "with" ident .
		"\n" => reduce 263
		$default => reduce 263

502:	stmach-inst-0 => "state" "machine" "instance" ident . ":" qual-ident
		":" => shift 588

503:	param-spec-4 => param-spec-3 "save" "opcode" expr .
		"\n" => reduce 157
		$default => reduce 157

504:	tlm-lim => "yellow" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 587

505:	tlm-lim => "orange" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 586

506:	tlm-lim => "red" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 585

507:	tlm-lim-seq => tlm-lim . elt-sep tlm-lim-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 584

508:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq . "}"
		"}" => shift 583

509:	cont-spec-2 => cont-spec-1 "default" "priority" expr .
		"\n" => reduce 188
		$default => reduce 188

510:	param-spec-3 => param-spec-2 "set" "opcode" expr .
		"\n" => reduce 155
		$default => reduce 155

511:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq . "}"
		"}" => shift 582

512:	gen-port-inst-0 => input-port-kind "input" "port" ident . ":"
		":" => shift 581

513:	int-port-defn-1 => int-port-defn-0 "(" param-list ")" .
		"\n" => reduce 100
		$default => reduce 100

514:	record-spec-0 => "product" "record" ident ":" . type-name
	type-name => . ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	ident => . '$ident
		'$ident => shift 55
		"string" => shift 108
		"bool" => shift 109
		"F64" => shift 110
		"F32" => shift 111
		"U64" => shift 112
		"I64" => shift 113
		"U32" => shift 114
		"I32" => shift 115
		"U16" => shift 116
		"I16" => shift 117
		"U8" => shift 118
		"I8" => shift 119
		ident => shift 120
		type-name => shift 580

515:	gen-port-inst-1 => gen-port-inst-0 "[" expr "]" .
		$default => reduce 83

516:	cmd-spec-1 => cmd-spec-0 "(" param-list ")" .
		"\n" => reduce 108
		$default => reduce 108

517:	severity => "activity" "high" .
		$default => reduce 141

518:	severity => "activity" "low" .
		$default => reduce 142

519:	severity => "warning" "high" .
		$default => reduce 146

520:	severity => "warning" "low" .
		$default => reduce 147

521:	tlm-update => "on" "change" .
		"\n" => reduce 171
		$default => reduce 171

522:	gen-port-inst-0 => "output" "port" ident ":" .
		$default => reduce 81

523:	param-spec-0 => "param" ident ":" type-name .
		"\n" => reduce 149
		$default => reduce 149

524:	tlm-chan-0 => "telemetry" ident ":" type-name .
		"\n" => reduce 159
		$default => reduce 159

525:	event-spec-1 => event-spec-0 "(" param-list ")" .
		$default => reduce 134

526:	tlm-pkt-spec => "packet" . ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
	tlm-pkt-spec => "packet" . ident "group" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 579

527:	tlm-pktgrp-mem => tlm-pkt-spec .
		"\n" => reduce 238
		$default => reduce 238

528:	tlm-pktgrp-mem => include-spec .
		"\n" => reduce 237
		$default => reduce 237

529:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 578

530:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}"
		"}" => shift 577

531:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" . qual-ident-seq "}"
	qual-ident-seq => .
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 575
		qual-ident-seq => shift 576
		$default => reduce 290

532:	conn-graph-spec => "connections" ident "{" conn-seq "}" .
		"\n" => reduce 215
		$default => reduce 215

533:	elt-sep => elt-sep . "\n"
	conn-seq => connection elt-sep . conn-seq
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 449
		"unmatched" => shift 450
		conn-from => shift 451
		connection => shift 452
		conn-seq => shift 574
		"\n" => shift 228
		$default => reduce 225

534:	connection => conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 572
		conn-to => shift 573

535:	connection => "unmatched" conn-from . "->" conn-to
		"->" => shift 571

536:	conn-from => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 570

537:	stmach-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 569

538:	stmach-mem => "action" ident ":" type-name .
		"\n" => reduce 319
		$default => reduce 319

539:	stmach-mem => "guard" ident ":" type-name .
		"\n" => reduce 321
		$default => reduce 321

540:	stmach-mem => "signal" ident ":" type-name .
		"\n" => reduce 323
		$default => reduce 323

541:	action-seq => ident . elt-sep action-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 568

542:	do-expr => "do" "{" action-seq . "}"
		"}" => shift 567

543:	st-tran-spec-0 => "on" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 566

544:	st-tran-spec-1 => st-tran-spec-0 . "if" ident
	st-tran-spec-1 => st-tran-spec-0 .
		"if" => shift 565
		$default => reduce 338

545:	st-tran-spec-2 => st-tran-spec-1 . trans-or-do
	trans-or-do => . trans-expr
	trans-or-do => . do-expr
	trans-expr => . trans-expr-1
	do-expr => . "do" "{" action-seq "}"
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 424
		trans-expr-0 => shift 426
		"do" => shift 423
		trans-expr-1 => shift 427
		do-expr => shift 562
		trans-expr => shift 563
		trans-or-do => shift 564

546:	state-trans-spec => st-tran-spec-2 .
		"\n" => reduce 336
		$default => reduce 336

547:	state-defn-mem => "exit" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		do-expr => shift 561

548:	state-defn-mem => "entry" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		do-expr => shift 560

549:	state-defn-mem => state-trans-spec .
		"\n" => reduce 333
		$default => reduce 333

550:	state-defn-mem => state-defn .
		"\n" => reduce 332
		$default => reduce 332

551:	state-defn-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 559

552:	state-defn-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		"enter" => shift 424
		do-expr => shift 425
		trans-expr-0 => shift 426
		trans-expr-1 => shift 427
		trans-expr => shift 558

553:	state-defn-mem-seq => state-defn-mem . mem-sep state-defn-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 50
		";" => shift 51
		mem-sep => shift 557

554:	state-defn => "state" ident "{" state-defn-mem-seq . "}"
		"}" => shift 556

555:	struct-elt-seq => ident "=" expr elt-sep struct-elt-seq .
		$default => reduce 282

556:	state-defn => "state" ident "{" state-defn-mem-seq "}" .
		"\n" => reduce 327
		$default => reduce 327

557:	mem-sep => mem-sep . "\n"
	state-defn-mem-seq => state-defn-mem mem-sep . state-defn-mem-seq
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 543
		st-tran-spec-0 => shift 544
		st-tran-spec-1 => shift 545
		st-tran-spec-2 => shift 546
		"state" => shift 237
		"exit" => shift 547
		"entry" => shift 548
		state-trans-spec => shift 549
		state-defn => shift 550
		"choice" => shift 551
		"initial" => shift 552
		state-defn-mem => shift 553
		state-defn-mem-seq => shift 603
		"\n" => shift 149
		$default => reduce 328

558:	state-defn-mem => "initial" trans-expr .
		"\n" => reduce 330
		$default => reduce 330

559:	state-defn-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 602

560:	state-defn-mem => "entry" do-expr .
		"\n" => reduce 334
		$default => reduce 334

561:	state-defn-mem => "exit" do-expr .
		"\n" => reduce 335
		$default => reduce 335

562:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	trans-or-do => do-expr .
		"enter" => shift 424
		trans-expr-0 => shift 441
		"\n" => reduce 349
		$default => reduce 349

563:	trans-or-do => trans-expr .
		"\n" => reduce 348
		$default => reduce 348

564:	st-tran-spec-2 => st-tran-spec-1 trans-or-do .
		"\n" => reduce 340
		$default => reduce 340

565:	st-tran-spec-1 => st-tran-spec-0 "if" . ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 601

566:	st-tran-spec-0 => "on" ident .
		$default => reduce 337

567:	do-expr => "do" "{" action-seq "}" .
		"\n" => reduce 345
		$default => reduce 345

568:	elt-sep => elt-sep . "\n"
	action-seq => ident elt-sep . action-seq
	action-seq => .
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 55
		ident => shift 541
		action-seq => shift 600
		"\n" => shift 228
		$default => reduce 346

569:	stmach-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		"enter" => shift 424
		do-expr => shift 425
		trans-expr-0 => shift 426
		trans-expr-1 => shift 427
		trans-expr => shift 599

570:	conn-from => qual-ident "[" expr . "]"
		"]" => shift 598

571:	connection => "unmatched" conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 572
		conn-to => shift 597

572:	conn-to => qual-ident . "[" expr "]"
	conn-to => qual-ident .
		"[" => shift 596
		"\n" => reduce 231
		$default => reduce 231

573:	connection => conn-from "->" conn-to .
		"\n" => reduce 227
		$default => reduce 227

574:	conn-seq => connection elt-sep conn-seq .
		$default => reduce 226

575:	qual-ident-seq => qual-ident . elt-sep qual-ident-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 595

576:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq . "}"
		"}" => shift 594

577:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" .
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" . "omit" "{" tlm-chan-id-seq "}"
		"omit" => shift 593
		"\n" => reduce 233
		$default => reduce 233

578:	elt-sep => elt-sep . "\n"
	tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem => . include-spec
	tlm-pktgrp-mem => . tlm-pkt-spec
	include-spec => . "include" string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 526
		"include" => shift 33
		tlm-pkt-spec => shift 527
		include-spec => shift 528
		tlm-pktgrp-mem => shift 529
		tlm-pktgrp-mem-seq => shift 592
		"\n" => shift 228
		$default => reduce 235

579:	tlm-pkt-spec => "packet" ident . "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident . "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"group" => shift 591

580:	record-spec-0 => "product" "record" ident ":" type-name .
		"\n" => reduce 178
		$default => reduce 178

581:	gen-port-inst-0 => input-port-kind "input" "port" ident ":" .
		$default => reduce 80

582:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}" .
		"\n" => reduce 167
		$default => reduce 167

583:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}" .
		"\n" => reduce 169
		$default => reduce 169

584:	elt-sep => elt-sep . "\n"
	tlm-lim-seq => tlm-lim elt-sep . tlm-lim-seq
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 504
		"orange" => shift 505
		"red" => shift 506
		tlm-lim => shift 507
		tlm-lim-seq => shift 590
		"\n" => shift 228
		$default => reduce 172

585:	tlm-lim => "red" expr .
		"\n" => reduce 174
		$default => reduce 174

586:	tlm-lim => "orange" expr .
		"\n" => reduce 175
		$default => reduce 175

587:	tlm-lim => "yellow" expr .
		"\n" => reduce 176
		$default => reduce 176

588:	stmach-inst-0 => "state" "machine" "instance" ident ":" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 589

589:	stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident .
		"\n" => reduce 308
		$default => reduce 308

590:	tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq .
		$default => reduce 173

591:	tlm-pkt-spec => "packet" ident "group" . expr "id" expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	tlm-pkt-spec => "packet" ident "group" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 609

592:	tlm-pktgrp-mem-seq => tlm-pktgrp-mem elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 236

593:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" . "{" tlm-chan-id-seq "}"
		"{" => shift 608

594:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}" .
		"\n" => reduce 217
		$default => reduce 217

595:	elt-sep => elt-sep . "\n"
	qual-ident-seq => qual-ident elt-sep . qual-ident-seq
	qual-ident-seq => .
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 575
		qual-ident-seq => shift 607
		"\n" => shift 228
		$default => reduce 290

596:	conn-to => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 606

597:	connection => "unmatched" conn-from "->" conn-to .
		"\n" => reduce 228
		$default => reduce 228

598:	conn-from => qual-ident "[" expr "]" .
		$default => reduce 230

599:	stmach-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 605

600:	action-seq => ident elt-sep action-seq .
		$default => reduce 347

601:	st-tran-spec-1 => st-tran-spec-0 "if" ident .
		$default => reduce 339

602:	state-defn-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 604

603:	state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq .
		$default => reduce 329

604:	state-defn-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 55
		ident => shift 615

605:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		"enter" => shift 424
		do-expr => shift 425
		trans-expr-0 => shift 426
		trans-expr-1 => shift 427
		trans-expr => shift 614

606:	conn-to => qual-ident "[" expr . "]"
		"]" => shift 613

607:	qual-ident-seq => qual-ident elt-sep qual-ident-seq .
		$default => reduce 291

608:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" . tlm-chan-id-seq "}"
	tlm-chan-id-seq => .
	tlm-chan-id-seq => . tlm-chan-id-seq elt-sep qual-ident
		tlm-chan-id-seq => shift 612
		"\n" => reduce 245
		$default => reduce 245

609:	tlm-pkt-spec => "packet" ident "group" expr . "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident "group" expr . "id" expr "{" tlm-pkt-mem-seq "}"
		"id" => shift 610
		"{" => shift 611

610:	tlm-pkt-spec => "packet" ident "group" expr "id" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		'$string => shift 53
		'$fixed => shift 94
		'$float => shift 95
		"(" => shift 96
		"{" => shift 97
		"[" => shift 98
		string => shift 99
		number => shift 100
		qual-ident => shift 101
		"-" => shift 102
		prim-expr => shift 103
		unary-expr => shift 104
		mul-expr => shift 105
		add-expr => shift 106
		expr => shift 624

611:	tlm-pkt-spec => "packet" ident "group" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		"include" => shift 33
		qual-ident => shift 620
		include-spec => shift 621
		tlm-pkt-mem => shift 622
		tlm-pkt-mem-seq => shift 623
		$default => reduce 241

612:	tlm-chan-id-seq => tlm-chan-id-seq . elt-sep qual-ident
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq . "}"
		"}" => shift 618
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 619

613:	conn-to => qual-ident "[" expr "]" .
		"\n" => reduce 232
		$default => reduce 232

614:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 617

615:	state-defn-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		"enter" => shift 424
		do-expr => shift 425
		trans-expr-0 => shift 426
		trans-expr-1 => shift 427
		trans-expr => shift 616

616:	state-defn-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 629

617:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 317
		$default => reduce 317

618:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}" .
		"\n" => reduce 234
		$default => reduce 234

619:	elt-sep => elt-sep . "\n"
	tlm-chan-id-seq => tlm-chan-id-seq elt-sep . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		qual-ident => shift 628
		"\n" => shift 228

620:	tlm-pkt-mem => qual-ident .
		"\n" => reduce 244
		$default => reduce 244

621:	tlm-pkt-mem => include-spec .
		"\n" => reduce 243
		$default => reduce 243

622:	tlm-pkt-mem-seq => tlm-pkt-mem . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 183
		"," => shift 184
		elt-sep => shift 627

623:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 626

624:	tlm-pkt-spec => "packet" ident "group" expr "id" expr . "{" tlm-pkt-mem-seq "}"
		"{" => shift 625

625:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		"include" => shift 33
		qual-ident => shift 620
		include-spec => shift 621
		tlm-pkt-mem => shift 622
		tlm-pkt-mem-seq => shift 632
		$default => reduce 241

626:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 239
		$default => reduce 239

627:	elt-sep => elt-sep . "\n"
	tlm-pkt-mem-seq => tlm-pkt-mem elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . tlm-pkt-mem elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem => . include-spec
	tlm-pkt-mem => . qual-ident
	include-spec => . "include" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 55
		ident => shift 92
		qual-ident-1 => shift 93
		"include" => shift 33
		qual-ident => shift 620
		include-spec => shift 621
		tlm-pkt-mem => shift 622
		tlm-pkt-mem-seq => shift 631
		"\n" => shift 228
		$default => reduce 241

628:	tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident .
		"\n" => reduce 246
		$default => reduce 246

629:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 423
		"enter" => shift 424
		do-expr => shift 425
		trans-expr-0 => shift 426
		trans-expr-1 => shift 427
		trans-expr => shift 630

630:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 634

631:	tlm-pkt-mem-seq => tlm-pkt-mem elt-sep tlm-pkt-mem-seq .
		$default => reduce 242

632:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 633

633:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 240
		$default => reduce 240

634:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 331
		$default => reduce 331

