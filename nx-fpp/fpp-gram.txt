0 $start => translation-unit
1 elt-sep => ","
2 elt-sep => "\n"
3 elt-sep => elt-sep "\n"
4 mem-sep => ";"
5 mem-sep => "\n"
6 mem-sep => mem-sep "\n"
7 include-spec => "include" '$string
8 translation-unit => module-mem-seq
9 module-mem-seq =>
10 module-mem-seq => mod-mem mem-sep module-mem-seq
11 module-mem-seq => include-spec mem-sep module-mem-seq
12 mod-mem => lone-anno
13 mod-mem => component-defn
14 mod-mem => comp-inst-defn
15 mod-mem => topology-defn
16 mod-mem => const-defn
17 mod-mem => module-defn
18 mod-mem => port-defn
19 mod-mem => struct-defn
20 mod-mem => loc-spec
21 mod-mem => abs-type-defn
22 mod-mem => array-defn
23 mod-mem => enum-defn
24 mod-mem => stmach-defn
25 module-defn => "module" ident "{" module-mem-seq "}"
26 const-defn => "constant" ident "=" expr
27 const-defn => "constant" ident "=" expr code-anno
28 abs-type-defn => "type" ident
29 abs-type-defn => "type" ident code-anno
30 array-defn => "array" ident "=" index ident
31 array-defn => "array" ident "=" index ident code-anno
32 enum-defn => enum-defn-4
33 enum-defn-0 => "enum" ident
34 enum-defn-1 => enum-defn-0
35 enum-defn-1 => enum-defn-0 ":" type-name
36 enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}"
37 enum-defn-3 => enum-defn-2
38 enum-defn-3 => enum-defn-2 "default" expr
39 enum-defn-4 => enum-defn-3
40 enum-defn-4 => enum-defn-3 code-anno
41 enum-mem-seq =>
42 enum-mem-seq => enum-mem elt-sep enum-mem-seq
43 enum-mem => ident
44 enum-mem => ident code-anno
45 enum-mem => ident "=" expr
46 enum-mem => ident "=" expr code-anno
47 struct-defn => struct-defn-2
48 struct-defn-0 => "struct" ident "{" struct-mem-seq "}"
49 struct-defn-1 => struct-defn-0
50 struct-defn-1 => struct-defn-0 "default" expr
51 struct-defn-2 => struct-defn-1
52 struct-defn-2 => struct-defn-1 code-anno
53 struct-mem-seq =>
54 struct-mem-seq => struct-mem mem-sep struct-mem-seq
55 struct-mem => struct-mem-3
56 struct-mem => struct-mem-3 code-anno
57 struct-mem-0 => ident ":"
58 struct-mem-1 => struct-mem-0
59 struct-mem-1 => struct-mem-0 "[" expr "]"
60 struct-mem-2 => struct-mem-1 type-name
61 struct-mem-3 => struct-mem-2
62 struct-mem-3 => struct-mem-2 "format" string
63 port-defn => port-defn-3
64 port-defn-0 => "port" ident
65 port-defn-1 => port-defn-0
66 port-defn-1 => port-defn-0 "(" param-list ")"
67 port-defn-2 => port-defn-1
68 port-defn-2 => port-defn-1 "->" type-name
69 port-defn-3 => port-defn-2
70 port-defn-3 => port-defn-2 code-anno
71 component-defn => comp-kind "component" ident "{" comp-mem-seq "}"
72 comp-kind => "active"
73 comp-kind => "passive"
74 comp-kind => "queued"
75 comp-mem-seq =>
76 comp-mem-seq => comp-mem mem-sep comp-mem-seq
77 comp-mem-seq => include-spec mem-sep comp-mem-seq
78 comp-mem => lone-anno
79 comp-mem => enum-defn
80 comp-mem => struct-defn
81 comp-mem => int-port-spec
82 comp-mem => port-inst
83 comp-mem => port-match-spec
84 comp-mem => command-spec
85 comp-mem => event-spec
86 comp-mem => param-spec
87 comp-mem => record-spec
88 comp-mem => prod-cont-spec
89 comp-mem => tlm-chan-spec
90 comp-mem => stmach-defn
91 comp-mem => stmach-inst
92 port-inst => gen-port-inst-4
93 port-inst => spc-port-inst-3
94 gen-port-inst-0 => input-port-kind "input" "port" ident ":"
95 gen-port-inst-0 => "output" "port" ident ":"
96 gen-port-inst-1 => gen-port-inst-0
97 gen-port-inst-1 => gen-port-inst-0 "[" expr "]"
98 gen-port-inst-2 => gen-port-inst-1 qual-ident
99 gen-port-inst-2 => gen-port-inst-1 "serial"
100 gen-port-inst-3 => gen-port-inst-2
101 gen-port-inst-3 => gen-port-inst-2 "priority" expr
102 gen-port-inst-4 => gen-port-inst-3
103 gen-port-inst-4 => gen-port-inst-3 queue-full-beh
104 spc-port-inst-0 => spc-port-kind "port" ident
105 spc-port-inst-1 => spc-port-inst-0
106 spc-port-inst-1 => input-port-kind spc-port-inst-0
107 spc-port-inst-2 => spc-port-inst-1
108 spc-port-inst-2 => spc-port-inst-1 "priority" expr
109 spc-port-inst-3 => spc-port-inst-2
110 spc-port-inst-3 => spc-port-inst-2 queue-full-beh
111 int-port-spec => int-port-defn-3
112 int-port-defn-0 => "internal" "port" ident
113 int-port-defn-1 => int-port-defn-0
114 int-port-defn-1 => int-port-defn-0 "(" param-list ")"
115 int-port-defn-2 => int-port-defn-1
116 int-port-defn-2 => int-port-defn-1 "priority" expr
117 int-port-defn-3 => int-port-defn-2
118 int-port-defn-3 => int-port-defn-2 queue-full-beh
119 command-spec => cmd-spec-4
120 cmd-spec-0 => input-port-kind "command" ident
121 cmd-spec-1 => cmd-spec-0
122 cmd-spec-1 => cmd-spec-0 "(" param-list ")"
123 cmd-spec-2 => cmd-spec-1
124 cmd-spec-2 => cmd-spec-1 "opcode" expr
125 cmd-spec-3 => cmd-spec-2
126 cmd-spec-3 => cmd-spec-2 "priority" expr
127 cmd-spec-4 => cmd-spec-3
128 cmd-spec-4 => cmd-spec-3 queue-full-beh
129 spc-port-kind => "command" "recv"
130 spc-port-kind => "command" "reg"
131 spc-port-kind => "command" "resp"
132 spc-port-kind => "event"
133 spc-port-kind => "param" "get"
134 spc-port-kind => "param" "set"
135 spc-port-kind => "product" "get"
136 spc-port-kind => "product" "recv"
137 spc-port-kind => "product" "request"
138 spc-port-kind => "product" "send"
139 spc-port-kind => "telemetry"
140 spc-port-kind => "text" "event"
141 spc-port-kind => "time" "get"
142 input-port-kind => "async"
143 input-port-kind => "guarded"
144 input-port-kind => "sync"
145 event-spec => event-spec-5
146 event-spec-0 => "event" ident
147 event-spec-1 => event-spec-0
148 event-spec-1 => event-spec-0 "(" param-list ")"
149 event-spec-2 => event-spec-1 "severity" severity
150 event-spec-3 => event-spec-2
151 event-spec-3 => event-spec-2 "id" expr
152 event-spec-4 => event-spec-3 "format" string
153 event-spec-5 => event-spec-4
154 event-spec-5 => event-spec-4 "throttle" expr
155 severity => "activity" "high"
156 severity => "activity" "low"
157 severity => "command"
158 severity => "diagnostic"
159 severity => "fatal"
160 severity => "warning" "high"
161 severity => "warning" "low"
162 param-spec => param-spec-4
163 param-spec-0 => "param" ident ":" type-name
164 param-spec-1 => param-spec-0
165 param-spec-1 => param-spec-0 "default" expr
166 param-spec-2 => param-spec-1
167 param-spec-2 => param-spec-1 "id" expr
168 param-spec-3 => param-spec-2
169 param-spec-3 => param-spec-2 "set" "opcode" expr
170 param-spec-4 => param-spec-3
171 param-spec-4 => param-spec-3 "save" "opcode" expr
172 tlm-chan-spec => tlm-chan-5
173 tlm-chan-0 => "telemetry" ident ":" type-name
174 tlm-chan-1 => tlm-chan-0
175 tlm-chan-1 => tlm-chan-0 "id" expr
176 tlm-chan-2 => tlm-chan-1
177 tlm-chan-2 => tlm-chan-1 "update" tlm-update
178 tlm-chan-3 => tlm-chan-2
179 tlm-chan-3 => tlm-chan-2 "format" string
180 tlm-chan-4 => tlm-chan-3
181 tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}"
182 tlm-chan-5 => tlm-chan-4
183 tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}"
184 tlm-update => "always"
185 tlm-update => "on" "change"
186 tlm-lim-seq =>
187 tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq
188 tlm-lim => "red" expr
189 tlm-lim => "orange" expr
190 tlm-lim => "yellow" expr
191 record-spec => record-spec-2
192 record-spec-0 => "product" "record" ident ":" type-name
193 record-spec-1 => record-spec-0
194 record-spec-1 => record-spec-0 "array"
195 record-spec-2 => record-spec-1
196 record-spec-2 => record-spec-1 "id" expr
197 prod-cont-spec => cont-spec-2
198 cont-spec-0 => "product" "container" ident
199 cont-spec-1 => cont-spec-0
200 cont-spec-1 => cont-spec-0 "id" expr
201 cont-spec-2 => cont-spec-1
202 cont-spec-2 => cont-spec-1 "default" "priority" expr
203 comp-inst-defn => comp-inst-7
204 comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr
205 comp-inst-1 => comp-inst-0
206 comp-inst-1 => comp-inst-0 "type" string
207 comp-inst-2 => comp-inst-1
208 comp-inst-2 => comp-inst-1 "at" string
209 comp-inst-3 => comp-inst-2
210 comp-inst-3 => comp-inst-2 "queue" "size" expr
211 comp-inst-4 => comp-inst-3
212 comp-inst-4 => comp-inst-3 "stack" "size" expr
213 comp-inst-5 => comp-inst-4
214 comp-inst-5 => comp-inst-4 "priority" expr
215 comp-inst-6 => comp-inst-5
216 comp-inst-6 => comp-inst-5 "cpu" expr
217 comp-inst-7 => comp-inst-6
218 comp-inst-7 => comp-inst-6 "{" string "}"
219 topology-defn => "topology" ident "{" topo-mem-seq "}"
220 topo-mem-seq =>
221 topo-mem-seq => topo-mem mem-sep topo-mem-seq
222 topo-mem-seq => include-spec mem-sep topo-mem-seq
223 topo-mem => lone-anno
224 topo-mem => comp-inst-spec
225 topo-mem => conn-graph-spec
226 topo-mem => tlm-pktset-spec
227 topo-mem => "import" qual-ident
228 comp-inst-spec => "instance" ident
229 comp-inst-spec => "private" "instance" ident
230 conn-graph-spec => "connections" ident "{" conn-seq "}"
231 conn-graph-spec => pattern-kind "connections" "instance" qual-ident
232 conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
233 pattern-kind => "command"
234 pattern-kind => "event"
235 pattern-kind => "health"
236 pattern-kind => "param"
237 pattern-kind => "telemetry"
238 pattern-kind => "time"
239 pattern-kind => "text" "event"
240 conn-seq =>
241 conn-seq => connection elt-sep conn-seq
242 connection => conn-from "->" conn-to
243 connection => "unmatched" conn-from "->" conn-to
244 conn-from => qual-ident
245 conn-from => qual-ident "[" expr "]"
246 conn-to => qual-ident
247 conn-to => qual-ident "[" expr "]"
248 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
249 tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
250 tlm-pktgrp-mem-seq =>
251 tlm-pktgrp-mem-seq => tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
252 tlm-pktgrp-mem-seq => include-spec elt-sep tlm-pktgrp-mem-seq
253 tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
254 tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
255 tlm-pkt-mem-seq =>
256 tlm-pkt-mem-seq => qual-ident elt-sep tlm-pkt-mem-seq
257 tlm-pkt-mem-seq => include-spec elt-sep tlm-pkt-mem-seq
258 tlm-chan-id-seq =>
259 tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident
260 param-list => param-list-1
261 param-list-1 =>
262 param-list-1 => formal-param elt-sep param-list-1
263 formal-param => formal-param-1
264 formal-param => formal-param-1 code-anno
265 formal-param-1 => ident ":" type-name
266 formal-param-1 => "ref" ident ":" type-name
267 queue-full-beh => queue-full-beh-1
268 queue-full-beh-1 => "assert"
269 queue-full-beh-1 => "block"
270 queue-full-beh-1 => "drop"
271 queue-full-beh-1 => "hook"
272 loc-spec => "locate" "instance" qual-ident "at" string
273 loc-spec => "locate" "component" qual-ident "at" string
274 loc-spec => "locate" "constant" qual-ident "at" string
275 loc-spec => "locate" "port" qual-ident "at" string
276 loc-spec => "locate" "state" "machine" qual-ident "at" string
277 loc-spec => "locate" "topology" qual-ident "at" string
278 loc-spec => "locate" "type" qual-ident "at" string
279 port-match-spec => "match" ident "with" ident
280 expr => add-expr
281 add-expr => mul-expr
282 add-expr => add-expr "+" mul-expr
283 add-expr => add-expr "-" mul-expr
284 mul-expr => unary-expr
285 mul-expr => mul-expr "*" unary-expr
286 mul-expr => mul-expr "/" unary-expr
287 unary-expr => prim-expr
288 unary-expr => "-" unary-expr
289 prim-expr => qual-ident
290 prim-expr => number
291 prim-expr => string
292 prim-expr => "[" expr-seq "]"
293 prim-expr => "{" struct-elt-seq "}"
294 prim-expr => "(" expr ")"
295 expr-seq => expr
296 expr-seq => expr elt-sep expr-seq
297 struct-elt-seq =>
298 struct-elt-seq => ident "=" expr elt-sep struct-elt-seq
299 number => '$float
300 number => '$fixed
301 ident => '$ident
302 string => '$string
303 lone-anno => '$lone-anno
304 code-anno => code-anno-list
305 code-anno-list => '$code-anno
306 code-anno-list => code-anno-list "\n" '$code-anno
307 qual-ident => qual-ident-1
308 qual-ident-1 => ident
309 qual-ident-1 => qual-ident-1 "." ident
310 qual-ident-seq =>
311 qual-ident-seq => qual-ident elt-sep qual-ident-seq
312 index => "[" expr "]"
313 type-name => qual-ident
314 type-name => "I8"
315 type-name => "U8"
316 type-name => "I16"
317 type-name => "U16"
318 type-name => "I32"
319 type-name => "U32"
320 type-name => "I64"
321 type-name => "U64"
322 type-name => "F32"
323 type-name => "F64"
324 type-name => "bool"
325 type-name => "string"
326 type-name => "string" "size" expr
327 stmach-inst => stmach-inst-2
328 stmach-inst => stmach-inst-2 code-anno
329 stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident
330 stmach-inst-1 => stmach-inst-0
331 stmach-inst-1 => stmach-inst-0 "priority" expr
332 stmach-inst-2 => stmach-inst-1
333 stmach-inst-2 => stmach-inst-1 queue-full-beh
334 stmach-defn => "state" "machine" ident
335 stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}"
336 stmach-mem-seq =>
337 stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq
338 stmach-mem => lone-anno
339 stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
340 stmach-mem => "action" ident
341 stmach-mem => "action" ident ":" type-name
342 stmach-mem => "guard" ident
343 stmach-mem => "guard" ident ":" type-name
344 stmach-mem => "signal" ident
345 stmach-mem => "signal" ident ":" type-name
346 stmach-mem => "initial" trans-expr
347 stmach-mem => state-defn
348 state-defn => "state" ident
349 state-defn => "state" ident "{" state-defn-mem-seq "}"
350 state-defn-mem-seq =>
351 state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq
352 state-defn-mem => lone-anno
353 state-defn-mem => "initial" trans-expr
354 state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
355 state-defn-mem => state-defn
356 state-defn-mem => state-trans-spec
357 state-defn-mem => "entry" do-expr
358 state-defn-mem => "exit" do-expr
359 state-trans-spec => st-tran-spec-2
360 st-tran-spec-0 => "on" ident
361 st-tran-spec-1 => st-tran-spec-0
362 st-tran-spec-1 => st-tran-spec-0 "if" ident
363 st-tran-spec-2 => st-tran-spec-1 trans-or-do
364 trans-expr => trans-expr-1
365 trans-expr-0 => "enter" qual-ident
366 trans-expr-1 => trans-expr-0
367 trans-expr-1 => do-expr trans-expr-0
368 do-expr => "do" "{" action-seq "}"
369 action-seq =>
370 action-seq => ident elt-sep action-seq
371 trans-or-do => trans-expr
372 trans-or-do => do-expr

0:	$start => . translation-unit
	translation-unit => . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 53
		translation-unit => shift 54
		$default => reduce 9

1:	comp-inst-0 => "instance" . ident ":" qual-ident "base" "id" expr
	ident => . '$ident
		'$ident => shift 60
		ident => shift 96

2:	comp-inst-1 => comp-inst-0 . "type" string
	comp-inst-1 => comp-inst-0 .
		"type" => shift 95
		"\n" => reduce 205
		$default => reduce 205

3:	comp-inst-2 => comp-inst-1 . "at" string
	comp-inst-2 => comp-inst-1 .
		"at" => shift 94
		"\n" => reduce 207
		$default => reduce 207

4:	comp-inst-3 => comp-inst-2 . "queue" "size" expr
	comp-inst-3 => comp-inst-2 .
		"queue" => shift 93
		"\n" => reduce 209
		$default => reduce 209

5:	enum-defn-0 => "enum" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 92

6:	comp-inst-4 => comp-inst-3 . "stack" "size" expr
	comp-inst-4 => comp-inst-3 .
		"stack" => shift 91
		"\n" => reduce 211
		$default => reduce 211

7:	port-defn-0 => "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 90

8:	enum-defn-1 => enum-defn-0 . ":" type-name
	enum-defn-1 => enum-defn-0 .
		":" => shift 89
		$default => reduce 34

9:	comp-inst-5 => comp-inst-4 . "priority" expr
	comp-inst-5 => comp-inst-4 .
		"priority" => shift 88
		"\n" => reduce 213
		$default => reduce 213

10:	port-defn-1 => port-defn-0 . "(" param-list ")"
	port-defn-1 => port-defn-0 .
		"(" => shift 87
		"\n" => reduce 65
		'$code-anno => reduce 65
		$default => reduce 65

11:	struct-defn-0 => "struct" . ident "{" struct-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 86

12:	enum-defn-2 => enum-defn-1 . "{" enum-mem-seq "}"
		"{" => shift 85

13:	comp-inst-6 => comp-inst-5 . "cpu" expr
	comp-inst-6 => comp-inst-5 .
		"cpu" => shift 84
		"\n" => reduce 215
		$default => reduce 215

14:	port-defn-2 => port-defn-1 . "->" type-name
	port-defn-2 => port-defn-1 .
		"->" => shift 83
		'$code-anno => reduce 67
		"\n" => reduce 67
		$default => reduce 67

15:	struct-defn-1 => struct-defn-0 . "default" expr
	struct-defn-1 => struct-defn-0 .
		"default" => shift 82
		'$code-anno => reduce 49
		"\n" => reduce 49
		$default => reduce 49

16:	enum-defn-3 => enum-defn-2 . "default" expr
	enum-defn-3 => enum-defn-2 .
		"default" => shift 81
		'$code-anno => reduce 37
		"\n" => reduce 37
		$default => reduce 37

17:	comp-inst-7 => comp-inst-6 . "{" string "}"
	comp-inst-7 => comp-inst-6 .
		"{" => shift 80
		"\n" => reduce 217
		$default => reduce 217

18:	comp-kind => "queued" .
		$default => reduce 74

19:	comp-kind => "passive" .
		$default => reduce 73

20:	comp-kind => "active" .
		$default => reduce 72

21:	port-defn-3 => port-defn-2 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	port-defn-3 => port-defn-2 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 79
		"\n" => reduce 69
		$default => reduce 69

22:	struct-defn-2 => struct-defn-1 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	struct-defn-2 => struct-defn-1 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 78
		"\n" => reduce 51
		$default => reduce 51

23:	enum-defn-4 => enum-defn-3 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	enum-defn-4 => enum-defn-3 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 77
		"\n" => reduce 39
		$default => reduce 39

24:	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 74

25:	lone-anno => '$lone-anno .
		"\n" => reduce 303
		$default => reduce 303

26:	loc-spec => "locate" . "type" qual-ident "at" string
	loc-spec => "locate" . "topology" qual-ident "at" string
	loc-spec => "locate" . "state" "machine" qual-ident "at" string
	loc-spec => "locate" . "port" qual-ident "at" string
	loc-spec => "locate" . "constant" qual-ident "at" string
	loc-spec => "locate" . "component" qual-ident "at" string
	loc-spec => "locate" . "instance" qual-ident "at" string
		"instance" => shift 67
		"component" => shift 68
		"constant" => shift 69
		"port" => shift 70
		"state" => shift 71
		"topology" => shift 72
		"type" => shift 73

27:	topology-defn => "topology" . ident "{" topo-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 66

28:	comp-inst-defn => comp-inst-7 .
		"\n" => reduce 203
		$default => reduce 203

29:	component-defn => comp-kind . "component" ident "{" comp-mem-seq "}"
		"component" => shift 65

30:	port-defn => port-defn-3 .
		"\n" => reduce 63
		$default => reduce 63

31:	struct-defn => struct-defn-2 .
		"\n" => reduce 47
		$default => reduce 47

32:	enum-defn => enum-defn-4 .
		"\n" => reduce 32
		$default => reduce 32

33:	array-defn => "array" . ident "=" index ident code-anno
	ident => . '$ident
	array-defn => "array" . ident "=" index ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 64

34:	abs-type-defn => "type" . ident code-anno
	ident => . '$ident
	abs-type-defn => "type" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 63

35:	const-defn => "constant" . ident "=" expr code-anno
	ident => . '$ident
	const-defn => "constant" . ident "=" expr
	ident => . '$ident
		'$ident => shift 60
		ident => shift 62

36:	module-defn => "module" . ident "{" module-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 61

37:	mod-mem => stmach-defn .
		"\n" => reduce 24
		$default => reduce 24

38:	mod-mem => enum-defn .
		"\n" => reduce 23
		$default => reduce 23

39:	mod-mem => array-defn .
		"\n" => reduce 22
		$default => reduce 22

40:	mod-mem => abs-type-defn .
		"\n" => reduce 21
		$default => reduce 21

41:	mod-mem => loc-spec .
		"\n" => reduce 20
		$default => reduce 20

42:	mod-mem => struct-defn .
		"\n" => reduce 19
		$default => reduce 19

43:	mod-mem => port-defn .
		"\n" => reduce 18
		$default => reduce 18

44:	mod-mem => module-defn .
		"\n" => reduce 17
		$default => reduce 17

45:	mod-mem => const-defn .
		"\n" => reduce 16
		$default => reduce 16

46:	mod-mem => topology-defn .
		"\n" => reduce 15
		$default => reduce 15

47:	mod-mem => comp-inst-defn .
		"\n" => reduce 14
		$default => reduce 14

48:	mod-mem => component-defn .
		"\n" => reduce 13
		$default => reduce 13

49:	mod-mem => lone-anno .
		"\n" => reduce 12
		$default => reduce 12

50:	include-spec => "include" . '$string
		'$string => shift 59

51:	module-mem-seq => include-spec . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 58

52:	module-mem-seq => mod-mem . mem-sep module-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 57

53:	translation-unit => module-mem-seq .
		$default => reduce 8

54:	$start => translation-unit .
		'$end => accept 0

55:	mem-sep => "\n" .
		'$lone-anno => reduce 5
		"\n" => reduce 5
		$default => reduce 5

56:	mem-sep => ";" .
		'$lone-anno => reduce 4
		"\n" => reduce 4
		$default => reduce 4

57:	mem-sep => mem-sep . "\n"
	module-mem-seq => mod-mem mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 165
		"\n" => shift 164
		$default => reduce 9

58:	mem-sep => mem-sep . "\n"
	module-mem-seq => include-spec mem-sep . module-mem-seq
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 163
		"\n" => shift 164
		$default => reduce 9

59:	include-spec => "include" '$string .
		"\n" => reduce 7
		$default => reduce 7

60:	ident => '$ident .
		'$code-anno => reduce 301
		"\n" => reduce 301
		$default => reduce 301

61:	module-defn => "module" ident . "{" module-mem-seq "}"
		"{" => shift 162

62:	const-defn => "constant" ident . "=" expr
	const-defn => "constant" ident . "=" expr code-anno
		"=" => shift 161

63:	abs-type-defn => "type" ident .
	abs-type-defn => "type" ident . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 160
		"\n" => reduce 28
		$default => reduce 28

64:	array-defn => "array" ident . "=" index ident
	array-defn => "array" ident . "=" index ident code-anno
		"=" => shift 159

65:	component-defn => comp-kind "component" . ident "{" comp-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 158

66:	topology-defn => "topology" ident . "{" topo-mem-seq "}"
		"{" => shift 157

67:	loc-spec => "locate" "instance" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 156

68:	loc-spec => "locate" "component" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 155

69:	loc-spec => "locate" "constant" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 154

70:	loc-spec => "locate" "port" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 153

71:	loc-spec => "locate" "state" . "machine" qual-ident "at" string
		"machine" => shift 152

72:	loc-spec => "locate" "topology" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 151

73:	loc-spec => "locate" "type" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 150

74:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 149

75:	code-anno-list => '$code-anno .
		"\n" => reduce 305
		$default => reduce 305

76:	code-anno-list => code-anno-list . "\n" '$code-anno
	code-anno => code-anno-list .
		"\n" => shift 148
		$default => reduce 304
		["\n" => reduce 304] REMOVED by default shift

77:	enum-defn-4 => enum-defn-3 code-anno .
		"\n" => reduce 40
		$default => reduce 40

78:	struct-defn-2 => struct-defn-1 code-anno .
		"\n" => reduce 52
		$default => reduce 52

79:	port-defn-3 => port-defn-2 code-anno .
		"\n" => reduce 70
		$default => reduce 70

80:	comp-inst-7 => comp-inst-6 "{" . string "}"
	string => . '$string
		'$string => shift 98
		string => shift 147

81:	enum-defn-3 => enum-defn-2 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 146

82:	struct-defn-1 => struct-defn-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 145

83:	port-defn-2 => port-defn-1 "->" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 144

84:	comp-inst-6 => comp-inst-5 "cpu" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 143

85:	enum-defn-2 => enum-defn-1 "{" . enum-mem-seq "}"
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident code-anno
	enum-mem => . ident "=" expr
	enum-mem => . ident "=" expr code-anno
	ident => . '$ident
		'$ident => shift 60
		ident => shift 140
		enum-mem => shift 141
		enum-mem-seq => shift 142
		$default => reduce 41

86:	struct-defn-0 => "struct" ident . "{" struct-mem-seq "}"
		"{" => shift 139

87:	port-defn-1 => port-defn-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 138
		$default => reduce 261

88:	comp-inst-5 => comp-inst-4 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 132

89:	enum-defn-1 => enum-defn-0 ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 118

90:	port-defn-0 => "port" ident .
		'$code-anno => reduce 64
		"\n" => reduce 64
		$default => reduce 64

91:	comp-inst-4 => comp-inst-3 "stack" . "size" expr
		"size" => shift 102

92:	enum-defn-0 => "enum" ident .
		$default => reduce 33

93:	comp-inst-3 => comp-inst-2 "queue" . "size" expr
		"size" => shift 101

94:	comp-inst-2 => comp-inst-1 "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 100

95:	comp-inst-1 => comp-inst-0 "type" . string
	string => . '$string
		'$string => shift 98
		string => shift 99

96:	comp-inst-0 => "instance" ident . ":" qual-ident "base" "id" expr
		":" => shift 97

97:	comp-inst-0 => "instance" ident ":" . qual-ident "base" "id" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 232

98:	string => '$string .
		"\n" => reduce 302
		'$code-anno => reduce 302
		$default => reduce 302

99:	comp-inst-1 => comp-inst-0 "type" string .
		"\n" => reduce 206
		$default => reduce 206

100:	comp-inst-2 => comp-inst-1 "at" string .
		"\n" => reduce 208
		$default => reduce 208

101:	comp-inst-3 => comp-inst-2 "queue" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 231

102:	comp-inst-4 => comp-inst-3 "stack" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 230

103:	qual-ident-1 => ident .
		"\n" => reduce 308
		'$code-anno => reduce 308
		$default => reduce 308

104:	qual-ident-1 => qual-ident-1 . "." ident
	qual-ident => qual-ident-1 .
		"." => shift 229
		"\n" => reduce 307
		'$code-anno => reduce 307
		$default => reduce 307

105:	type-name => "string" . "size" expr
	type-name => "string" .
		"size" => shift 228
		'$code-anno => reduce 325
		"\n" => reduce 325
		$default => reduce 325

106:	type-name => "bool" .
		'$code-anno => reduce 324
		"\n" => reduce 324
		$default => reduce 324

107:	type-name => "F64" .
		'$code-anno => reduce 323
		"\n" => reduce 323
		$default => reduce 323

108:	type-name => "F32" .
		'$code-anno => reduce 322
		"\n" => reduce 322
		$default => reduce 322

109:	type-name => "U64" .
		'$code-anno => reduce 321
		"\n" => reduce 321
		$default => reduce 321

110:	type-name => "I64" .
		'$code-anno => reduce 320
		"\n" => reduce 320
		$default => reduce 320

111:	type-name => "U32" .
		'$code-anno => reduce 319
		"\n" => reduce 319
		$default => reduce 319

112:	type-name => "I32" .
		'$code-anno => reduce 318
		"\n" => reduce 318
		$default => reduce 318

113:	type-name => "U16" .
		'$code-anno => reduce 317
		"\n" => reduce 317
		$default => reduce 317

114:	type-name => "I16" .
		'$code-anno => reduce 316
		"\n" => reduce 316
		$default => reduce 316

115:	type-name => "U8" .
		'$code-anno => reduce 315
		"\n" => reduce 315
		$default => reduce 315

116:	type-name => "I8" .
		'$code-anno => reduce 314
		"\n" => reduce 314
		$default => reduce 314

117:	type-name => qual-ident .
		'$code-anno => reduce 313
		"\n" => reduce 313
		$default => reduce 313

118:	enum-defn-1 => enum-defn-0 ":" type-name .
		$default => reduce 35

119:	number => '$fixed .
		"\n" => reduce 300
		'$code-anno => reduce 300
		$default => reduce 300

120:	number => '$float .
		"\n" => reduce 299
		'$code-anno => reduce 299
		$default => reduce 299

121:	prim-expr => "(" . expr ")"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 227

122:	prim-expr => "{" . struct-elt-seq "}"
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 60
		ident => shift 225
		struct-elt-seq => shift 226
		$default => reduce 297

123:	prim-expr => "[" . expr-seq "]"
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 223
		expr-seq => shift 224

124:	prim-expr => string .
		"\n" => reduce 291
		'$code-anno => reduce 291
		$default => reduce 291

125:	prim-expr => number .
		"\n" => reduce 290
		'$code-anno => reduce 290
		$default => reduce 290

126:	prim-expr => qual-ident .
		"\n" => reduce 289
		'$code-anno => reduce 289
		$default => reduce 289

127:	unary-expr => "-" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 222

128:	unary-expr => prim-expr .
		"\n" => reduce 287
		'$code-anno => reduce 287
		$default => reduce 287

129:	mul-expr => unary-expr .
		"\n" => reduce 284
		'$code-anno => reduce 284
		$default => reduce 284

130:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => mul-expr .
		"*" => shift 220
		"/" => shift 221
		"\n" => reduce 281
		'$code-anno => reduce 281
		$default => reduce 281

131:	add-expr => add-expr . "-" mul-expr
	add-expr => add-expr . "+" mul-expr
	expr => add-expr .
		"+" => shift 218
		"-" => shift 219
		"\n" => reduce 280
		'$code-anno => reduce 280
		$default => reduce 280

132:	comp-inst-5 => comp-inst-4 "priority" expr .
		"\n" => reduce 214
		$default => reduce 214

133:	formal-param-1 => "ref" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		ident => shift 217

134:	formal-param-1 => ident . ":" type-name
		":" => shift 216

135:	formal-param => formal-param-1 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	formal-param => formal-param-1 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 215
		"\n" => reduce 263
		$default => reduce 263

136:	param-list-1 => formal-param . elt-sep param-list-1
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 214

137:	param-list => param-list-1 .
		$default => reduce 260

138:	port-defn-1 => port-defn-0 "(" param-list . ")"
		")" => shift 213

139:	struct-defn-0 => "struct" ident "{" . struct-mem-seq "}"
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem => . struct-mem-3 code-anno
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 206
		struct-mem-0 => shift 207
		struct-mem-1 => shift 208
		struct-mem-2 => shift 209
		struct-mem-3 => shift 210
		struct-mem => shift 211
		struct-mem-seq => shift 212
		$default => reduce 53

140:	enum-mem => ident . "=" expr code-anno
	enum-mem => ident . "=" expr
	enum-mem => ident . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	enum-mem => ident .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 204
		"=" => shift 205
		"\n" => reduce 43
		$default => reduce 43

141:	enum-mem-seq => enum-mem . elt-sep enum-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 203

142:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq . "}"
		"}" => shift 200

143:	comp-inst-6 => comp-inst-5 "cpu" expr .
		"\n" => reduce 216
		$default => reduce 216

144:	port-defn-2 => port-defn-1 "->" type-name .
		'$code-anno => reduce 68
		"\n" => reduce 68
		$default => reduce 68

145:	struct-defn-1 => struct-defn-0 "default" expr .
		'$code-anno => reduce 50
		"\n" => reduce 50
		$default => reduce 50

146:	enum-defn-3 => enum-defn-2 "default" expr .
		'$code-anno => reduce 38
		"\n" => reduce 38
		$default => reduce 38

147:	comp-inst-7 => comp-inst-6 "{" string . "}"
		"}" => shift 199

148:	code-anno-list => code-anno-list "\n" . '$code-anno
		'$code-anno => shift 198

149:	stmach-defn => "state" "machine" ident . "{" stmach-mem-seq "}"
	stmach-defn => "state" "machine" ident .
		"{" => shift 197
		"\n" => reduce 334
		$default => reduce 334

150:	loc-spec => "locate" "type" qual-ident . "at" string
		"at" => shift 196

151:	loc-spec => "locate" "topology" qual-ident . "at" string
		"at" => shift 195

152:	loc-spec => "locate" "state" "machine" . qual-ident "at" string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 194

153:	loc-spec => "locate" "port" qual-ident . "at" string
		"at" => shift 193

154:	loc-spec => "locate" "constant" qual-ident . "at" string
		"at" => shift 192

155:	loc-spec => "locate" "component" qual-ident . "at" string
		"at" => shift 191

156:	loc-spec => "locate" "instance" qual-ident . "at" string
		"at" => shift 190

157:	topology-defn => "topology" ident "{" . topo-mem-seq "}"
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem-seq => . include-spec mem-sep topo-mem-seq
	include-spec => . "include" '$string
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 171
		"time" => shift 172
		"param" => shift 173
		"health" => shift 174
		"event" => shift 175
		"command" => shift 176
		'$lone-anno => shift 25
		"telemetry" => shift 177
		pattern-kind => shift 178
		"connections" => shift 179
		"private" => shift 180
		"instance" => shift 181
		"import" => shift 182
		tlm-pktset-spec => shift 183
		conn-graph-spec => shift 184
		comp-inst-spec => shift 185
		lone-anno => shift 186
		"include" => shift 50
		include-spec => shift 187
		topo-mem => shift 188
		topo-mem-seq => shift 189
		$default => reduce 220

158:	component-defn => comp-kind "component" ident . "{" comp-mem-seq "}"
		"{" => shift 170

159:	array-defn => "array" ident "=" . index ident code-anno
	index => . "[" expr "]"
	array-defn => "array" ident "=" . index ident
	index => . "[" expr "]"
		"[" => shift 168
		index => shift 169

160:	abs-type-defn => "type" ident code-anno .
		"\n" => reduce 29
		$default => reduce 29

161:	const-defn => "constant" ident "=" . expr code-anno
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	const-defn => "constant" ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 167

162:	module-defn => "module" ident "{" . module-mem-seq "}"
	module-mem-seq => .
	module-mem-seq => . mod-mem mem-sep module-mem-seq
	module-mem-seq => . include-spec mem-sep module-mem-seq
	include-spec => . "include" '$string
	mod-mem => . lone-anno
	mod-mem => . component-defn
	mod-mem => . comp-inst-defn
	mod-mem => . topology-defn
	mod-mem => . const-defn
	mod-mem => . module-defn
	mod-mem => . port-defn
	mod-mem => . struct-defn
	mod-mem => . loc-spec
	mod-mem => . abs-type-defn
	mod-mem => . array-defn
	mod-mem => . enum-defn
	mod-mem => . stmach-defn
	module-defn => . "module" ident "{" module-mem-seq "}"
	const-defn => . "constant" ident "=" expr
	const-defn => . "constant" ident "=" expr code-anno
	abs-type-defn => . "type" ident
	abs-type-defn => . "type" ident code-anno
	array-defn => . "array" ident "=" index ident
	array-defn => . "array" ident "=" index ident code-anno
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-defn => . port-defn-3
	component-defn => . comp-kind "component" ident "{" comp-mem-seq "}"
	comp-inst-defn => . comp-inst-7
	topology-defn => . "topology" ident "{" topo-mem-seq "}"
	loc-spec => . "locate" "instance" qual-ident "at" string
	loc-spec => . "locate" "component" qual-ident "at" string
	loc-spec => . "locate" "constant" qual-ident "at" string
	loc-spec => . "locate" "port" qual-ident "at" string
	loc-spec => . "locate" "state" "machine" qual-ident "at" string
	loc-spec => . "locate" "topology" qual-ident "at" string
	loc-spec => . "locate" "type" qual-ident "at" string
	lone-anno => . '$lone-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	port-defn-3 => . port-defn-2
	port-defn-3 => . port-defn-2 code-anno
	comp-kind => . "active"
	comp-kind => . "passive"
	comp-kind => . "queued"
	comp-inst-7 => . comp-inst-6
	comp-inst-7 => . comp-inst-6 "{" string "}"
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	port-defn-2 => . port-defn-1
	port-defn-2 => . port-defn-1 "->" type-name
	comp-inst-6 => . comp-inst-5
	comp-inst-6 => . comp-inst-5 "cpu" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	port-defn-1 => . port-defn-0
	port-defn-1 => . port-defn-0 "(" param-list ")"
	comp-inst-5 => . comp-inst-4
	comp-inst-5 => . comp-inst-4 "priority" expr
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	port-defn-0 => . "port" ident
	comp-inst-4 => . comp-inst-3
	comp-inst-4 => . comp-inst-3 "stack" "size" expr
	enum-defn-0 => . "enum" ident
	comp-inst-3 => . comp-inst-2
	comp-inst-3 => . comp-inst-2 "queue" "size" expr
	comp-inst-2 => . comp-inst-1
	comp-inst-2 => . comp-inst-1 "at" string
	comp-inst-1 => . comp-inst-0
	comp-inst-1 => . comp-inst-0 "type" string
	comp-inst-0 => . "instance" ident ":" qual-ident "base" "id" expr
		"instance" => shift 1
		comp-inst-0 => shift 2
		comp-inst-1 => shift 3
		comp-inst-2 => shift 4
		"enum" => shift 5
		comp-inst-3 => shift 6
		"port" => shift 7
		enum-defn-0 => shift 8
		comp-inst-4 => shift 9
		port-defn-0 => shift 10
		"struct" => shift 11
		enum-defn-1 => shift 12
		comp-inst-5 => shift 13
		port-defn-1 => shift 14
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		comp-inst-6 => shift 17
		"queued" => shift 18
		"passive" => shift 19
		"active" => shift 20
		port-defn-2 => shift 21
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 24
		'$lone-anno => shift 25
		"locate" => shift 26
		"topology" => shift 27
		comp-inst-7 => shift 28
		comp-kind => shift 29
		port-defn-3 => shift 30
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		"array" => shift 33
		"type" => shift 34
		"constant" => shift 35
		"module" => shift 36
		stmach-defn => shift 37
		enum-defn => shift 38
		array-defn => shift 39
		abs-type-defn => shift 40
		loc-spec => shift 41
		struct-defn => shift 42
		port-defn => shift 43
		module-defn => shift 44
		const-defn => shift 45
		topology-defn => shift 46
		comp-inst-defn => shift 47
		component-defn => shift 48
		lone-anno => shift 49
		"include" => shift 50
		include-spec => shift 51
		mod-mem => shift 52
		module-mem-seq => shift 166
		$default => reduce 9

163:	module-mem-seq => include-spec mem-sep module-mem-seq .
		$default => reduce 11

164:	mem-sep => mem-sep "\n" .
		'$lone-anno => reduce 6
		"\n" => reduce 6
		$default => reduce 6

165:	module-mem-seq => mod-mem mem-sep module-mem-seq .
		$default => reduce 10

166:	module-defn => "module" ident "{" module-mem-seq . "}"
		"}" => shift 365

167:	const-defn => "constant" ident "=" expr .
	const-defn => "constant" ident "=" expr . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 364
		"\n" => reduce 26
		$default => reduce 26

168:	index => "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 363

169:	array-defn => "array" ident "=" index . ident
	ident => . '$ident
	array-defn => "array" ident "=" index . ident code-anno
	ident => . '$ident
		'$ident => shift 60
		ident => shift 362

170:	component-defn => comp-kind "component" ident "{" . comp-mem-seq "}"
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem-seq => . include-spec mem-sep comp-mem-seq
	include-spec => . "include" '$string
	comp-mem => . lone-anno
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	enum-defn-0 => . "enum" ident
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 285
		event-spec-0 => shift 286
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 289
		"param" => shift 290
		"event" => shift 291
		"command" => shift 292
		"output" => shift 293
		"enum" => shift 5
		tlm-chan-1 => shift 294
		param-spec-0 => shift 295
		event-spec-1 => shift 296
		"sync" => shift 297
		"guarded" => shift 298
		"async" => shift 299
		cmd-spec-0 => shift 300
		"internal" => shift 301
		spc-port-kind => shift 302
		gen-port-inst-0 => shift 303
		enum-defn-0 => shift 8
		"product" => shift 304
		tlm-chan-2 => shift 305
		param-spec-1 => shift 306
		event-spec-2 => shift 307
		cmd-spec-1 => shift 308
		int-port-defn-0 => shift 309
		input-port-kind => shift 310
		spc-port-inst-0 => shift 311
		gen-port-inst-1 => shift 312
		"struct" => shift 11
		enum-defn-1 => shift 12
		stmach-inst-0 => shift 313
		cont-spec-0 => shift 314
		record-spec-0 => shift 315
		tlm-chan-3 => shift 316
		param-spec-2 => shift 317
		event-spec-3 => shift 318
		cmd-spec-2 => shift 319
		int-port-defn-1 => shift 320
		spc-port-inst-1 => shift 321
		gen-port-inst-2 => shift 322
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		stmach-inst-1 => shift 323
		cont-spec-1 => shift 324
		record-spec-1 => shift 325
		tlm-chan-4 => shift 326
		param-spec-3 => shift 327
		event-spec-4 => shift 328
		cmd-spec-3 => shift 329
		int-port-defn-2 => shift 330
		spc-port-inst-2 => shift 331
		gen-port-inst-3 => shift 332
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 333
		stmach-inst-2 => shift 334
		'$lone-anno => shift 25
		"match" => shift 335
		cont-spec-2 => shift 336
		record-spec-2 => shift 337
		tlm-chan-5 => shift 338
		param-spec-4 => shift 339
		event-spec-5 => shift 340
		cmd-spec-4 => shift 341
		int-port-defn-3 => shift 342
		spc-port-inst-3 => shift 343
		gen-port-inst-4 => shift 344
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		stmach-inst => shift 345
		stmach-defn => shift 346
		tlm-chan-spec => shift 347
		prod-cont-spec => shift 348
		record-spec => shift 349
		param-spec => shift 350
		event-spec => shift 351
		command-spec => shift 352
		port-match-spec => shift 353
		port-inst => shift 354
		int-port-spec => shift 355
		struct-defn => shift 356
		enum-defn => shift 357
		lone-anno => shift 358
		"include" => shift 50
		include-spec => shift 359
		comp-mem => shift 360
		comp-mem-seq => shift 361
		$default => reduce 75

171:	pattern-kind => "text" . "event"
		"event" => shift 284

172:	pattern-kind => "time" .
		$default => reduce 238

173:	pattern-kind => "param" .
		$default => reduce 236

174:	pattern-kind => "health" .
		$default => reduce 235

175:	pattern-kind => "event" .
		$default => reduce 234

176:	pattern-kind => "command" .
		$default => reduce 233

177:	pattern-kind => "telemetry" .
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" . "packets" ident "{" tlm-pktgrp-mem-seq "}"
		"packets" => shift 283
		$default => reduce 237

178:	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident "{" qual-ident-seq "}"
	conn-graph-spec => pattern-kind . "connections" "instance" qual-ident
		"connections" => shift 282

179:	conn-graph-spec => "connections" . ident "{" conn-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 281

180:	comp-inst-spec => "private" . "instance" ident
		"instance" => shift 280

181:	comp-inst-spec => "instance" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 279

182:	topo-mem => "import" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 278

183:	topo-mem => tlm-pktset-spec .
		"\n" => reduce 226
		$default => reduce 226

184:	topo-mem => conn-graph-spec .
		"\n" => reduce 225
		$default => reduce 225

185:	topo-mem => comp-inst-spec .
		"\n" => reduce 224
		$default => reduce 224

186:	topo-mem => lone-anno .
		"\n" => reduce 223
		$default => reduce 223

187:	topo-mem-seq => include-spec . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 277

188:	topo-mem-seq => topo-mem . mem-sep topo-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 276

189:	topology-defn => "topology" ident "{" topo-mem-seq . "}"
		"}" => shift 275

190:	loc-spec => "locate" "instance" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 274

191:	loc-spec => "locate" "component" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 273

192:	loc-spec => "locate" "constant" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 272

193:	loc-spec => "locate" "port" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 271

194:	loc-spec => "locate" "state" "machine" qual-ident . "at" string
		"at" => shift 270

195:	loc-spec => "locate" "topology" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 269

196:	loc-spec => "locate" "type" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 268

197:	stmach-defn => "state" "machine" ident "{" . stmach-mem-seq "}"
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . lone-anno
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 258
		'$lone-anno => shift 25
		state-defn => shift 259
		"initial" => shift 260
		"signal" => shift 261
		"guard" => shift 262
		"action" => shift 263
		"choice" => shift 264
		lone-anno => shift 265
		stmach-mem => shift 266
		stmach-mem-seq => shift 267
		$default => reduce 336

198:	code-anno-list => code-anno-list "\n" '$code-anno .
		"\n" => reduce 306
		$default => reduce 306

199:	comp-inst-7 => comp-inst-6 "{" string "}" .
		"\n" => reduce 218
		$default => reduce 218

200:	enum-defn-2 => enum-defn-1 "{" enum-mem-seq "}" .
		"\n" => reduce 36
		'$code-anno => reduce 36
		$default => reduce 36

201:	elt-sep => "\n" .
		"\n" => reduce 2
		$default => reduce 2

202:	elt-sep => "," .
		"\n" => reduce 1
		$default => reduce 1

203:	elt-sep => elt-sep . "\n"
	enum-mem-seq => enum-mem elt-sep . enum-mem-seq
	enum-mem-seq => .
	enum-mem-seq => . enum-mem elt-sep enum-mem-seq
	enum-mem => . ident
	enum-mem => . ident code-anno
	enum-mem => . ident "=" expr
	enum-mem => . ident "=" expr code-anno
	ident => . '$ident
		'$ident => shift 60
		ident => shift 140
		enum-mem => shift 141
		enum-mem-seq => shift 257
		"\n" => shift 248
		$default => reduce 41

204:	enum-mem => ident code-anno .
		"\n" => reduce 44
		$default => reduce 44

205:	enum-mem => ident "=" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	enum-mem => ident "=" . expr code-anno
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 256

206:	struct-mem-0 => ident . ":"
		":" => shift 255

207:	struct-mem-1 => struct-mem-0 . "[" expr "]"
	struct-mem-1 => struct-mem-0 .
		"[" => shift 254
		$default => reduce 58

208:	struct-mem-2 => struct-mem-1 . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 253

209:	struct-mem-3 => struct-mem-2 . "format" string
	struct-mem-3 => struct-mem-2 .
		"format" => shift 252
		'$code-anno => reduce 61
		"\n" => reduce 61
		$default => reduce 61

210:	struct-mem => struct-mem-3 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	struct-mem => struct-mem-3 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 251
		"\n" => reduce 55
		$default => reduce 55

211:	struct-mem-seq => struct-mem . mem-sep struct-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 250

212:	struct-defn-0 => "struct" ident "{" struct-mem-seq . "}"
		"}" => shift 249

213:	port-defn-1 => port-defn-0 "(" param-list ")" .
		"\n" => reduce 66
		'$code-anno => reduce 66
		$default => reduce 66

214:	elt-sep => elt-sep . "\n"
	param-list-1 => formal-param elt-sep . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 247
		"\n" => shift 248
		$default => reduce 261

215:	formal-param => formal-param-1 code-anno .
		"\n" => reduce 264
		$default => reduce 264

216:	formal-param-1 => ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 246

217:	formal-param-1 => "ref" ident . ":" type-name
		":" => shift 245

218:	add-expr => add-expr "+" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 244

219:	add-expr => add-expr "-" . mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 243

220:	mul-expr => mul-expr "*" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 242

221:	mul-expr => mul-expr "/" . unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 241

222:	unary-expr => "-" unary-expr .
		"\n" => reduce 288
		'$code-anno => reduce 288
		$default => reduce 288

223:	expr-seq => expr . elt-sep expr-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	expr-seq => expr .
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 240
		$default => reduce 295

224:	prim-expr => "[" expr-seq . "]"
		"]" => shift 239

225:	struct-elt-seq => ident . "=" expr elt-sep struct-elt-seq
		"=" => shift 238

226:	prim-expr => "{" struct-elt-seq . "}"
		"}" => shift 237

227:	prim-expr => "(" expr . ")"
		")" => shift 236

228:	type-name => "string" "size" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 235

229:	qual-ident-1 => qual-ident-1 "." . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 234

230:	comp-inst-4 => comp-inst-3 "stack" "size" expr .
		"\n" => reduce 212
		$default => reduce 212

231:	comp-inst-3 => comp-inst-2 "queue" "size" expr .
		"\n" => reduce 210
		$default => reduce 210

232:	comp-inst-0 => "instance" ident ":" qual-ident . "base" "id" expr
		"base" => shift 233

233:	comp-inst-0 => "instance" ident ":" qual-ident "base" . "id" expr
		"id" => shift 466

234:	qual-ident-1 => qual-ident-1 "." ident .
		"\n" => reduce 309
		'$code-anno => reduce 309
		$default => reduce 309

235:	type-name => "string" "size" expr .
		'$code-anno => reduce 326
		"\n" => reduce 326
		$default => reduce 326

236:	prim-expr => "(" expr ")" .
		"\n" => reduce 294
		'$code-anno => reduce 294
		$default => reduce 294

237:	prim-expr => "{" struct-elt-seq "}" .
		"\n" => reduce 293
		'$code-anno => reduce 293
		$default => reduce 293

238:	struct-elt-seq => ident "=" . expr elt-sep struct-elt-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 465

239:	prim-expr => "[" expr-seq "]" .
		"\n" => reduce 292
		'$code-anno => reduce 292
		$default => reduce 292

240:	elt-sep => elt-sep . "\n"
	expr-seq => expr elt-sep . expr-seq
	expr-seq => . expr
	expr-seq => . expr elt-sep expr-seq
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 223
		expr-seq => shift 464
		"\n" => shift 248

241:	mul-expr => mul-expr "/" unary-expr .
		"\n" => reduce 286
		'$code-anno => reduce 286
		$default => reduce 286

242:	mul-expr => mul-expr "*" unary-expr .
		"\n" => reduce 285
		'$code-anno => reduce 285
		$default => reduce 285

243:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "-" mul-expr .
		"*" => shift 220
		"/" => shift 221
		"\n" => reduce 283
		'$code-anno => reduce 283
		$default => reduce 283

244:	mul-expr => mul-expr . "/" unary-expr
	mul-expr => mul-expr . "*" unary-expr
	add-expr => add-expr "+" mul-expr .
		"*" => shift 220
		"/" => shift 221
		"\n" => reduce 282
		'$code-anno => reduce 282
		$default => reduce 282

245:	formal-param-1 => "ref" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 463

246:	formal-param-1 => ident ":" type-name .
		'$code-anno => reduce 265
		"\n" => reduce 265
		$default => reduce 265

247:	param-list-1 => formal-param elt-sep param-list-1 .
		$default => reduce 262

248:	elt-sep => elt-sep "\n" .
		"\n" => reduce 3
		$default => reduce 3

249:	struct-defn-0 => "struct" ident "{" struct-mem-seq "}" .
		"\n" => reduce 48
		'$code-anno => reduce 48
		$default => reduce 48

250:	mem-sep => mem-sep . "\n"
	struct-mem-seq => struct-mem mem-sep . struct-mem-seq
	struct-mem-seq => .
	struct-mem-seq => . struct-mem mem-sep struct-mem-seq
	struct-mem => . struct-mem-3
	struct-mem => . struct-mem-3 code-anno
	struct-mem-3 => . struct-mem-2
	struct-mem-3 => . struct-mem-2 "format" string
	struct-mem-2 => . struct-mem-1 type-name
	struct-mem-1 => . struct-mem-0
	struct-mem-1 => . struct-mem-0 "[" expr "]"
	struct-mem-0 => . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 206
		struct-mem-0 => shift 207
		struct-mem-1 => shift 208
		struct-mem-2 => shift 209
		struct-mem-3 => shift 210
		struct-mem => shift 211
		struct-mem-seq => shift 462
		"\n" => shift 164
		$default => reduce 53

251:	struct-mem => struct-mem-3 code-anno .
		"\n" => reduce 56
		$default => reduce 56

252:	struct-mem-3 => struct-mem-2 "format" . string
	string => . '$string
		'$string => shift 98
		string => shift 461

253:	struct-mem-2 => struct-mem-1 type-name .
		"\n" => reduce 60
		'$code-anno => reduce 60
		$default => reduce 60

254:	struct-mem-1 => struct-mem-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 460

255:	struct-mem-0 => ident ":" .
		$default => reduce 57

256:	enum-mem => ident "=" expr . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	enum-mem => ident "=" expr .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 459
		"\n" => reduce 45
		$default => reduce 45

257:	enum-mem-seq => enum-mem elt-sep enum-mem-seq .
		$default => reduce 42

258:	state-defn => "state" . ident "{" state-defn-mem-seq "}"
	ident => . '$ident
	state-defn => "state" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 458

259:	stmach-mem => state-defn .
		"\n" => reduce 347
		$default => reduce 347

260:	stmach-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		"enter" => shift 453
		do-expr => shift 454
		trans-expr-0 => shift 455
		trans-expr-1 => shift 456
		trans-expr => shift 457

261:	stmach-mem => "signal" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "signal" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 451

262:	stmach-mem => "guard" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "guard" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 450

263:	stmach-mem => "action" . ident ":" type-name
	ident => . '$ident
	stmach-mem => "action" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 449

264:	stmach-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 448

265:	stmach-mem => lone-anno .
		"\n" => reduce 338
		$default => reduce 338

266:	stmach-mem-seq => stmach-mem . mem-sep stmach-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 447

267:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq . "}"
		"}" => shift 446

268:	loc-spec => "locate" "type" qual-ident "at" string .
		"\n" => reduce 278
		$default => reduce 278

269:	loc-spec => "locate" "topology" qual-ident "at" string .
		"\n" => reduce 277
		$default => reduce 277

270:	loc-spec => "locate" "state" "machine" qual-ident "at" . string
	string => . '$string
		'$string => shift 98
		string => shift 445

271:	loc-spec => "locate" "port" qual-ident "at" string .
		"\n" => reduce 275
		$default => reduce 275

272:	loc-spec => "locate" "constant" qual-ident "at" string .
		"\n" => reduce 274
		$default => reduce 274

273:	loc-spec => "locate" "component" qual-ident "at" string .
		"\n" => reduce 273
		$default => reduce 273

274:	loc-spec => "locate" "instance" qual-ident "at" string .
		"\n" => reduce 272
		$default => reduce 272

275:	topology-defn => "topology" ident "{" topo-mem-seq "}" .
		"\n" => reduce 219
		$default => reduce 219

276:	mem-sep => mem-sep . "\n"
	topo-mem-seq => topo-mem mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem-seq => . include-spec mem-sep topo-mem-seq
	include-spec => . "include" '$string
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 171
		"time" => shift 172
		"param" => shift 173
		"health" => shift 174
		"event" => shift 175
		"command" => shift 176
		'$lone-anno => shift 25
		"telemetry" => shift 177
		pattern-kind => shift 178
		"connections" => shift 179
		"private" => shift 180
		"instance" => shift 181
		"import" => shift 182
		tlm-pktset-spec => shift 183
		conn-graph-spec => shift 184
		comp-inst-spec => shift 185
		lone-anno => shift 186
		"include" => shift 50
		include-spec => shift 187
		topo-mem => shift 188
		topo-mem-seq => shift 444
		"\n" => shift 164
		$default => reduce 220

277:	mem-sep => mem-sep . "\n"
	topo-mem-seq => include-spec mem-sep . topo-mem-seq
	topo-mem-seq => .
	topo-mem-seq => . topo-mem mem-sep topo-mem-seq
	topo-mem-seq => . include-spec mem-sep topo-mem-seq
	include-spec => . "include" '$string
	topo-mem => . lone-anno
	topo-mem => . comp-inst-spec
	topo-mem => . conn-graph-spec
	topo-mem => . tlm-pktset-spec
	topo-mem => . "import" qual-ident
	comp-inst-spec => . "instance" ident
	comp-inst-spec => . "private" "instance" ident
	conn-graph-spec => . "connections" ident "{" conn-seq "}"
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident
	conn-graph-spec => . pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}"
	tlm-pktset-spec => . "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	lone-anno => . '$lone-anno
	pattern-kind => . "command"
	pattern-kind => . "event"
	pattern-kind => . "health"
	pattern-kind => . "param"
	pattern-kind => . "telemetry"
	pattern-kind => . "time"
	pattern-kind => . "text" "event"
		"text" => shift 171
		"time" => shift 172
		"param" => shift 173
		"health" => shift 174
		"event" => shift 175
		"command" => shift 176
		'$lone-anno => shift 25
		"telemetry" => shift 177
		pattern-kind => shift 178
		"connections" => shift 179
		"private" => shift 180
		"instance" => shift 181
		"import" => shift 182
		tlm-pktset-spec => shift 183
		conn-graph-spec => shift 184
		comp-inst-spec => shift 185
		lone-anno => shift 186
		"include" => shift 50
		include-spec => shift 187
		topo-mem => shift 188
		topo-mem-seq => shift 443
		"\n" => shift 164
		$default => reduce 220

278:	topo-mem => "import" qual-ident .
		"\n" => reduce 227
		$default => reduce 227

279:	comp-inst-spec => "instance" ident .
		"\n" => reduce 228
		$default => reduce 228

280:	comp-inst-spec => "private" "instance" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 442

281:	conn-graph-spec => "connections" ident . "{" conn-seq "}"
		"{" => shift 441

282:	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident
	conn-graph-spec => pattern-kind "connections" . "instance" qual-ident "{" qual-ident-seq "}"
		"instance" => shift 440

283:	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}"
	ident => . '$ident
	tlm-pktset-spec => "telemetry" "packets" . ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 439

284:	pattern-kind => "text" "event" .
		$default => reduce 239

285:	tlm-chan-1 => tlm-chan-0 . "id" expr
	tlm-chan-1 => tlm-chan-0 .
		"id" => shift 438
		"\n" => reduce 174
		$default => reduce 174

286:	event-spec-1 => event-spec-0 . "(" param-list ")"
	event-spec-1 => event-spec-0 .
		"(" => shift 437
		$default => reduce 147

287:	spc-port-kind => "time" . "get"
		"get" => shift 436

288:	spc-port-kind => "text" . "event"
		"event" => shift 435

289:	tlm-chan-0 => "telemetry" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "telemetry" .
		'$ident => shift 60
		ident => shift 434
		$default => reduce 139

290:	param-spec-0 => "param" . ident ":" type-name
	ident => . '$ident
	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 431
		"set" => shift 432
		'$ident => shift 60
		ident => shift 433

291:	event-spec-0 => "event" . ident
	ident => . '$ident
	spc-port-kind => "event" .
		'$ident => shift 60
		ident => shift 430
		$default => reduce 132

292:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
		"recv" => shift 427
		"reg" => shift 428
		"resp" => shift 429

293:	gen-port-inst-0 => "output" . "port" ident ":"
		"port" => shift 426

294:	tlm-chan-2 => tlm-chan-1 . "update" tlm-update
	tlm-chan-2 => tlm-chan-1 .
		"update" => shift 425
		"\n" => reduce 176
		$default => reduce 176

295:	param-spec-1 => param-spec-0 . "default" expr
	param-spec-1 => param-spec-0 .
		"default" => shift 424
		"\n" => reduce 164
		$default => reduce 164

296:	event-spec-2 => event-spec-1 . "severity" severity
		"severity" => shift 423

297:	input-port-kind => "sync" .
		$default => reduce 144

298:	input-port-kind => "guarded" .
		$default => reduce 143

299:	input-port-kind => "async" .
		$default => reduce 142

300:	cmd-spec-1 => cmd-spec-0 . "(" param-list ")"
	cmd-spec-1 => cmd-spec-0 .
		"(" => shift 422
		"\n" => reduce 121
		$default => reduce 121

301:	int-port-defn-0 => "internal" . "port" ident
		"port" => shift 421

302:	spc-port-inst-0 => spc-port-kind . "port" ident
		"port" => shift 420

303:	gen-port-inst-1 => gen-port-inst-0 . "[" expr "]"
	gen-port-inst-1 => gen-port-inst-0 .
		"[" => shift 419
		$default => reduce 96

304:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
	cont-spec-0 => "product" . "container" ident
	record-spec-0 => "product" . "record" ident ":" type-name
		"record" => shift 413
		"container" => shift 414
		"get" => shift 415
		"recv" => shift 416
		"request" => shift 417
		"send" => shift 418

305:	tlm-chan-3 => tlm-chan-2 . "format" string
	tlm-chan-3 => tlm-chan-2 .
		"format" => shift 412
		"\n" => reduce 178
		$default => reduce 178

306:	param-spec-2 => param-spec-1 . "id" expr
	param-spec-2 => param-spec-1 .
		"id" => shift 411
		"\n" => reduce 166
		$default => reduce 166

307:	event-spec-3 => event-spec-2 . "id" expr
	event-spec-3 => event-spec-2 .
		"id" => shift 410
		$default => reduce 150

308:	cmd-spec-2 => cmd-spec-1 . "opcode" expr
	cmd-spec-2 => cmd-spec-1 .
		"opcode" => shift 409
		"\n" => reduce 123
		$default => reduce 123

309:	int-port-defn-1 => int-port-defn-0 . "(" param-list ")"
	int-port-defn-1 => int-port-defn-0 .
		"(" => shift 408
		"\n" => reduce 113
		$default => reduce 113

310:	cmd-spec-0 => input-port-kind . "command" ident
	gen-port-inst-0 => input-port-kind . "input" "port" ident ":"
	spc-port-inst-1 => input-port-kind . spc-port-inst-0
	spc-port-inst-0 => . spc-port-kind "port" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 401
		"product" => shift 402
		"param" => shift 403
		"event" => shift 404
		spc-port-kind => shift 302
		spc-port-inst-0 => shift 405
		"input" => shift 406
		"command" => shift 407

311:	spc-port-inst-1 => spc-port-inst-0 .
		"\n" => reduce 105
		$default => reduce 105

312:	gen-port-inst-2 => gen-port-inst-1 . "serial"
	gen-port-inst-2 => gen-port-inst-1 . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 399
		"serial" => shift 400

313:	stmach-inst-1 => stmach-inst-0 . "priority" expr
	stmach-inst-1 => stmach-inst-0 .
		"priority" => shift 398
		"\n" => reduce 330
		'$code-anno => reduce 330
		$default => reduce 330

314:	cont-spec-1 => cont-spec-0 . "id" expr
	cont-spec-1 => cont-spec-0 .
		"id" => shift 397
		"\n" => reduce 199
		$default => reduce 199

315:	record-spec-1 => record-spec-0 . "array"
	record-spec-1 => record-spec-0 .
		"array" => shift 396
		"\n" => reduce 193
		$default => reduce 193

316:	tlm-chan-4 => tlm-chan-3 . "low" "{" tlm-lim-seq "}"
	tlm-chan-4 => tlm-chan-3 .
		"low" => shift 395
		"\n" => reduce 180
		$default => reduce 180

317:	param-spec-3 => param-spec-2 . "set" "opcode" expr
	param-spec-3 => param-spec-2 .
		"set" => shift 394
		"\n" => reduce 168
		$default => reduce 168

318:	event-spec-4 => event-spec-3 . "format" string
		"format" => shift 393

319:	cmd-spec-3 => cmd-spec-2 . "priority" expr
	cmd-spec-3 => cmd-spec-2 .
		"priority" => shift 392
		"\n" => reduce 125
		$default => reduce 125

320:	int-port-defn-2 => int-port-defn-1 . "priority" expr
	int-port-defn-2 => int-port-defn-1 .
		"priority" => shift 391
		"\n" => reduce 115
		$default => reduce 115

321:	spc-port-inst-2 => spc-port-inst-1 . "priority" expr
	spc-port-inst-2 => spc-port-inst-1 .
		"priority" => shift 390
		"\n" => reduce 107
		$default => reduce 107

322:	gen-port-inst-3 => gen-port-inst-2 . "priority" expr
	gen-port-inst-3 => gen-port-inst-2 .
		"priority" => shift 389
		"\n" => reduce 100
		$default => reduce 100

323:	stmach-inst-2 => stmach-inst-1 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	stmach-inst-2 => stmach-inst-1 .
		"hook" => shift 374
		"drop" => shift 375
		"block" => shift 376
		"assert" => shift 377
		queue-full-beh-1 => shift 378
		queue-full-beh => shift 388
		'$code-anno => reduce 332
		"\n" => reduce 332
		$default => reduce 332

324:	cont-spec-2 => cont-spec-1 . "default" "priority" expr
	cont-spec-2 => cont-spec-1 .
		"default" => shift 387
		"\n" => reduce 201
		$default => reduce 201

325:	record-spec-2 => record-spec-1 . "id" expr
	record-spec-2 => record-spec-1 .
		"id" => shift 386
		"\n" => reduce 195
		$default => reduce 195

326:	tlm-chan-5 => tlm-chan-4 . "high" "{" tlm-lim-seq "}"
	tlm-chan-5 => tlm-chan-4 .
		"high" => shift 385
		"\n" => reduce 182
		$default => reduce 182

327:	param-spec-4 => param-spec-3 . "save" "opcode" expr
	param-spec-4 => param-spec-3 .
		"save" => shift 384
		"\n" => reduce 170
		$default => reduce 170

328:	event-spec-5 => event-spec-4 . "throttle" expr
	event-spec-5 => event-spec-4 .
		"throttle" => shift 383
		"\n" => reduce 153
		$default => reduce 153

329:	cmd-spec-4 => cmd-spec-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	cmd-spec-4 => cmd-spec-3 .
		"hook" => shift 374
		"drop" => shift 375
		"block" => shift 376
		"assert" => shift 377
		queue-full-beh-1 => shift 378
		queue-full-beh => shift 382
		"\n" => reduce 127
		$default => reduce 127

330:	int-port-defn-3 => int-port-defn-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	int-port-defn-3 => int-port-defn-2 .
		"hook" => shift 374
		"drop" => shift 375
		"block" => shift 376
		"assert" => shift 377
		queue-full-beh-1 => shift 378
		queue-full-beh => shift 381
		"\n" => reduce 117
		$default => reduce 117

331:	spc-port-inst-3 => spc-port-inst-2 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	spc-port-inst-3 => spc-port-inst-2 .
		"hook" => shift 374
		"drop" => shift 375
		"block" => shift 376
		"assert" => shift 377
		queue-full-beh-1 => shift 378
		queue-full-beh => shift 380
		"\n" => reduce 109
		$default => reduce 109

332:	gen-port-inst-4 => gen-port-inst-3 . queue-full-beh
	queue-full-beh => . queue-full-beh-1
	queue-full-beh-1 => . "assert"
	queue-full-beh-1 => . "block"
	queue-full-beh-1 => . "drop"
	queue-full-beh-1 => . "hook"
	gen-port-inst-4 => gen-port-inst-3 .
		"hook" => shift 374
		"drop" => shift 375
		"block" => shift 376
		"assert" => shift 377
		queue-full-beh-1 => shift 378
		queue-full-beh => shift 379
		"\n" => reduce 102
		$default => reduce 102

333:	stmach-inst-0 => "state" . "machine" "instance" ident ":" qual-ident
	stmach-defn => "state" . "machine" ident "{" stmach-mem-seq "}"
	stmach-defn => "state" . "machine" ident
		"machine" => shift 373

334:	stmach-inst => stmach-inst-2 . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	stmach-inst => stmach-inst-2 .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 372
		"\n" => reduce 327
		$default => reduce 327

335:	port-match-spec => "match" . ident "with" ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 371

336:	prod-cont-spec => cont-spec-2 .
		"\n" => reduce 197
		$default => reduce 197

337:	record-spec => record-spec-2 .
		"\n" => reduce 191
		$default => reduce 191

338:	tlm-chan-spec => tlm-chan-5 .
		"\n" => reduce 172
		$default => reduce 172

339:	param-spec => param-spec-4 .
		"\n" => reduce 162
		$default => reduce 162

340:	event-spec => event-spec-5 .
		"\n" => reduce 145
		$default => reduce 145

341:	command-spec => cmd-spec-4 .
		"\n" => reduce 119
		$default => reduce 119

342:	int-port-spec => int-port-defn-3 .
		"\n" => reduce 111
		$default => reduce 111

343:	port-inst => spc-port-inst-3 .
		"\n" => reduce 93
		$default => reduce 93

344:	port-inst => gen-port-inst-4 .
		"\n" => reduce 92
		$default => reduce 92

345:	comp-mem => stmach-inst .
		"\n" => reduce 91
		$default => reduce 91

346:	comp-mem => stmach-defn .
		"\n" => reduce 90
		$default => reduce 90

347:	comp-mem => tlm-chan-spec .
		"\n" => reduce 89
		$default => reduce 89

348:	comp-mem => prod-cont-spec .
		"\n" => reduce 88
		$default => reduce 88

349:	comp-mem => record-spec .
		"\n" => reduce 87
		$default => reduce 87

350:	comp-mem => param-spec .
		"\n" => reduce 86
		$default => reduce 86

351:	comp-mem => event-spec .
		"\n" => reduce 85
		$default => reduce 85

352:	comp-mem => command-spec .
		"\n" => reduce 84
		$default => reduce 84

353:	comp-mem => port-match-spec .
		"\n" => reduce 83
		$default => reduce 83

354:	comp-mem => port-inst .
		"\n" => reduce 82
		$default => reduce 82

355:	comp-mem => int-port-spec .
		"\n" => reduce 81
		$default => reduce 81

356:	comp-mem => struct-defn .
		"\n" => reduce 80
		$default => reduce 80

357:	comp-mem => enum-defn .
		"\n" => reduce 79
		$default => reduce 79

358:	comp-mem => lone-anno .
		"\n" => reduce 78
		$default => reduce 78

359:	comp-mem-seq => include-spec . mem-sep comp-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 370

360:	comp-mem-seq => comp-mem . mem-sep comp-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 369

361:	component-defn => comp-kind "component" ident "{" comp-mem-seq . "}"
		"}" => shift 368

362:	array-defn => "array" ident "=" index ident . code-anno
	code-anno => . code-anno-list
	code-anno-list => . '$code-anno
	code-anno-list => . code-anno-list "\n" '$code-anno
	array-defn => "array" ident "=" index ident .
		'$code-anno => shift 75
		code-anno-list => shift 76
		code-anno => shift 367
		"\n" => reduce 30
		$default => reduce 30

363:	index => "[" expr . "]"
		"]" => shift 366

364:	const-defn => "constant" ident "=" expr code-anno .
		"\n" => reduce 27
		$default => reduce 27

365:	module-defn => "module" ident "{" module-mem-seq "}" .
		"\n" => reduce 25
		$default => reduce 25

366:	index => "[" expr "]" .
		$default => reduce 312

367:	array-defn => "array" ident "=" index ident code-anno .
		"\n" => reduce 31
		$default => reduce 31

368:	component-defn => comp-kind "component" ident "{" comp-mem-seq "}" .
		"\n" => reduce 71
		$default => reduce 71

369:	mem-sep => mem-sep . "\n"
	comp-mem-seq => comp-mem mem-sep . comp-mem-seq
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem-seq => . include-spec mem-sep comp-mem-seq
	include-spec => . "include" '$string
	comp-mem => . lone-anno
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	enum-defn-0 => . "enum" ident
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 285
		event-spec-0 => shift 286
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 289
		"param" => shift 290
		"event" => shift 291
		"command" => shift 292
		"output" => shift 293
		"enum" => shift 5
		tlm-chan-1 => shift 294
		param-spec-0 => shift 295
		event-spec-1 => shift 296
		"sync" => shift 297
		"guarded" => shift 298
		"async" => shift 299
		cmd-spec-0 => shift 300
		"internal" => shift 301
		spc-port-kind => shift 302
		gen-port-inst-0 => shift 303
		enum-defn-0 => shift 8
		"product" => shift 304
		tlm-chan-2 => shift 305
		param-spec-1 => shift 306
		event-spec-2 => shift 307
		cmd-spec-1 => shift 308
		int-port-defn-0 => shift 309
		input-port-kind => shift 310
		spc-port-inst-0 => shift 311
		gen-port-inst-1 => shift 312
		"struct" => shift 11
		enum-defn-1 => shift 12
		stmach-inst-0 => shift 313
		cont-spec-0 => shift 314
		record-spec-0 => shift 315
		tlm-chan-3 => shift 316
		param-spec-2 => shift 317
		event-spec-3 => shift 318
		cmd-spec-2 => shift 319
		int-port-defn-1 => shift 320
		spc-port-inst-1 => shift 321
		gen-port-inst-2 => shift 322
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		stmach-inst-1 => shift 323
		cont-spec-1 => shift 324
		record-spec-1 => shift 325
		tlm-chan-4 => shift 326
		param-spec-3 => shift 327
		event-spec-4 => shift 328
		cmd-spec-3 => shift 329
		int-port-defn-2 => shift 330
		spc-port-inst-2 => shift 331
		gen-port-inst-3 => shift 332
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 333
		stmach-inst-2 => shift 334
		'$lone-anno => shift 25
		"match" => shift 335
		cont-spec-2 => shift 336
		record-spec-2 => shift 337
		tlm-chan-5 => shift 338
		param-spec-4 => shift 339
		event-spec-5 => shift 340
		cmd-spec-4 => shift 341
		int-port-defn-3 => shift 342
		spc-port-inst-3 => shift 343
		gen-port-inst-4 => shift 344
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		stmach-inst => shift 345
		stmach-defn => shift 346
		tlm-chan-spec => shift 347
		prod-cont-spec => shift 348
		record-spec => shift 349
		param-spec => shift 350
		event-spec => shift 351
		command-spec => shift 352
		port-match-spec => shift 353
		port-inst => shift 354
		int-port-spec => shift 355
		struct-defn => shift 356
		enum-defn => shift 357
		lone-anno => shift 358
		"include" => shift 50
		include-spec => shift 359
		comp-mem => shift 360
		comp-mem-seq => shift 531
		"\n" => shift 164
		$default => reduce 75

370:	mem-sep => mem-sep . "\n"
	comp-mem-seq => include-spec mem-sep . comp-mem-seq
	comp-mem-seq => .
	comp-mem-seq => . comp-mem mem-sep comp-mem-seq
	comp-mem-seq => . include-spec mem-sep comp-mem-seq
	include-spec => . "include" '$string
	comp-mem => . lone-anno
	comp-mem => . enum-defn
	comp-mem => . struct-defn
	comp-mem => . int-port-spec
	comp-mem => . port-inst
	comp-mem => . port-match-spec
	comp-mem => . command-spec
	comp-mem => . event-spec
	comp-mem => . param-spec
	comp-mem => . record-spec
	comp-mem => . prod-cont-spec
	comp-mem => . tlm-chan-spec
	comp-mem => . stmach-defn
	comp-mem => . stmach-inst
	enum-defn => . enum-defn-4
	struct-defn => . struct-defn-2
	port-inst => . gen-port-inst-4
	port-inst => . spc-port-inst-3
	int-port-spec => . int-port-defn-3
	command-spec => . cmd-spec-4
	event-spec => . event-spec-5
	param-spec => . param-spec-4
	tlm-chan-spec => . tlm-chan-5
	record-spec => . record-spec-2
	prod-cont-spec => . cont-spec-2
	port-match-spec => . "match" ident "with" ident
	lone-anno => . '$lone-anno
	stmach-inst => . stmach-inst-2
	stmach-inst => . stmach-inst-2 code-anno
	stmach-defn => . "state" "machine" ident
	stmach-defn => . "state" "machine" ident "{" stmach-mem-seq "}"
	enum-defn-4 => . enum-defn-3
	enum-defn-4 => . enum-defn-3 code-anno
	struct-defn-2 => . struct-defn-1
	struct-defn-2 => . struct-defn-1 code-anno
	gen-port-inst-4 => . gen-port-inst-3
	gen-port-inst-4 => . gen-port-inst-3 queue-full-beh
	spc-port-inst-3 => . spc-port-inst-2
	spc-port-inst-3 => . spc-port-inst-2 queue-full-beh
	int-port-defn-3 => . int-port-defn-2
	int-port-defn-3 => . int-port-defn-2 queue-full-beh
	cmd-spec-4 => . cmd-spec-3
	cmd-spec-4 => . cmd-spec-3 queue-full-beh
	event-spec-5 => . event-spec-4
	event-spec-5 => . event-spec-4 "throttle" expr
	param-spec-4 => . param-spec-3
	param-spec-4 => . param-spec-3 "save" "opcode" expr
	tlm-chan-5 => . tlm-chan-4
	tlm-chan-5 => . tlm-chan-4 "high" "{" tlm-lim-seq "}"
	record-spec-2 => . record-spec-1
	record-spec-2 => . record-spec-1 "id" expr
	cont-spec-2 => . cont-spec-1
	cont-spec-2 => . cont-spec-1 "default" "priority" expr
	stmach-inst-2 => . stmach-inst-1
	stmach-inst-2 => . stmach-inst-1 queue-full-beh
	enum-defn-3 => . enum-defn-2
	enum-defn-3 => . enum-defn-2 "default" expr
	struct-defn-1 => . struct-defn-0
	struct-defn-1 => . struct-defn-0 "default" expr
	gen-port-inst-3 => . gen-port-inst-2
	gen-port-inst-3 => . gen-port-inst-2 "priority" expr
	spc-port-inst-2 => . spc-port-inst-1
	spc-port-inst-2 => . spc-port-inst-1 "priority" expr
	int-port-defn-2 => . int-port-defn-1
	int-port-defn-2 => . int-port-defn-1 "priority" expr
	cmd-spec-3 => . cmd-spec-2
	cmd-spec-3 => . cmd-spec-2 "priority" expr
	event-spec-4 => . event-spec-3 "format" string
	param-spec-3 => . param-spec-2
	param-spec-3 => . param-spec-2 "set" "opcode" expr
	tlm-chan-4 => . tlm-chan-3
	tlm-chan-4 => . tlm-chan-3 "low" "{" tlm-lim-seq "}"
	record-spec-1 => . record-spec-0
	record-spec-1 => . record-spec-0 "array"
	cont-spec-1 => . cont-spec-0
	cont-spec-1 => . cont-spec-0 "id" expr
	stmach-inst-1 => . stmach-inst-0
	stmach-inst-1 => . stmach-inst-0 "priority" expr
	enum-defn-2 => . enum-defn-1 "{" enum-mem-seq "}"
	struct-defn-0 => . "struct" ident "{" struct-mem-seq "}"
	gen-port-inst-2 => . gen-port-inst-1 qual-ident
	gen-port-inst-2 => . gen-port-inst-1 "serial"
	spc-port-inst-1 => . spc-port-inst-0
	spc-port-inst-1 => . input-port-kind spc-port-inst-0
	int-port-defn-1 => . int-port-defn-0
	int-port-defn-1 => . int-port-defn-0 "(" param-list ")"
	cmd-spec-2 => . cmd-spec-1
	cmd-spec-2 => . cmd-spec-1 "opcode" expr
	event-spec-3 => . event-spec-2
	event-spec-3 => . event-spec-2 "id" expr
	param-spec-2 => . param-spec-1
	param-spec-2 => . param-spec-1 "id" expr
	tlm-chan-3 => . tlm-chan-2
	tlm-chan-3 => . tlm-chan-2 "format" string
	record-spec-0 => . "product" "record" ident ":" type-name
	cont-spec-0 => . "product" "container" ident
	stmach-inst-0 => . "state" "machine" "instance" ident ":" qual-ident
	enum-defn-1 => . enum-defn-0
	enum-defn-1 => . enum-defn-0 ":" type-name
	gen-port-inst-1 => . gen-port-inst-0
	gen-port-inst-1 => . gen-port-inst-0 "[" expr "]"
	spc-port-inst-0 => . spc-port-kind "port" ident
	int-port-defn-0 => . "internal" "port" ident
	cmd-spec-1 => . cmd-spec-0
	cmd-spec-1 => . cmd-spec-0 "(" param-list ")"
	input-port-kind => . "async"
	input-port-kind => . "guarded"
	input-port-kind => . "sync"
	event-spec-2 => . event-spec-1 "severity" severity
	param-spec-1 => . param-spec-0
	param-spec-1 => . param-spec-0 "default" expr
	tlm-chan-2 => . tlm-chan-1
	tlm-chan-2 => . tlm-chan-1 "update" tlm-update
	enum-defn-0 => . "enum" ident
	gen-port-inst-0 => . input-port-kind "input" "port" ident ":"
	gen-port-inst-0 => . "output" "port" ident ":"
	cmd-spec-0 => . input-port-kind "command" ident
	spc-port-kind => . "command" "recv"
	spc-port-kind => . "command" "reg"
	spc-port-kind => . "command" "resp"
	spc-port-kind => . "event"
	spc-port-kind => . "param" "get"
	spc-port-kind => . "param" "set"
	spc-port-kind => . "product" "get"
	spc-port-kind => . "product" "recv"
	spc-port-kind => . "product" "request"
	spc-port-kind => . "product" "send"
	spc-port-kind => . "telemetry"
	spc-port-kind => . "text" "event"
	spc-port-kind => . "time" "get"
	event-spec-1 => . event-spec-0
	event-spec-1 => . event-spec-0 "(" param-list ")"
	param-spec-0 => . "param" ident ":" type-name
	tlm-chan-1 => . tlm-chan-0
	tlm-chan-1 => . tlm-chan-0 "id" expr
	event-spec-0 => . "event" ident
	tlm-chan-0 => . "telemetry" ident ":" type-name
		tlm-chan-0 => shift 285
		event-spec-0 => shift 286
		"time" => shift 287
		"text" => shift 288
		"telemetry" => shift 289
		"param" => shift 290
		"event" => shift 291
		"command" => shift 292
		"output" => shift 293
		"enum" => shift 5
		tlm-chan-1 => shift 294
		param-spec-0 => shift 295
		event-spec-1 => shift 296
		"sync" => shift 297
		"guarded" => shift 298
		"async" => shift 299
		cmd-spec-0 => shift 300
		"internal" => shift 301
		spc-port-kind => shift 302
		gen-port-inst-0 => shift 303
		enum-defn-0 => shift 8
		"product" => shift 304
		tlm-chan-2 => shift 305
		param-spec-1 => shift 306
		event-spec-2 => shift 307
		cmd-spec-1 => shift 308
		int-port-defn-0 => shift 309
		input-port-kind => shift 310
		spc-port-inst-0 => shift 311
		gen-port-inst-1 => shift 312
		"struct" => shift 11
		enum-defn-1 => shift 12
		stmach-inst-0 => shift 313
		cont-spec-0 => shift 314
		record-spec-0 => shift 315
		tlm-chan-3 => shift 316
		param-spec-2 => shift 317
		event-spec-3 => shift 318
		cmd-spec-2 => shift 319
		int-port-defn-1 => shift 320
		spc-port-inst-1 => shift 321
		gen-port-inst-2 => shift 322
		struct-defn-0 => shift 15
		enum-defn-2 => shift 16
		stmach-inst-1 => shift 323
		cont-spec-1 => shift 324
		record-spec-1 => shift 325
		tlm-chan-4 => shift 326
		param-spec-3 => shift 327
		event-spec-4 => shift 328
		cmd-spec-3 => shift 329
		int-port-defn-2 => shift 330
		spc-port-inst-2 => shift 331
		gen-port-inst-3 => shift 332
		struct-defn-1 => shift 22
		enum-defn-3 => shift 23
		"state" => shift 333
		stmach-inst-2 => shift 334
		'$lone-anno => shift 25
		"match" => shift 335
		cont-spec-2 => shift 336
		record-spec-2 => shift 337
		tlm-chan-5 => shift 338
		param-spec-4 => shift 339
		event-spec-5 => shift 340
		cmd-spec-4 => shift 341
		int-port-defn-3 => shift 342
		spc-port-inst-3 => shift 343
		gen-port-inst-4 => shift 344
		struct-defn-2 => shift 31
		enum-defn-4 => shift 32
		stmach-inst => shift 345
		stmach-defn => shift 346
		tlm-chan-spec => shift 347
		prod-cont-spec => shift 348
		record-spec => shift 349
		param-spec => shift 350
		event-spec => shift 351
		command-spec => shift 352
		port-match-spec => shift 353
		port-inst => shift 354
		int-port-spec => shift 355
		struct-defn => shift 356
		enum-defn => shift 357
		lone-anno => shift 358
		"include" => shift 50
		include-spec => shift 359
		comp-mem => shift 360
		comp-mem-seq => shift 530
		"\n" => shift 164
		$default => reduce 75

371:	port-match-spec => "match" ident . "with" ident
		"with" => shift 529

372:	stmach-inst => stmach-inst-2 code-anno .
		"\n" => reduce 328
		$default => reduce 328

373:	stmach-defn => "state" "machine" . ident
	ident => . '$ident
	stmach-defn => "state" "machine" . ident "{" stmach-mem-seq "}"
	ident => . '$ident
	stmach-inst-0 => "state" "machine" . "instance" ident ":" qual-ident
		"instance" => shift 528
		'$ident => shift 60
		ident => shift 149

374:	queue-full-beh-1 => "hook" .
		'$code-anno => reduce 271
		"\n" => reduce 271
		$default => reduce 271

375:	queue-full-beh-1 => "drop" .
		'$code-anno => reduce 270
		"\n" => reduce 270
		$default => reduce 270

376:	queue-full-beh-1 => "block" .
		'$code-anno => reduce 269
		"\n" => reduce 269
		$default => reduce 269

377:	queue-full-beh-1 => "assert" .
		'$code-anno => reduce 268
		"\n" => reduce 268
		$default => reduce 268

378:	queue-full-beh => queue-full-beh-1 .
		'$code-anno => reduce 267
		"\n" => reduce 267
		$default => reduce 267

379:	gen-port-inst-4 => gen-port-inst-3 queue-full-beh .
		"\n" => reduce 103
		$default => reduce 103

380:	spc-port-inst-3 => spc-port-inst-2 queue-full-beh .
		"\n" => reduce 110
		$default => reduce 110

381:	int-port-defn-3 => int-port-defn-2 queue-full-beh .
		"\n" => reduce 118
		$default => reduce 118

382:	cmd-spec-4 => cmd-spec-3 queue-full-beh .
		"\n" => reduce 128
		$default => reduce 128

383:	event-spec-5 => event-spec-4 "throttle" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 527

384:	param-spec-4 => param-spec-3 "save" . "opcode" expr
		"opcode" => shift 526

385:	tlm-chan-5 => tlm-chan-4 "high" . "{" tlm-lim-seq "}"
		"{" => shift 525

386:	record-spec-2 => record-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 524

387:	cont-spec-2 => cont-spec-1 "default" . "priority" expr
		"priority" => shift 523

388:	stmach-inst-2 => stmach-inst-1 queue-full-beh .
		'$code-anno => reduce 333
		"\n" => reduce 333
		$default => reduce 333

389:	gen-port-inst-3 => gen-port-inst-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 522

390:	spc-port-inst-2 => spc-port-inst-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 521

391:	int-port-defn-2 => int-port-defn-1 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 520

392:	cmd-spec-3 => cmd-spec-2 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 519

393:	event-spec-4 => event-spec-3 "format" . string
	string => . '$string
		'$string => shift 98
		string => shift 518

394:	param-spec-3 => param-spec-2 "set" . "opcode" expr
		"opcode" => shift 517

395:	tlm-chan-4 => tlm-chan-3 "low" . "{" tlm-lim-seq "}"
		"{" => shift 516

396:	record-spec-1 => record-spec-0 "array" .
		"\n" => reduce 194
		$default => reduce 194

397:	cont-spec-1 => cont-spec-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 515

398:	stmach-inst-1 => stmach-inst-0 "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 514

399:	gen-port-inst-2 => gen-port-inst-1 qual-ident .
		"\n" => reduce 98
		$default => reduce 98

400:	gen-port-inst-2 => gen-port-inst-1 "serial" .
		"\n" => reduce 99
		$default => reduce 99

401:	spc-port-kind => "telemetry" .
		$default => reduce 139

402:	spc-port-kind => "product" . "send"
	spc-port-kind => "product" . "request"
	spc-port-kind => "product" . "recv"
	spc-port-kind => "product" . "get"
		"get" => shift 415
		"recv" => shift 416
		"request" => shift 417
		"send" => shift 418

403:	spc-port-kind => "param" . "set"
	spc-port-kind => "param" . "get"
		"get" => shift 431
		"set" => shift 432

404:	spc-port-kind => "event" .
		$default => reduce 132

405:	spc-port-inst-1 => input-port-kind spc-port-inst-0 .
		"\n" => reduce 106
		$default => reduce 106

406:	gen-port-inst-0 => input-port-kind "input" . "port" ident ":"
		"port" => shift 513

407:	spc-port-kind => "command" . "resp"
	spc-port-kind => "command" . "reg"
	spc-port-kind => "command" . "recv"
	cmd-spec-0 => input-port-kind "command" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 512
		"recv" => shift 427
		"reg" => shift 428
		"resp" => shift 429

408:	int-port-defn-1 => int-port-defn-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 511
		$default => reduce 261

409:	cmd-spec-2 => cmd-spec-1 "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 510

410:	event-spec-3 => event-spec-2 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 509

411:	param-spec-2 => param-spec-1 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 508

412:	tlm-chan-3 => tlm-chan-2 "format" . string
	string => . '$string
		'$string => shift 98
		string => shift 507

413:	record-spec-0 => "product" "record" . ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		ident => shift 506

414:	cont-spec-0 => "product" "container" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 505

415:	spc-port-kind => "product" "get" .
		$default => reduce 135

416:	spc-port-kind => "product" "recv" .
		$default => reduce 136

417:	spc-port-kind => "product" "request" .
		$default => reduce 137

418:	spc-port-kind => "product" "send" .
		$default => reduce 138

419:	gen-port-inst-1 => gen-port-inst-0 "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 504

420:	spc-port-inst-0 => spc-port-kind "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 503

421:	int-port-defn-0 => "internal" "port" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 502

422:	cmd-spec-1 => cmd-spec-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 501
		$default => reduce 261

423:	event-spec-2 => event-spec-1 "severity" . severity
	severity => . "activity" "high"
	severity => . "activity" "low"
	severity => . "command"
	severity => . "diagnostic"
	severity => . "fatal"
	severity => . "warning" "high"
	severity => . "warning" "low"
		"warning" => shift 495
		"fatal" => shift 496
		"diagnostic" => shift 497
		"command" => shift 498
		"activity" => shift 499
		severity => shift 500

424:	param-spec-1 => param-spec-0 "default" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 494

425:	tlm-chan-2 => tlm-chan-1 "update" . tlm-update
	tlm-update => . "always"
	tlm-update => . "on" "change"
		"on" => shift 491
		"always" => shift 492
		tlm-update => shift 493

426:	gen-port-inst-0 => "output" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 490

427:	spc-port-kind => "command" "recv" .
		$default => reduce 129

428:	spc-port-kind => "command" "reg" .
		$default => reduce 130

429:	spc-port-kind => "command" "resp" .
		$default => reduce 131

430:	event-spec-0 => "event" ident .
		$default => reduce 146

431:	spc-port-kind => "param" "get" .
		$default => reduce 133

432:	spc-port-kind => "param" "set" .
		$default => reduce 134

433:	param-spec-0 => "param" ident . ":" type-name
		":" => shift 489

434:	tlm-chan-0 => "telemetry" ident . ":" type-name
		":" => shift 488

435:	spc-port-kind => "text" "event" .
		$default => reduce 140

436:	spc-port-kind => "time" "get" .
		$default => reduce 141

437:	event-spec-1 => event-spec-0 "(" . param-list ")"
	param-list => . param-list-1
	param-list-1 => .
	param-list-1 => . formal-param elt-sep param-list-1
	formal-param => . formal-param-1
	formal-param => . formal-param-1 code-anno
	formal-param-1 => . ident ":" type-name
	formal-param-1 => . "ref" ident ":" type-name
	ident => . '$ident
		'$ident => shift 60
		"ref" => shift 133
		ident => shift 134
		formal-param-1 => shift 135
		formal-param => shift 136
		param-list-1 => shift 137
		param-list => shift 487
		$default => reduce 261

438:	tlm-chan-1 => tlm-chan-0 "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 486

439:	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident . "{" tlm-pktgrp-mem-seq "}"
		"{" => shift 485

440:	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident "{" qual-ident-seq "}"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	conn-graph-spec => pattern-kind "connections" "instance" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 484

441:	conn-graph-spec => "connections" ident "{" . conn-seq "}"
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 479
		"unmatched" => shift 480
		conn-from => shift 481
		connection => shift 482
		conn-seq => shift 483
		$default => reduce 240

442:	comp-inst-spec => "private" "instance" ident .
		"\n" => reduce 229
		$default => reduce 229

443:	topo-mem-seq => include-spec mem-sep topo-mem-seq .
		$default => reduce 222

444:	topo-mem-seq => topo-mem mem-sep topo-mem-seq .
		$default => reduce 221

445:	loc-spec => "locate" "state" "machine" qual-ident "at" string .
		"\n" => reduce 276
		$default => reduce 276

446:	stmach-defn => "state" "machine" ident "{" stmach-mem-seq "}" .
		"\n" => reduce 335
		$default => reduce 335

447:	mem-sep => mem-sep . "\n"
	stmach-mem-seq => stmach-mem mem-sep . stmach-mem-seq
	stmach-mem-seq => .
	stmach-mem-seq => . stmach-mem mem-sep stmach-mem-seq
	stmach-mem => . lone-anno
	stmach-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	stmach-mem => . "action" ident
	stmach-mem => . "action" ident ":" type-name
	stmach-mem => . "guard" ident
	stmach-mem => . "guard" ident ":" type-name
	stmach-mem => . "signal" ident
	stmach-mem => . "signal" ident ":" type-name
	stmach-mem => . "initial" trans-expr
	stmach-mem => . state-defn
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
		"state" => shift 258
		'$lone-anno => shift 25
		state-defn => shift 259
		"initial" => shift 260
		"signal" => shift 261
		"guard" => shift 262
		"action" => shift 263
		"choice" => shift 264
		lone-anno => shift 265
		stmach-mem => shift 266
		stmach-mem-seq => shift 478
		"\n" => shift 164
		$default => reduce 336

448:	stmach-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 477

449:	stmach-mem => "action" ident .
	stmach-mem => "action" ident . ":" type-name
		":" => shift 476
		"\n" => reduce 340
		$default => reduce 340

450:	stmach-mem => "guard" ident .
	stmach-mem => "guard" ident . ":" type-name
		":" => shift 475
		"\n" => reduce 342
		$default => reduce 342

451:	stmach-mem => "signal" ident .
	stmach-mem => "signal" ident . ":" type-name
		":" => shift 474
		"\n" => reduce 344
		$default => reduce 344

452:	do-expr => "do" . "{" action-seq "}"
		"{" => shift 473

453:	trans-expr-0 => "enter" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 472

454:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 453
		trans-expr-0 => shift 471

455:	trans-expr-1 => trans-expr-0 .
		"\n" => reduce 366
		$default => reduce 366

456:	trans-expr => trans-expr-1 .
		"\n" => reduce 364
		$default => reduce 364

457:	stmach-mem => "initial" trans-expr .
		"\n" => reduce 346
		$default => reduce 346

458:	state-defn => "state" ident .
	state-defn => "state" ident . "{" state-defn-mem-seq "}"
		"{" => shift 470
		"\n" => reduce 348
		$default => reduce 348

459:	enum-mem => ident "=" expr code-anno .
		"\n" => reduce 46
		$default => reduce 46

460:	struct-mem-1 => struct-mem-0 "[" expr . "]"
		"]" => shift 469

461:	struct-mem-3 => struct-mem-2 "format" string .
		'$code-anno => reduce 62
		"\n" => reduce 62
		$default => reduce 62

462:	struct-mem-seq => struct-mem mem-sep struct-mem-seq .
		$default => reduce 54

463:	formal-param-1 => "ref" ident ":" type-name .
		'$code-anno => reduce 266
		"\n" => reduce 266
		$default => reduce 266

464:	expr-seq => expr elt-sep expr-seq .
		$default => reduce 296

465:	struct-elt-seq => ident "=" expr . elt-sep struct-elt-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 468

466:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 467

467:	comp-inst-0 => "instance" ident ":" qual-ident "base" "id" expr .
		"\n" => reduce 204
		$default => reduce 204

468:	elt-sep => elt-sep . "\n"
	struct-elt-seq => ident "=" expr elt-sep . struct-elt-seq
	struct-elt-seq => .
	struct-elt-seq => . ident "=" expr elt-sep struct-elt-seq
	ident => . '$ident
		'$ident => shift 60
		ident => shift 225
		struct-elt-seq => shift 586
		"\n" => shift 248
		$default => reduce 297

469:	struct-mem-1 => struct-mem-0 "[" expr "]" .
		$default => reduce 59

470:	state-defn => "state" ident "{" . state-defn-mem-seq "}"
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . lone-anno
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 573
		st-tran-spec-0 => shift 574
		st-tran-spec-1 => shift 575
		st-tran-spec-2 => shift 576
		"state" => shift 258
		'$lone-anno => shift 25
		"exit" => shift 577
		"entry" => shift 578
		state-trans-spec => shift 579
		state-defn => shift 580
		"choice" => shift 581
		"initial" => shift 582
		lone-anno => shift 583
		state-defn-mem => shift 584
		state-defn-mem-seq => shift 585
		$default => reduce 350

471:	trans-expr-1 => do-expr trans-expr-0 .
		"\n" => reduce 367
		$default => reduce 367

472:	trans-expr-0 => "enter" qual-ident .
		"\n" => reduce 365
		$default => reduce 365

473:	do-expr => "do" "{" . action-seq "}"
	action-seq => .
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 60
		ident => shift 571
		action-seq => shift 572
		$default => reduce 369

474:	stmach-mem => "signal" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 570

475:	stmach-mem => "guard" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 569

476:	stmach-mem => "action" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 568

477:	stmach-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 567

478:	stmach-mem-seq => stmach-mem mem-sep stmach-mem-seq .
		$default => reduce 337

479:	conn-from => qual-ident . "[" expr "]"
	conn-from => qual-ident .
		"[" => shift 566
		$default => reduce 244

480:	connection => "unmatched" . conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 479
		conn-from => shift 565

481:	connection => conn-from . "->" conn-to
		"->" => shift 564

482:	conn-seq => connection . elt-sep conn-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 563

483:	conn-graph-spec => "connections" ident "{" conn-seq . "}"
		"}" => shift 562

484:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident .
	conn-graph-spec => pattern-kind "connections" "instance" qual-ident . "{" qual-ident-seq "}"
		"{" => shift 561
		"\n" => reduce 231
		$default => reduce 231

485:	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" . tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 557
		"include" => shift 50
		include-spec => shift 558
		tlm-pkt-spec => shift 559
		tlm-pktgrp-mem-seq => shift 560
		$default => reduce 250

486:	tlm-chan-1 => tlm-chan-0 "id" expr .
		"\n" => reduce 175
		$default => reduce 175

487:	event-spec-1 => event-spec-0 "(" param-list . ")"
		")" => shift 556

488:	tlm-chan-0 => "telemetry" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 555

489:	param-spec-0 => "param" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 554

490:	gen-port-inst-0 => "output" "port" ident . ":"
		":" => shift 553

491:	tlm-update => "on" . "change"
		"change" => shift 552

492:	tlm-update => "always" .
		"\n" => reduce 184
		$default => reduce 184

493:	tlm-chan-2 => tlm-chan-1 "update" tlm-update .
		"\n" => reduce 177
		$default => reduce 177

494:	param-spec-1 => param-spec-0 "default" expr .
		"\n" => reduce 165
		$default => reduce 165

495:	severity => "warning" . "low"
	severity => "warning" . "high"
		"high" => shift 550
		"low" => shift 551

496:	severity => "fatal" .
		$default => reduce 159

497:	severity => "diagnostic" .
		$default => reduce 158

498:	severity => "command" .
		$default => reduce 157

499:	severity => "activity" . "low"
	severity => "activity" . "high"
		"high" => shift 548
		"low" => shift 549

500:	event-spec-2 => event-spec-1 "severity" severity .
		$default => reduce 149

501:	cmd-spec-1 => cmd-spec-0 "(" param-list . ")"
		")" => shift 547

502:	int-port-defn-0 => "internal" "port" ident .
		"\n" => reduce 112
		$default => reduce 112

503:	spc-port-inst-0 => spc-port-kind "port" ident .
		"\n" => reduce 104
		$default => reduce 104

504:	gen-port-inst-1 => gen-port-inst-0 "[" expr . "]"
		"]" => shift 546

505:	cont-spec-0 => "product" "container" ident .
		"\n" => reduce 198
		$default => reduce 198

506:	record-spec-0 => "product" "record" ident . ":" type-name
		":" => shift 545

507:	tlm-chan-3 => tlm-chan-2 "format" string .
		"\n" => reduce 179
		$default => reduce 179

508:	param-spec-2 => param-spec-1 "id" expr .
		"\n" => reduce 167
		$default => reduce 167

509:	event-spec-3 => event-spec-2 "id" expr .
		$default => reduce 151

510:	cmd-spec-2 => cmd-spec-1 "opcode" expr .
		"\n" => reduce 124
		$default => reduce 124

511:	int-port-defn-1 => int-port-defn-0 "(" param-list . ")"
		")" => shift 544

512:	cmd-spec-0 => input-port-kind "command" ident .
		"\n" => reduce 120
		$default => reduce 120

513:	gen-port-inst-0 => input-port-kind "input" "port" . ident ":"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 543

514:	stmach-inst-1 => stmach-inst-0 "priority" expr .
		"\n" => reduce 331
		'$code-anno => reduce 331
		$default => reduce 331

515:	cont-spec-1 => cont-spec-0 "id" expr .
		"\n" => reduce 200
		$default => reduce 200

516:	tlm-chan-4 => tlm-chan-3 "low" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 535
		"orange" => shift 536
		"red" => shift 537
		tlm-lim => shift 538
		tlm-lim-seq => shift 542
		$default => reduce 186

517:	param-spec-3 => param-spec-2 "set" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 541

518:	event-spec-4 => event-spec-3 "format" string .
		"\n" => reduce 152
		$default => reduce 152

519:	cmd-spec-3 => cmd-spec-2 "priority" expr .
		"\n" => reduce 126
		$default => reduce 126

520:	int-port-defn-2 => int-port-defn-1 "priority" expr .
		"\n" => reduce 116
		$default => reduce 116

521:	spc-port-inst-2 => spc-port-inst-1 "priority" expr .
		"\n" => reduce 108
		$default => reduce 108

522:	gen-port-inst-3 => gen-port-inst-2 "priority" expr .
		"\n" => reduce 101
		$default => reduce 101

523:	cont-spec-2 => cont-spec-1 "default" "priority" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 540

524:	record-spec-2 => record-spec-1 "id" expr .
		"\n" => reduce 196
		$default => reduce 196

525:	tlm-chan-5 => tlm-chan-4 "high" "{" . tlm-lim-seq "}"
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 535
		"orange" => shift 536
		"red" => shift 537
		tlm-lim => shift 538
		tlm-lim-seq => shift 539
		$default => reduce 186

526:	param-spec-4 => param-spec-3 "save" "opcode" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 534

527:	event-spec-5 => event-spec-4 "throttle" expr .
		"\n" => reduce 154
		$default => reduce 154

528:	stmach-inst-0 => "state" "machine" "instance" . ident ":" qual-ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 533

529:	port-match-spec => "match" ident "with" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 532

530:	comp-mem-seq => include-spec mem-sep comp-mem-seq .
		$default => reduce 77

531:	comp-mem-seq => comp-mem mem-sep comp-mem-seq .
		$default => reduce 76

532:	port-match-spec => "match" ident "with" ident .
		"\n" => reduce 279
		$default => reduce 279

533:	stmach-inst-0 => "state" "machine" "instance" ident . ":" qual-ident
		":" => shift 620

534:	param-spec-4 => param-spec-3 "save" "opcode" expr .
		"\n" => reduce 171
		$default => reduce 171

535:	tlm-lim => "yellow" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 619

536:	tlm-lim => "orange" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 618

537:	tlm-lim => "red" . expr
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 617

538:	tlm-lim-seq => tlm-lim . elt-sep tlm-lim-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 616

539:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq . "}"
		"}" => shift 615

540:	cont-spec-2 => cont-spec-1 "default" "priority" expr .
		"\n" => reduce 202
		$default => reduce 202

541:	param-spec-3 => param-spec-2 "set" "opcode" expr .
		"\n" => reduce 169
		$default => reduce 169

542:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq . "}"
		"}" => shift 614

543:	gen-port-inst-0 => input-port-kind "input" "port" ident . ":"
		":" => shift 613

544:	int-port-defn-1 => int-port-defn-0 "(" param-list ")" .
		"\n" => reduce 114
		$default => reduce 114

545:	record-spec-0 => "product" "record" ident ":" . type-name
	type-name => . qual-ident
	type-name => . "I8"
	type-name => . "U8"
	type-name => . "I16"
	type-name => . "U16"
	type-name => . "I32"
	type-name => . "U32"
	type-name => . "I64"
	type-name => . "U64"
	type-name => . "F32"
	type-name => . "F64"
	type-name => . "bool"
	type-name => . "string"
	type-name => . "string" "size" expr
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"string" => shift 105
		"bool" => shift 106
		"F64" => shift 107
		"F32" => shift 108
		"U64" => shift 109
		"I64" => shift 110
		"U32" => shift 111
		"I32" => shift 112
		"U16" => shift 113
		"I16" => shift 114
		"U8" => shift 115
		"I8" => shift 116
		qual-ident => shift 117
		type-name => shift 612

546:	gen-port-inst-1 => gen-port-inst-0 "[" expr "]" .
		$default => reduce 97

547:	cmd-spec-1 => cmd-spec-0 "(" param-list ")" .
		"\n" => reduce 122
		$default => reduce 122

548:	severity => "activity" "high" .
		$default => reduce 155

549:	severity => "activity" "low" .
		$default => reduce 156

550:	severity => "warning" "high" .
		$default => reduce 160

551:	severity => "warning" "low" .
		$default => reduce 161

552:	tlm-update => "on" "change" .
		"\n" => reduce 185
		$default => reduce 185

553:	gen-port-inst-0 => "output" "port" ident ":" .
		$default => reduce 95

554:	param-spec-0 => "param" ident ":" type-name .
		"\n" => reduce 163
		$default => reduce 163

555:	tlm-chan-0 => "telemetry" ident ":" type-name .
		"\n" => reduce 173
		$default => reduce 173

556:	event-spec-1 => event-spec-0 "(" param-list ")" .
		$default => reduce 148

557:	tlm-pkt-spec => "packet" . ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
	tlm-pkt-spec => "packet" . ident "group" expr "{" tlm-pkt-mem-seq "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 611

558:	tlm-pktgrp-mem-seq => include-spec . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 610

559:	tlm-pktgrp-mem-seq => tlm-pkt-spec . elt-sep tlm-pktgrp-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 609

560:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}" "omit" "{" tlm-chan-id-seq "}"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq . "}"
		"}" => shift 608

561:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" . qual-ident-seq "}"
	qual-ident-seq => .
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 606
		qual-ident-seq => shift 607
		$default => reduce 310

562:	conn-graph-spec => "connections" ident "{" conn-seq "}" .
		"\n" => reduce 230
		$default => reduce 230

563:	elt-sep => elt-sep . "\n"
	conn-seq => connection elt-sep . conn-seq
	conn-seq => .
	conn-seq => . connection elt-sep conn-seq
	connection => . conn-from "->" conn-to
	connection => . "unmatched" conn-from "->" conn-to
	conn-from => . qual-ident
	conn-from => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 479
		"unmatched" => shift 480
		conn-from => shift 481
		connection => shift 482
		conn-seq => shift 605
		"\n" => shift 248
		$default => reduce 240

564:	connection => conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 603
		conn-to => shift 604

565:	connection => "unmatched" conn-from . "->" conn-to
		"->" => shift 602

566:	conn-from => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 601

567:	stmach-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 600

568:	stmach-mem => "action" ident ":" type-name .
		"\n" => reduce 341
		$default => reduce 341

569:	stmach-mem => "guard" ident ":" type-name .
		"\n" => reduce 343
		$default => reduce 343

570:	stmach-mem => "signal" ident ":" type-name .
		"\n" => reduce 345
		$default => reduce 345

571:	action-seq => ident . elt-sep action-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 599

572:	do-expr => "do" "{" action-seq . "}"
		"}" => shift 598

573:	st-tran-spec-0 => "on" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 597

574:	st-tran-spec-1 => st-tran-spec-0 . "if" ident
	st-tran-spec-1 => st-tran-spec-0 .
		"if" => shift 596
		$default => reduce 361

575:	st-tran-spec-2 => st-tran-spec-1 . trans-or-do
	trans-or-do => . trans-expr
	trans-or-do => . do-expr
	trans-expr => . trans-expr-1
	do-expr => . "do" "{" action-seq "}"
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
		"enter" => shift 453
		trans-expr-0 => shift 455
		"do" => shift 452
		trans-expr-1 => shift 456
		do-expr => shift 593
		trans-expr => shift 594
		trans-or-do => shift 595

576:	state-trans-spec => st-tran-spec-2 .
		"\n" => reduce 359
		$default => reduce 359

577:	state-defn-mem => "exit" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		do-expr => shift 592

578:	state-defn-mem => "entry" . do-expr
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		do-expr => shift 591

579:	state-defn-mem => state-trans-spec .
		"\n" => reduce 356
		$default => reduce 356

580:	state-defn-mem => state-defn .
		"\n" => reduce 355
		$default => reduce 355

581:	state-defn-mem => "choice" . ident "{" "if" ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 590

582:	state-defn-mem => "initial" . trans-expr
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		"enter" => shift 453
		do-expr => shift 454
		trans-expr-0 => shift 455
		trans-expr-1 => shift 456
		trans-expr => shift 589

583:	state-defn-mem => lone-anno .
		"\n" => reduce 352
		$default => reduce 352

584:	state-defn-mem-seq => state-defn-mem . mem-sep state-defn-mem-seq
	mem-sep => . ";"
	mem-sep => . "\n"
	mem-sep => . mem-sep "\n"
		"\n" => shift 55
		";" => shift 56
		mem-sep => shift 588

585:	state-defn => "state" ident "{" state-defn-mem-seq . "}"
		"}" => shift 587

586:	struct-elt-seq => ident "=" expr elt-sep struct-elt-seq .
		$default => reduce 298

587:	state-defn => "state" ident "{" state-defn-mem-seq "}" .
		"\n" => reduce 349
		$default => reduce 349

588:	mem-sep => mem-sep . "\n"
	state-defn-mem-seq => state-defn-mem mem-sep . state-defn-mem-seq
	state-defn-mem-seq => .
	state-defn-mem-seq => . state-defn-mem mem-sep state-defn-mem-seq
	state-defn-mem => . lone-anno
	state-defn-mem => . "initial" trans-expr
	state-defn-mem => . "choice" ident "{" "if" ident trans-expr "else" trans-expr "}"
	state-defn-mem => . state-defn
	state-defn-mem => . state-trans-spec
	state-defn-mem => . "entry" do-expr
	state-defn-mem => . "exit" do-expr
	lone-anno => . '$lone-anno
	state-defn => . "state" ident
	state-defn => . "state" ident "{" state-defn-mem-seq "}"
	state-trans-spec => . st-tran-spec-2
	st-tran-spec-2 => . st-tran-spec-1 trans-or-do
	st-tran-spec-1 => . st-tran-spec-0
	st-tran-spec-1 => . st-tran-spec-0 "if" ident
	st-tran-spec-0 => . "on" ident
		"on" => shift 573
		st-tran-spec-0 => shift 574
		st-tran-spec-1 => shift 575
		st-tran-spec-2 => shift 576
		"state" => shift 258
		'$lone-anno => shift 25
		"exit" => shift 577
		"entry" => shift 578
		state-trans-spec => shift 579
		state-defn => shift 580
		"choice" => shift 581
		"initial" => shift 582
		lone-anno => shift 583
		state-defn-mem => shift 584
		state-defn-mem-seq => shift 636
		"\n" => shift 164
		$default => reduce 350

589:	state-defn-mem => "initial" trans-expr .
		"\n" => reduce 353
		$default => reduce 353

590:	state-defn-mem => "choice" ident . "{" "if" ident trans-expr "else" trans-expr "}"
		"{" => shift 635

591:	state-defn-mem => "entry" do-expr .
		"\n" => reduce 357
		$default => reduce 357

592:	state-defn-mem => "exit" do-expr .
		"\n" => reduce 358
		$default => reduce 358

593:	trans-expr-1 => do-expr . trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	trans-or-do => do-expr .
		"enter" => shift 453
		trans-expr-0 => shift 471
		"\n" => reduce 372
		$default => reduce 372

594:	trans-or-do => trans-expr .
		"\n" => reduce 371
		$default => reduce 371

595:	st-tran-spec-2 => st-tran-spec-1 trans-or-do .
		"\n" => reduce 363
		$default => reduce 363

596:	st-tran-spec-1 => st-tran-spec-0 "if" . ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 634

597:	st-tran-spec-0 => "on" ident .
		$default => reduce 360

598:	do-expr => "do" "{" action-seq "}" .
		"\n" => reduce 368
		$default => reduce 368

599:	elt-sep => elt-sep . "\n"
	action-seq => ident elt-sep . action-seq
	action-seq => .
	action-seq => . ident elt-sep action-seq
	ident => . '$ident
		'$ident => shift 60
		ident => shift 571
		action-seq => shift 633
		"\n" => shift 248
		$default => reduce 369

600:	stmach-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		"enter" => shift 453
		do-expr => shift 454
		trans-expr-0 => shift 455
		trans-expr-1 => shift 456
		trans-expr => shift 632

601:	conn-from => qual-ident "[" expr . "]"
		"]" => shift 631

602:	connection => "unmatched" conn-from "->" . conn-to
	conn-to => . qual-ident
	conn-to => . qual-ident "[" expr "]"
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 603
		conn-to => shift 630

603:	conn-to => qual-ident . "[" expr "]"
	conn-to => qual-ident .
		"[" => shift 629
		"\n" => reduce 246
		$default => reduce 246

604:	connection => conn-from "->" conn-to .
		"\n" => reduce 242
		$default => reduce 242

605:	conn-seq => connection elt-sep conn-seq .
		$default => reduce 241

606:	qual-ident-seq => qual-ident . elt-sep qual-ident-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 628

607:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq . "}"
		"}" => shift 627

608:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" .
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" . "omit" "{" tlm-chan-id-seq "}"
		"omit" => shift 626
		"\n" => reduce 248
		$default => reduce 248

609:	elt-sep => elt-sep . "\n"
	tlm-pktgrp-mem-seq => tlm-pkt-spec elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 557
		"include" => shift 50
		include-spec => shift 558
		tlm-pkt-spec => shift 559
		tlm-pktgrp-mem-seq => shift 625
		"\n" => shift 248
		$default => reduce 250

610:	elt-sep => elt-sep . "\n"
	tlm-pktgrp-mem-seq => include-spec elt-sep . tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => .
	tlm-pktgrp-mem-seq => . tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq
	tlm-pktgrp-mem-seq => . include-spec elt-sep tlm-pktgrp-mem-seq
	include-spec => . "include" '$string
	tlm-pkt-spec => . "packet" ident "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => . "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"packet" => shift 557
		"include" => shift 50
		include-spec => shift 558
		tlm-pkt-spec => shift 559
		tlm-pktgrp-mem-seq => shift 624
		"\n" => shift 248
		$default => reduce 250

611:	tlm-pkt-spec => "packet" ident . "group" expr "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident . "group" expr "id" expr "{" tlm-pkt-mem-seq "}"
		"group" => shift 623

612:	record-spec-0 => "product" "record" ident ":" type-name .
		"\n" => reduce 192
		$default => reduce 192

613:	gen-port-inst-0 => input-port-kind "input" "port" ident ":" .
		$default => reduce 94

614:	tlm-chan-4 => tlm-chan-3 "low" "{" tlm-lim-seq "}" .
		"\n" => reduce 181
		$default => reduce 181

615:	tlm-chan-5 => tlm-chan-4 "high" "{" tlm-lim-seq "}" .
		"\n" => reduce 183
		$default => reduce 183

616:	elt-sep => elt-sep . "\n"
	tlm-lim-seq => tlm-lim elt-sep . tlm-lim-seq
	tlm-lim-seq => .
	tlm-lim-seq => . tlm-lim elt-sep tlm-lim-seq
	tlm-lim => . "red" expr
	tlm-lim => . "orange" expr
	tlm-lim => . "yellow" expr
		"yellow" => shift 535
		"orange" => shift 536
		"red" => shift 537
		tlm-lim => shift 538
		tlm-lim-seq => shift 622
		"\n" => shift 248
		$default => reduce 186

617:	tlm-lim => "red" expr .
		"\n" => reduce 188
		$default => reduce 188

618:	tlm-lim => "orange" expr .
		"\n" => reduce 189
		$default => reduce 189

619:	tlm-lim => "yellow" expr .
		"\n" => reduce 190
		$default => reduce 190

620:	stmach-inst-0 => "state" "machine" "instance" ident ":" . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 621

621:	stmach-inst-0 => "state" "machine" "instance" ident ":" qual-ident .
		'$code-anno => reduce 329
		"\n" => reduce 329
		$default => reduce 329

622:	tlm-lim-seq => tlm-lim elt-sep tlm-lim-seq .
		$default => reduce 187

623:	tlm-pkt-spec => "packet" ident "group" . expr "id" expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
	tlm-pkt-spec => "packet" ident "group" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 642

624:	tlm-pktgrp-mem-seq => include-spec elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 252

625:	tlm-pktgrp-mem-seq => tlm-pkt-spec elt-sep tlm-pktgrp-mem-seq .
		$default => reduce 251

626:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" . "{" tlm-chan-id-seq "}"
		"{" => shift 641

627:	conn-graph-spec => pattern-kind "connections" "instance" qual-ident "{" qual-ident-seq "}" .
		"\n" => reduce 232
		$default => reduce 232

628:	elt-sep => elt-sep . "\n"
	qual-ident-seq => qual-ident elt-sep . qual-ident-seq
	qual-ident-seq => .
	qual-ident-seq => . qual-ident elt-sep qual-ident-seq
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 606
		qual-ident-seq => shift 640
		"\n" => shift 248
		$default => reduce 310

629:	conn-to => qual-ident "[" . expr "]"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 639

630:	connection => "unmatched" conn-from "->" conn-to .
		"\n" => reduce 243
		$default => reduce 243

631:	conn-from => qual-ident "[" expr "]" .
		$default => reduce 245

632:	stmach-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 638

633:	action-seq => ident elt-sep action-seq .
		$default => reduce 370

634:	st-tran-spec-1 => st-tran-spec-0 "if" ident .
		$default => reduce 362

635:	state-defn-mem => "choice" ident "{" . "if" ident trans-expr "else" trans-expr "}"
		"if" => shift 637

636:	state-defn-mem-seq => state-defn-mem mem-sep state-defn-mem-seq .
		$default => reduce 351

637:	state-defn-mem => "choice" ident "{" "if" . ident trans-expr "else" trans-expr "}"
	ident => . '$ident
		'$ident => shift 60
		ident => shift 648

638:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		"enter" => shift 453
		do-expr => shift 454
		trans-expr-0 => shift 455
		trans-expr-1 => shift 456
		trans-expr => shift 647

639:	conn-to => qual-ident "[" expr . "]"
		"]" => shift 646

640:	qual-ident-seq => qual-ident elt-sep qual-ident-seq .
		$default => reduce 311

641:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" . tlm-chan-id-seq "}"
	tlm-chan-id-seq => .
	tlm-chan-id-seq => . tlm-chan-id-seq elt-sep qual-ident
		tlm-chan-id-seq => shift 645
		"\n" => reduce 258
		$default => reduce 258

642:	tlm-pkt-spec => "packet" ident "group" expr . "{" tlm-pkt-mem-seq "}"
	tlm-pkt-spec => "packet" ident "group" expr . "id" expr "{" tlm-pkt-mem-seq "}"
		"id" => shift 643
		"{" => shift 644

643:	tlm-pkt-spec => "packet" ident "group" expr "id" . expr "{" tlm-pkt-mem-seq "}"
	expr => . add-expr
	add-expr => . mul-expr
	add-expr => . add-expr "+" mul-expr
	add-expr => . add-expr "-" mul-expr
	mul-expr => . unary-expr
	mul-expr => . mul-expr "*" unary-expr
	mul-expr => . mul-expr "/" unary-expr
	unary-expr => . prim-expr
	unary-expr => . "-" unary-expr
	prim-expr => . qual-ident
	prim-expr => . number
	prim-expr => . string
	prim-expr => . "[" expr-seq "]"
	prim-expr => . "{" struct-elt-seq "}"
	prim-expr => . "(" expr ")"
	number => . '$float
	number => . '$fixed
	string => . '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		'$string => shift 98
		'$fixed => shift 119
		'$float => shift 120
		"(" => shift 121
		"{" => shift 122
		"[" => shift 123
		string => shift 124
		number => shift 125
		qual-ident => shift 126
		"-" => shift 127
		prim-expr => shift 128
		unary-expr => shift 129
		mul-expr => shift 130
		add-expr => shift 131
		expr => shift 656

644:	tlm-pkt-spec => "packet" ident "group" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 653
		qual-ident => shift 654
		tlm-pkt-mem-seq => shift 655
		$default => reduce 255

645:	tlm-chan-id-seq => tlm-chan-id-seq . elt-sep qual-ident
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq . "}"
		"}" => shift 651
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 652

646:	conn-to => qual-ident "[" expr "]" .
		"\n" => reduce 247
		$default => reduce 247

647:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 650

648:	state-defn-mem => "choice" ident "{" "if" ident . trans-expr "else" trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		"enter" => shift 453
		do-expr => shift 454
		trans-expr-0 => shift 455
		trans-expr-1 => shift 456
		trans-expr => shift 649

649:	state-defn-mem => "choice" ident "{" "if" ident trans-expr . "else" trans-expr "}"
		"else" => shift 662

650:	stmach-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 339
		$default => reduce 339

651:	tlm-pktset-spec => "telemetry" "packets" ident "{" tlm-pktgrp-mem-seq "}" "omit" "{" tlm-chan-id-seq "}" .
		"\n" => reduce 249
		$default => reduce 249

652:	elt-sep => elt-sep . "\n"
	tlm-chan-id-seq => tlm-chan-id-seq elt-sep . qual-ident
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		qual-ident => shift 661
		"\n" => shift 248

653:	tlm-pkt-mem-seq => include-spec . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 660

654:	tlm-pkt-mem-seq => qual-ident . elt-sep tlm-pkt-mem-seq
	elt-sep => . ","
	elt-sep => . "\n"
	elt-sep => . elt-sep "\n"
		"\n" => shift 201
		"," => shift 202
		elt-sep => shift 659

655:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 658

656:	tlm-pkt-spec => "packet" ident "group" expr "id" expr . "{" tlm-pkt-mem-seq "}"
		"{" => shift 657

657:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" . tlm-pkt-mem-seq "}"
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 653
		qual-ident => shift 654
		tlm-pkt-mem-seq => shift 666
		$default => reduce 255

658:	tlm-pkt-spec => "packet" ident "group" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 253
		$default => reduce 253

659:	elt-sep => elt-sep . "\n"
	tlm-pkt-mem-seq => qual-ident elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 653
		qual-ident => shift 654
		tlm-pkt-mem-seq => shift 665
		"\n" => shift 248
		$default => reduce 255

660:	elt-sep => elt-sep . "\n"
	tlm-pkt-mem-seq => include-spec elt-sep . tlm-pkt-mem-seq
	tlm-pkt-mem-seq => .
	tlm-pkt-mem-seq => . qual-ident elt-sep tlm-pkt-mem-seq
	tlm-pkt-mem-seq => . include-spec elt-sep tlm-pkt-mem-seq
	include-spec => . "include" '$string
	qual-ident => . qual-ident-1
	qual-ident-1 => . ident
	qual-ident-1 => . qual-ident-1 "." ident
	ident => . '$ident
		'$ident => shift 60
		ident => shift 103
		qual-ident-1 => shift 104
		"include" => shift 50
		include-spec => shift 653
		qual-ident => shift 654
		tlm-pkt-mem-seq => shift 664
		"\n" => shift 248
		$default => reduce 255

661:	tlm-chan-id-seq => tlm-chan-id-seq elt-sep qual-ident .
		"\n" => reduce 259
		$default => reduce 259

662:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" . trans-expr "}"
	trans-expr => . trans-expr-1
	trans-expr-1 => . trans-expr-0
	trans-expr-1 => . do-expr trans-expr-0
	trans-expr-0 => . "enter" qual-ident
	do-expr => . "do" "{" action-seq "}"
		"do" => shift 452
		"enter" => shift 453
		do-expr => shift 454
		trans-expr-0 => shift 455
		trans-expr-1 => shift 456
		trans-expr => shift 663

663:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr . "}"
		"}" => shift 668

664:	tlm-pkt-mem-seq => include-spec elt-sep tlm-pkt-mem-seq .
		$default => reduce 257

665:	tlm-pkt-mem-seq => qual-ident elt-sep tlm-pkt-mem-seq .
		$default => reduce 256

666:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq . "}"
		"}" => shift 667

667:	tlm-pkt-spec => "packet" ident "group" expr "id" expr "{" tlm-pkt-mem-seq "}" .
		"\n" => reduce 254
		$default => reduce 254

668:	state-defn-mem => "choice" ident "{" "if" ident trans-expr "else" trans-expr "}" .
		"\n" => reduce 354
		$default => reduce 354

